window.Modernizr = function(t, e, i) {
    function r(t) {
        f.cssText = t
    }
    function n(t, e) {
        return typeof t === e
    }
    var o, a, s, l = "2.8.3", h = {}, c = !0, u = e.documentElement, p = "modernizr", d = e.createElement(p), f = d.style, m = ({}.toString,
    " -webkit- -moz- -o- -ms- ".split(" ")), g = {}, E = [], y = E.slice, v = function(t, i, r, n) {
        var o, a, s, l, h = e.createElement("div"), c = e.body, d = c || e.createElement("body");
        if (parseInt(r, 10))
            for (; r--; )
                s = e.createElement("div"),
                s.id = n ? n[r] : p + (r + 1),
                h.appendChild(s);
        return o = ["&#173;", '<style id="s', p, '">', t, "</style>"].join(""),
        h.id = p,
        (c ? h : d).innerHTML += o,
        d.appendChild(h),
        c || (d.style.background = "",
        d.style.overflow = "hidden",
        l = u.style.overflow,
        u.style.overflow = "hidden",
        u.appendChild(d)),
        a = i(h, t),
        c ? h.parentNode.removeChild(h) : (d.parentNode.removeChild(d),
        u.style.overflow = l),
        !!a
    }
    , _ = {}.hasOwnProperty;
    s = n(_, "undefined") || n(_.call, "undefined") ? function(t, e) {
        return e in t && n(t.constructor.prototype[e], "undefined")
    }
     : function(t, e) {
        return _.call(t, e)
    }
    ,
    Function.prototype.bind || (Function.prototype.bind = function(t) {
        var e = this;
        if ("function" != typeof e)
            throw new TypeError;
        var i = y.call(arguments, 1)
          , r = function() {
            if (this instanceof r) {
                var n = function() {}
                ;
                n.prototype = e.prototype;
                var o = new n
                  , a = e.apply(o, i.concat(y.call(arguments)));
                return Object(a) === a ? a : o
            }
            return e.apply(t, i.concat(y.call(arguments)))
        }
        ;
        return r
    }
    ),
    g.touch = function() {
        var i;
        return "ontouchstart" in t || t.DocumentTouch && e instanceof DocumentTouch ? i = !0 : v(["@media (", m.join("touch-enabled),("), p, ")", "{#modernizr{top:9px;position:absolute}}"].join(""), function(t) {
            i = 9 === t.offsetTop
        }
        ),
        i
    }
    ;
    for (var x in g)
        s(g, x) && (a = x.toLowerCase(),
        h[a] = g[x](),
        E.push((h[a] ? "" : "no-") + a));
    return h.addTest = function(t, e) {
        if ("object" == typeof t)
            for (var r in t)
                s(t, r) && h.addTest(r, t[r]);
        else {
            if (t = t.toLowerCase(),
            h[t] !== i)
                return h;
            e = "function" == typeof e ? e() : e,
            "undefined" != typeof c && c && (u.className += " " + (e ? "" : "no-") + t),
            h[t] = e
        }
        return h
    }
    ,
    r(""),
    d = o = null ,
    function(t, e) {
        function i(t, e) {
            var i = t.createElement("p")
              , r = t.getElementsByTagName("head")[0] || t.documentElement;
            return i.innerHTML = "x<style>" + e + "</style>",
            r.insertBefore(i.lastChild, r.firstChild)
        }
        function r() {
            var t = y.elements;
            return "string" == typeof t ? t.split(" ") : t
        }
        function n(t) {
            var e = E[t[m]];
            return e || (e = {},
            g++,
            t[m] = g,
            E[g] = e),
            e
        }
        function o(t, i, r) {
            if (i || (i = e),
            c)
                return i.createElement(t);
            r || (r = n(i));
            var o;
            return o = r.cache[t] ? r.cache[t].cloneNode() : f.test(t) ? (r.cache[t] = r.createElem(t)).cloneNode() : r.createElem(t),
            !o.canHaveChildren || d.test(t) || o.tagUrn ? o : r.frag.appendChild(o)
        }
        function a(t, i) {
            if (t || (t = e),
            c)
                return t.createDocumentFragment();
            i = i || n(t);
            for (var o = i.frag.cloneNode(), a = 0, s = r(), l = s.length; l > a; a++)
                o.createElement(s[a]);
            return o
        }
        function s(t, e) {
            e.cache || (e.cache = {},
            e.createElem = t.createElement,
            e.createFrag = t.createDocumentFragment,
            e.frag = e.createFrag()),
            t.createElement = function(i) {
                return y.shivMethods ? o(i, t, e) : e.createElem(i)
            }
            ,
            t.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + r().join().replace(/[\w\-]+/g, function(t) {
                return e.createElem(t),
                e.frag.createElement(t),
                'c("' + t + '")'
            }
            ) + ");return n}")(y, e.frag)
        }
        function l(t) {
            t || (t = e);
            var r = n(t);
            return y.shivCSS && !h && !r.hasCSS && (r.hasCSS = !!i(t, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),
            c || s(t, r),
            t
        }
        var h, c, u = "3.7.0", p = t.html5 || {}, d = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, f = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, m = "_html5shiv", g = 0, E = {};
        !function() {
            try {
                var t = e.createElement("a");
                t.innerHTML = "<xyz></xyz>",
                h = "hidden" in t,
                c = 1 == t.childNodes.length || function() {
                    e.createElement("a");
                    var t = e.createDocumentFragment();
                    return "undefined" == typeof t.cloneNode || "undefined" == typeof t.createDocumentFragment || "undefined" == typeof t.createElement
                }
                ()
            } catch (i) {
                h = !0,
                c = !0
            }
        }
        ();
        var y = {
            elements: p.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",
            version: u,
            shivCSS: p.shivCSS !== !1,
            supportsUnknownElements: c,
            shivMethods: p.shivMethods !== !1,
            type: "default",
            shivDocument: l,
            createElement: o,
            createDocumentFragment: a
        };
        t.html5 = y,
        l(e)
    }
    (this, e),
    h._version = l,
    h._prefixes = m,
    h.testStyles = v,
    u.className = u.className.replace(/(^|\s)no-js(\s|$)/, "$1$2") + (c ? " js " + E.join(" ") : ""),
    h
}
(this, this.document),
function(t, e, i) {
    function r(t) {
        return "[object Function]" == g.call(t)
    }
    function n(t) {
        return "string" == typeof t
    }
    function o() {}
    function a(t) {
        return !t || "loaded" == t || "complete" == t || "uninitialized" == t
    }
    function s() {
        var t = E.shift();
        y = 1,
        t ? t.t ? f(function() {
            ("c" == t.t ? p.injectCss : p.injectJs)(t.s, 0, t.a, t.x, t.e, 1)
        }
        , 0) : (t(),
        s()) : y = 0
    }
    function l(t, i, r, n, o, l, h) {
        function c(e) {
            if (!d && a(u.readyState) && (v.r = d = 1,
            !y && s(),
            u.onload = u.onreadystatechange = null ,
            e)) {
                "img" != t && f(function() {
                    x.removeChild(u)
                }
                , 50);
                for (var r in H[i])
                    H[i].hasOwnProperty(r) && H[i][r].onload()
            }
        }
        var h = h || p.errorTimeout
          , u = e.createElement(t)
          , d = 0
          , g = 0
          , v = {
            t: r,
            s: i,
            e: o,
            a: l,
            x: h
        };
        1 === H[i] && (g = 1,
        H[i] = []),
        "object" == t ? u.data = i : (u.src = i,
        u.type = t),
        u.width = u.height = "0",
        u.onerror = u.onload = u.onreadystatechange = function() {
            c.call(this, g)
        }
        ,
        E.splice(n, 0, v),
        "img" != t && (g || 2 === H[i] ? (x.insertBefore(u, _ ? null  : m),
        f(c, h)) : H[i].push(u))
    }
    function h(t, e, i, r, o) {
        return y = 0,
        e = e || "j",
        n(t) ? l("c" == e ? w : T, t, e, this.i++, i, r, o) : (E.splice(this.i++, 0, t),
        1 == E.length && s()),
        this
    }
    function c() {
        var t = p;
        return t.loader = {
            load: h,
            i: 0
        },
        t
    }
    var u, p, d = e.documentElement, f = t.setTimeout, m = e.getElementsByTagName("script")[0], g = {}.toString, E = [], y = 0, v = "MozAppearance" in d.style, _ = v && !!e.createRange().compareNode, x = _ ? d : m.parentNode, d = t.opera && "[object Opera]" == g.call(t.opera), d = !!e.attachEvent && !d, T = v ? "object" : d ? "script" : "img", w = d ? "script" : T, b = Array.isArray || function(t) {
        return "[object Array]" == g.call(t)
    }
    , R = [], H = {}, S = {
        timeout: function(t, e) {
            return e.length && (t.timeout = e[0]),
            t
        }
    };
    p = function(t) {
        function e(t) {
            var e, i, r, t = t.split("!"), n = R.length, o = t.pop(), a = t.length, o = {
                url: o,
                origUrl: o,
                prefixes: t
            };
            for (i = 0; a > i; i++)
                r = t[i].split("="),
                (e = S[r.shift()]) && (o = e(o, r));
            for (i = 0; n > i; i++)
                o = R[i](o);
            return o
        }
        function a(t, n, o, a, s) {
            var l = e(t)
              , h = l.autoCallback;
            l.url.split(".").pop().split("?").shift(),
            l.bypass || (n && (n = r(n) ? n : n[t] || n[a] || n[t.split("/").pop().split("?")[0]]),
            l.instead ? l.instead(t, n, o, a, s) : (H[l.url] ? l.noexec = !0 : H[l.url] = 1,
            o.load(l.url, l.forceCSS || !l.forceJS && "css" == l.url.split(".").pop().split("?").shift() ? "c" : i, l.noexec, l.attrs, l.timeout),
            (r(n) || r(h)) && o.load(function() {
                c(),
                n && n(l.origUrl, s, a),
                h && h(l.origUrl, s, a),
                H[l.url] = 2
            }
            )))
        }
        function s(t, e) {
            function i(t, i) {
                if (t) {
                    if (n(t))
                        i || (u = function() {
                            var t = [].slice.call(arguments);
                            p.apply(this, t),
                            d()
                        }
                        ),
                        a(t, u, e, 0, h);
                    else if (Object(t) === t)
                        for (l in s = function() {
                            var e, i = 0;
                            for (e in t)
                                t.hasOwnProperty(e) && i++;
                            return i
                        }
                        (),
                        t)
                            t.hasOwnProperty(l) && (!i && !--s && (r(u) ? u = function() {
                                var t = [].slice.call(arguments);
                                p.apply(this, t),
                                d()
                            }
                             : u[l] = function(t) {
                                return function() {
                                    var e = [].slice.call(arguments);
                                    t && t.apply(this, e),
                                    d()
                                }
                            }
                            (p[l])),
                            a(t[l], u, e, l, h))
                } else
                    !i && d()
            }
            var s, l, h = !!t.test, c = t.load || t.both, u = t.callback || o, p = u, d = t.complete || o;
            i(h ? t.yep : t.nope, !!c),
            c && i(c)
        }
        var l, h, u = this.yepnope.loader;
        if (n(t))
            a(t, 0, u, 0);
        else if (b(t))
            for (l = 0; l < t.length; l++)
                h = t[l],
                n(h) ? a(h, 0, u, 0) : b(h) ? p(h) : Object(h) === h && s(h, u);
        else
            Object(t) === t && s(t, u)
    }
    ,
    p.addPrefix = function(t, e) {
        S[t] = e
    }
    ,
    p.addFilter = function(t) {
        R.push(t)
    }
    ,
    p.errorTimeout = 1e4,
    null  == e.readyState && e.addEventListener && (e.readyState = "loading",
    e.addEventListener("DOMContentLoaded", u = function() {
        e.removeEventListener("DOMContentLoaded", u, 0),
        e.readyState = "complete"
    }
    , 0)),
    t.yepnope = c(),
    t.yepnope.executeStack = s,
    t.yepnope.injectJs = function(t, i, r, n, l, h) {
        var c, u, d = e.createElement("script"), n = n || p.errorTimeout;
        d.src = t;
        for (u in r)
            d.setAttribute(u, r[u]);
        i = h ? s : i || o,
        d.onreadystatechange = d.onload = function() {
            !c && a(d.readyState) && (c = 1,
            i(),
            d.onload = d.onreadystatechange = null )
        }
        ,
        f(function() {
            c || (c = 1,
            i(1))
        }
        , n),
        l ? d.onload() : m.parentNode.insertBefore(d, m)
    }
    ,
    t.yepnope.injectCss = function(t, i, r, n, a, l) {
        var h, n = e.createElement("link"), i = l ? s : i || o;
        n.href = t,
        n.rel = "stylesheet",
        n.type = "text/css";
        for (h in r)
            n.setAttribute(h, r[h]);
        a || (m.parentNode.insertBefore(n, m),
        f(i, 0))
    }
}
(this, document),
Modernizr.load = function() {
    yepnope.apply(window, [].slice.call(arguments, 0))
}
,
function() {
    function t(t) {
        function e(e, i, r, n, o, a) {
            for (; o >= 0 && a > o; o += t) {
                var s = n ? n[o] : o;
                r = i(r, e[s], s, e)
            }
            return r
        }
        return function(i, r, n, o) {
            r = v(r, o, 4);
            var a = !H(i) && y.keys(i)
              , s = (a || i).length
              , l = t > 0 ? 0 : s - 1;
            return arguments.length < 3 && (n = i[a ? a[l] : l],
            l += t),
            e(i, r, n, a, l, s)
        }
    }
    function e(t) {
        return function(e, i, r) {
            i = _(i, r);
            for (var n = R(e), o = t > 0 ? 0 : n - 1; o >= 0 && n > o; o += t)
                if (i(e[o], o, e))
                    return o;
            return -1
        }
    }
    function i(t, e, i) {
        return function(r, n, o) {
            var a = 0
              , s = R(r);
            if ("number" == typeof o)
                t > 0 ? a = o >= 0 ? o : Math.max(o + s, a) : s = o >= 0 ? Math.min(o + 1, s) : o + s + 1;
            else if (i && o && s)
                return o = i(r, n),
                r[o] === n ? o : -1;
            if (n !== n)
                return o = e(c.call(r, a, s), y.isNaN),
                o >= 0 ? o + a : -1;
            for (o = t > 0 ? a : s - 1; o >= 0 && s > o; o += t)
                if (r[o] === n)
                    return o;
            return -1
        }
    }
    function r(t, e) {
        var i = P.length
          , r = t.constructor
          , n = y.isFunction(r) && r.prototype || s
          , o = "constructor";
        for (y.has(t, o) && !y.contains(e, o) && e.push(o); i--; )
            o = P[i],
            o in t && t[o] !== n[o] && !y.contains(e, o) && e.push(o)
    }
    var n = this
      , o = n._
      , a = Array.prototype
      , s = Object.prototype
      , l = Function.prototype
      , h = a.push
      , c = a.slice
      , u = s.toString
      , p = s.hasOwnProperty
      , d = Array.isArray
      , f = Object.keys
      , m = l.bind
      , g = Object.create
      , E = function() {}
      , y = function(t) {
        return t instanceof y ? t : this instanceof y ? void (this._wrapped = t) : new y(t)
    }
    ;
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = y),
    exports._ = y) : n._ = y,
    y.VERSION = "1.8.3";
    var v = function(t, e, i) {
        if (void 0 === e)
            return t;
        switch (null  == i ? 3 : i) {
        case 1:
            return function(i) {
                return t.call(e, i)
            }
            ;
        case 2:
            return function(i, r) {
                return t.call(e, i, r)
            }
            ;
        case 3:
            return function(i, r, n) {
                return t.call(e, i, r, n)
            }
            ;
        case 4:
            return function(i, r, n, o) {
                return t.call(e, i, r, n, o)
            }
        }
        return function() {
            return t.apply(e, arguments)
        }
    }
      , _ = function(t, e, i) {
        return null  == t ? y.identity : y.isFunction(t) ? v(t, e, i) : y.isObject(t) ? y.matcher(t) : y.property(t)
    }
    ;
    y.iteratee = function(t, e) {
        return _(t, e, 1 / 0)
    }
    ;
    var x = function(t, e) {
        return function(i) {
            var r = arguments.length;
            if (2 > r || null  == i)
                return i;
            for (var n = 1; r > n; n++)
                for (var o = arguments[n], a = t(o), s = a.length, l = 0; s > l; l++) {
                    var h = a[l];
                    e && void 0 !== i[h] || (i[h] = o[h])
                }
            return i
        }
    }
      , T = function(t) {
        if (!y.isObject(t))
            return {};
        if (g)
            return g(t);
        E.prototype = t;
        var e = new E;
        return E.prototype = null ,
        e
    }
      , w = function(t) {
        return function(e) {
            return null  == e ? void 0 : e[t]
        }
    }
      , b = Math.pow(2, 53) - 1
      , R = w("length")
      , H = function(t) {
        var e = R(t);
        return "number" == typeof e && e >= 0 && b >= e
    }
    ;
    y.each = y.forEach = function(t, e, i) {
        e = v(e, i);
        var r, n;
        if (H(t))
            for (r = 0,
            n = t.length; n > r; r++)
                e(t[r], r, t);
        else {
            var o = y.keys(t);
            for (r = 0,
            n = o.length; n > r; r++)
                e(t[o[r]], o[r], t)
        }
        return t
    }
    ,
    y.map = y.collect = function(t, e, i) {
        e = _(e, i);
        for (var r = !H(t) && y.keys(t), n = (r || t).length, o = Array(n), a = 0; n > a; a++) {
            var s = r ? r[a] : a;
            o[a] = e(t[s], s, t)
        }
        return o
    }
    ,
    y.reduce = y.foldl = y.inject = t(1),
    y.reduceRight = y.foldr = t(-1),
    y.find = y.detect = function(t, e, i) {
        var r;
        return r = H(t) ? y.findIndex(t, e, i) : y.findKey(t, e, i),
        void 0 !== r && -1 !== r ? t[r] : void 0
    }
    ,
    y.filter = y.select = function(t, e, i) {
        var r = [];
        return e = _(e, i),
        y.each(t, function(t, i, n) {
            e(t, i, n) && r.push(t)
        }
        ),
        r
    }
    ,
    y.reject = function(t, e, i) {
        return y.filter(t, y.negate(_(e)), i)
    }
    ,
    y.every = y.all = function(t, e, i) {
        e = _(e, i);
        for (var r = !H(t) && y.keys(t), n = (r || t).length, o = 0; n > o; o++) {
            var a = r ? r[o] : o;
            if (!e(t[a], a, t))
                return !1
        }
        return !0
    }
    ,
    y.some = y.any = function(t, e, i) {
        e = _(e, i);
        for (var r = !H(t) && y.keys(t), n = (r || t).length, o = 0; n > o; o++) {
            var a = r ? r[o] : o;
            if (e(t[a], a, t))
                return !0
        }
        return !1
    }
    ,
    y.contains = y.includes = y.include = function(t, e, i, r) {
        return H(t) || (t = y.values(t)),
        ("number" != typeof i || r) && (i = 0),
        y.indexOf(t, e, i) >= 0
    }
    ,
    y.invoke = function(t, e) {
        var i = c.call(arguments, 2)
          , r = y.isFunction(e);
        return y.map(t, function(t) {
            var n = r ? e : t[e];
            return null  == n ? n : n.apply(t, i)
        }
        )
    }
    ,
    y.pluck = function(t, e) {
        return y.map(t, y.property(e))
    }
    ,
    y.where = function(t, e) {
        return y.filter(t, y.matcher(e))
    }
    ,
    y.findWhere = function(t, e) {
        return y.find(t, y.matcher(e))
    }
    ,
    y.max = function(t, e, i) {
        var r, n, o = -1 / 0, a = -1 / 0;
        if (null  == e && null  != t) {
            t = H(t) ? t : y.values(t);
            for (var s = 0, l = t.length; l > s; s++)
                r = t[s],
                r > o && (o = r)
        } else
            e = _(e, i),
            y.each(t, function(t, i, r) {
                n = e(t, i, r),
                (n > a || n === -1 / 0 && o === -1 / 0) && (o = t,
                a = n)
            }
            );
        return o
    }
    ,
    y.min = function(t, e, i) {
        var r, n, o = 1 / 0, a = 1 / 0;
        if (null  == e && null  != t) {
            t = H(t) ? t : y.values(t);
            for (var s = 0, l = t.length; l > s; s++)
                r = t[s],
                o > r && (o = r)
        } else
            e = _(e, i),
            y.each(t, function(t, i, r) {
                n = e(t, i, r),
                (a > n || 1 / 0 === n && 1 / 0 === o) && (o = t,
                a = n)
            }
            );
        return o
    }
    ,
    y.shuffle = function(t) {
        for (var e, i = H(t) ? t : y.values(t), r = i.length, n = Array(r), o = 0; r > o; o++)
            e = y.random(0, o),
            e !== o && (n[o] = n[e]),
            n[e] = i[o];
        return n
    }
    ,
    y.sample = function(t, e, i) {
        return null  == e || i ? (H(t) || (t = y.values(t)),
        t[y.random(t.length - 1)]) : y.shuffle(t).slice(0, Math.max(0, e))
    }
    ,
    y.sortBy = function(t, e, i) {
        return e = _(e, i),
        y.pluck(y.map(t, function(t, i, r) {
            return {
                value: t,
                index: i,
                criteria: e(t, i, r)
            }
        }
        ).sort(function(t, e) {
            var i = t.criteria
              , r = e.criteria;
            if (i !== r) {
                if (i > r || void 0 === i)
                    return 1;
                if (r > i || void 0 === r)
                    return -1
            }
            return t.index - e.index
        }
        ), "value")
    }
    ;
    var S = function(t) {
        return function(e, i, r) {
            var n = {};
            return i = _(i, r),
            y.each(e, function(r, o) {
                var a = i(r, o, e);
                t(n, r, a)
            }
            ),
            n
        }
    }
    ;
    y.groupBy = S(function(t, e, i) {
        y.has(t, i) ? t[i].push(e) : t[i] = [e]
    }
    ),
    y.indexBy = S(function(t, e, i) {
        t[i] = e
    }
    ),
    y.countBy = S(function(t, e, i) {
        y.has(t, i) ? t[i]++ : t[i] = 1
    }
    ),
    y.toArray = function(t) {
        return t ? y.isArray(t) ? c.call(t) : H(t) ? y.map(t, y.identity) : y.values(t) : []
    }
    ,
    y.size = function(t) {
        return null  == t ? 0 : H(t) ? t.length : y.keys(t).length
    }
    ,
    y.partition = function(t, e, i) {
        e = _(e, i);
        var r = []
          , n = [];
        return y.each(t, function(t, i, o) {
            (e(t, i, o) ? r : n).push(t)
        }
        ),
        [r, n]
    }
    ,
    y.first = y.head = y.take = function(t, e, i) {
        return null  == t ? void 0 : null  == e || i ? t[0] : y.initial(t, t.length - e)
    }
    ,
    y.initial = function(t, e, i) {
        return c.call(t, 0, Math.max(0, t.length - (null  == e || i ? 1 : e)))
    }
    ,
    y.last = function(t, e, i) {
        return null  == t ? void 0 : null  == e || i ? t[t.length - 1] : y.rest(t, Math.max(0, t.length - e))
    }
    ,
    y.rest = y.tail = y.drop = function(t, e, i) {
        return c.call(t, null  == e || i ? 1 : e)
    }
    ,
    y.compact = function(t) {
        return y.filter(t, y.identity)
    }
    ;
    var M = function(t, e, i, r) {
        for (var n = [], o = 0, a = r || 0, s = R(t); s > a; a++) {
            var l = t[a];
            if (H(l) && (y.isArray(l) || y.isArguments(l))) {
                e || (l = M(l, e, i));
                var h = 0
                  , c = l.length;
                for (n.length += c; c > h; )
                    n[o++] = l[h++]
            } else
                i || (n[o++] = l)
        }
        return n
    }
    ;
    y.flatten = function(t, e) {
        return M(t, e, !1)
    }
    ,
    y.without = function(t) {
        return y.difference(t, c.call(arguments, 1))
    }
    ,
    y.uniq = y.unique = function(t, e, i, r) {
        y.isBoolean(e) || (r = i,
        i = e,
        e = !1),
        null  != i && (i = _(i, r));
        for (var n = [], o = [], a = 0, s = R(t); s > a; a++) {
            var l = t[a]
              , h = i ? i(l, a, t) : l;
            e ? (a && o === h || n.push(l),
            o = h) : i ? y.contains(o, h) || (o.push(h),
            n.push(l)) : y.contains(n, l) || n.push(l)
        }
        return n
    }
    ,
    y.union = function() {
        return y.uniq(M(arguments, !0, !0))
    }
    ,
    y.intersection = function(t) {
        for (var e = [], i = arguments.length, r = 0, n = R(t); n > r; r++) {
            var o = t[r];
            if (!y.contains(e, o)) {
                for (var a = 1; i > a && y.contains(arguments[a], o); a++)
                    ;
                a === i && e.push(o)
            }
        }
        return e
    }
    ,
    y.difference = function(t) {
        var e = M(arguments, !0, !0, 1);
        return y.filter(t, function(t) {
            return !y.contains(e, t)
        }
        )
    }
    ,
    y.zip = function() {
        return y.unzip(arguments)
    }
    ,
    y.unzip = function(t) {
        for (var e = t && y.max(t, R).length || 0, i = Array(e), r = 0; e > r; r++)
            i[r] = y.pluck(t, r);
        return i
    }
    ,
    y.object = function(t, e) {
        for (var i = {}, r = 0, n = R(t); n > r; r++)
            e ? i[t[r]] = e[r] : i[t[r][0]] = t[r][1];
        return i
    }
    ,
    y.findIndex = e(1),
    y.findLastIndex = e(-1),
    y.sortedIndex = function(t, e, i, r) {
        i = _(i, r, 1);
        for (var n = i(e), o = 0, a = R(t); a > o; ) {
            var s = Math.floor((o + a) / 2);
            i(t[s]) < n ? o = s + 1 : a = s
        }
        return o
    }
    ,
    y.indexOf = i(1, y.findIndex, y.sortedIndex),
    y.lastIndexOf = i(-1, y.findLastIndex),
    y.range = function(t, e, i) {
        null  == e && (e = t || 0,
        t = 0),
        i = i || 1;
        for (var r = Math.max(Math.ceil((e - t) / i), 0), n = Array(r), o = 0; r > o; o++,
        t += i)
            n[o] = t;
        return n
    }
    ;
    var C = function(t, e, i, r, n) {
        if (!(r instanceof e))
            return t.apply(i, n);
        var o = T(t.prototype)
          , a = t.apply(o, n);
        return y.isObject(a) ? a : o
    }
    ;
    y.bind = function(t, e) {
        if (m && t.bind === m)
            return m.apply(t, c.call(arguments, 1));
        if (!y.isFunction(t))
            throw new TypeError("Bind must be called on a function");
        var i = c.call(arguments, 2)
          , r = function() {
            return C(t, r, e, this, i.concat(c.call(arguments)))
        }
        ;
        return r
    }
    ,
    y.partial = function(t) {
        var e = c.call(arguments, 1)
          , i = function() {
            for (var r = 0, n = e.length, o = Array(n), a = 0; n > a; a++)
                o[a] = e[a] === y ? arguments[r++] : e[a];
            for (; r < arguments.length; )
                o.push(arguments[r++]);
            return C(t, i, this, this, o)
        }
        ;
        return i
    }
    ,
    y.bindAll = function(t) {
        var e, i, r = arguments.length;
        if (1 >= r)
            throw new Error("bindAll must be passed function names");
        for (e = 1; r > e; e++)
            i = arguments[e],
            t[i] = y.bind(t[i], t);
        return t
    }
    ,
    y.memoize = function(t, e) {
        var i = function(r) {
            var n = i.cache
              , o = "" + (e ? e.apply(this, arguments) : r);
            return y.has(n, o) || (n[o] = t.apply(this, arguments)),
            n[o]
        }
        ;
        return i.cache = {},
        i
    }
    ,
    y.delay = function(t, e) {
        var i = c.call(arguments, 2);
        return setTimeout(function() {
            return t.apply(null , i)
        }
        , e)
    }
    ,
    y.defer = y.partial(y.delay, y, 1),
    y.throttle = function(t, e, i) {
        var r, n, o, a = null , s = 0;
        i || (i = {});
        var l = function() {
            s = i.leading === !1 ? 0 : y.now(),
            a = null ,
            o = t.apply(r, n),
            a || (r = n = null )
        }
        ;
        return function() {
            var h = y.now();
            s || i.leading !== !1 || (s = h);
            var c = e - (h - s);
            return r = this,
            n = arguments,
            0 >= c || c > e ? (a && (clearTimeout(a),
            a = null ),
            s = h,
            o = t.apply(r, n),
            a || (r = n = null )) : a || i.trailing === !1 || (a = setTimeout(l, c)),
            o
        }
    }
    ,
    y.debounce = function(t, e, i) {
        var r, n, o, a, s, l = function() {
            var h = y.now() - a;
            e > h && h >= 0 ? r = setTimeout(l, e - h) : (r = null ,
            i || (s = t.apply(o, n),
            r || (o = n = null )))
        }
        ;
        return function() {
            o = this,
            n = arguments,
            a = y.now();
            var h = i && !r;
            return r || (r = setTimeout(l, e)),
            h && (s = t.apply(o, n),
            o = n = null ),
            s
        }
    }
    ,
    y.wrap = function(t, e) {
        return y.partial(e, t)
    }
    ,
    y.negate = function(t) {
        return function() {
            return !t.apply(this, arguments)
        }
    }
    ,
    y.compose = function() {
        var t = arguments
          , e = t.length - 1;
        return function() {
            for (var i = e, r = t[e].apply(this, arguments); i--; )
                r = t[i].call(this, r);
            return r
        }
    }
    ,
    y.after = function(t, e) {
        return function() {
            return --t < 1 ? e.apply(this, arguments) : void 0
        }
    }
    ,
    y.before = function(t, e) {
        var i;
        return function() {
            return --t > 0 && (i = e.apply(this, arguments)),
            1 >= t && (e = null ),
            i
        }
    }
    ,
    y.once = y.partial(y.before, 2);
    var A = !{
        toString: null 
    }.propertyIsEnumerable("toString")
      , P = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
    y.keys = function(t) {
        if (!y.isObject(t))
            return [];
        if (f)
            return f(t);
        var e = [];
        for (var i in t)
            y.has(t, i) && e.push(i);
        return A && r(t, e),
        e
    }
    ,
    y.allKeys = function(t) {
        if (!y.isObject(t))
            return [];
        var e = [];
        for (var i in t)
            e.push(i);
        return A && r(t, e),
        e
    }
    ,
    y.values = function(t) {
        for (var e = y.keys(t), i = e.length, r = Array(i), n = 0; i > n; n++)
            r[n] = t[e[n]];
        return r
    }
    ,
    y.mapObject = function(t, e, i) {
        e = _(e, i);
        for (var r, n = y.keys(t), o = n.length, a = {}, s = 0; o > s; s++)
            r = n[s],
            a[r] = e(t[r], r, t);
        return a
    }
    ,
    y.pairs = function(t) {
        for (var e = y.keys(t), i = e.length, r = Array(i), n = 0; i > n; n++)
            r[n] = [e[n], t[e[n]]];
        return r
    }
    ,
    y.invert = function(t) {
        for (var e = {}, i = y.keys(t), r = 0, n = i.length; n > r; r++)
            e[t[i[r]]] = i[r];
        return e
    }
    ,
    y.functions = y.methods = function(t) {
        var e = [];
        for (var i in t)
            y.isFunction(t[i]) && e.push(i);
        return e.sort()
    }
    ,
    y.extend = x(y.allKeys),
    y.extendOwn = y.assign = x(y.keys),
    y.findKey = function(t, e, i) {
        e = _(e, i);
        for (var r, n = y.keys(t), o = 0, a = n.length; a > o; o++)
            if (r = n[o],
            e(t[r], r, t))
                return r
    }
    ,
    y.pick = function(t, e, i) {
        var r, n, o = {}, a = t;
        if (null  == a)
            return o;
        y.isFunction(e) ? (n = y.allKeys(a),
        r = v(e, i)) : (n = M(arguments, !1, !1, 1),
        r = function(t, e, i) {
            return e in i
        }
        ,
        a = Object(a));
        for (var s = 0, l = n.length; l > s; s++) {
            var h = n[s]
              , c = a[h];
            r(c, h, a) && (o[h] = c)
        }
        return o
    }
    ,
    y.omit = function(t, e, i) {
        if (y.isFunction(e))
            e = y.negate(e);
        else {
            var r = y.map(M(arguments, !1, !1, 1), String);
            e = function(t, e) {
                return !y.contains(r, e)
            }
        }
        return y.pick(t, e, i)
    }
    ,
    y.defaults = x(y.allKeys, !0),
    y.create = function(t, e) {
        var i = T(t);
        return e && y.extendOwn(i, e),
        i
    }
    ,
    y.clone = function(t) {
        return y.isObject(t) ? y.isArray(t) ? t.slice() : y.extend({}, t) : t
    }
    ,
    y.tap = function(t, e) {
        return e(t),
        t
    }
    ,
    y.isMatch = function(t, e) {
        var i = y.keys(e)
          , r = i.length;
        if (null  == t)
            return !r;
        for (var n = Object(t), o = 0; r > o; o++) {
            var a = i[o];
            if (e[a] !== n[a] || !(a in n))
                return !1
        }
        return !0
    }
    ;
    var L = function(t, e, i, r) {
        if (t === e)
            return 0 !== t || 1 / t === 1 / e;
        if (null  == t || null  == e)
            return t === e;
        t instanceof y && (t = t._wrapped),
        e instanceof y && (e = e._wrapped);
        var n = u.call(t);
        if (n !== u.call(e))
            return !1;
        switch (n) {
        case "[object RegExp]":
        case "[object String]":
            return "" + t == "" + e;
        case "[object Number]":
            return +t !== +t ? +e !== +e : 0 === +t ? 1 / +t === 1 / e : +t === +e;
        case "[object Date]":
        case "[object Boolean]":
            return +t === +e
        }
        var o = "[object Array]" === n;
        if (!o) {
            if ("object" != typeof t || "object" != typeof e)
                return !1;
            var a = t.constructor
              , s = e.constructor;
            if (a !== s && !(y.isFunction(a) && a instanceof a && y.isFunction(s) && s instanceof s) && "constructor" in t && "constructor" in e)
                return !1
        }
        i = i || [],
        r = r || [];
        for (var l = i.length; l--; )
            if (i[l] === t)
                return r[l] === e;
        if (i.push(t),
        r.push(e),
        o) {
            if (l = t.length,
            l !== e.length)
                return !1;
            for (; l--; )
                if (!L(t[l], e[l], i, r))
                    return !1
        } else {
            var h, c = y.keys(t);
            if (l = c.length,
            y.keys(e).length !== l)
                return !1;
            for (; l--; )
                if (h = c[l],
                !y.has(e, h) || !L(t[h], e[h], i, r))
                    return !1
        }
        return i.pop(),
        r.pop(),
        !0
    }
    ;
    y.isEqual = function(t, e) {
        return L(t, e)
    }
    ,
    y.isEmpty = function(t) {
        return null  == t ? !0 : H(t) && (y.isArray(t) || y.isString(t) || y.isArguments(t)) ? 0 === t.length : 0 === y.keys(t).length
    }
    ,
    y.isElement = function(t) {
        return !(!t || 1 !== t.nodeType)
    }
    ,
    y.isArray = d || function(t) {
        return "[object Array]" === u.call(t)
    }
    ,
    y.isObject = function(t) {
        var e = typeof t;
        return "function" === e || "object" === e && !!t
    }
    ,
    y.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(t) {
        y["is" + t] = function(e) {
            return u.call(e) === "[object " + t + "]"
        }
    }
    ),
    y.isArguments(arguments) || (y.isArguments = function(t) {
        return y.has(t, "callee")
    }
    ),
    "function" != typeof /./ && "object" != typeof Int8Array && (y.isFunction = function(t) {
        return "function" == typeof t || !1
    }
    ),
    y.isFinite = function(t) {
        return isFinite(t) && !isNaN(parseFloat(t))
    }
    ,
    y.isNaN = function(t) {
        return y.isNumber(t) && t !== +t
    }
    ,
    y.isBoolean = function(t) {
        return t === !0 || t === !1 || "[object Boolean]" === u.call(t)
    }
    ,
    y.isNull = function(t) {
        return null  === t
    }
    ,
    y.isUndefined = function(t) {
        return void 0 === t
    }
    ,
    y.has = function(t, e) {
        return null  != t && p.call(t, e)
    }
    ,
    y.noConflict = function() {
        return n._ = o,
        this
    }
    ,
    y.identity = function(t) {
        return t
    }
    ,
    y.constant = function(t) {
        return function() {
            return t
        }
    }
    ,
    y.noop = function() {}
    ,
    y.property = w,
    y.propertyOf = function(t) {
        return null  == t ? function() {}
         : function(e) {
            return t[e]
        }
    }
    ,
    y.matcher = y.matches = function(t) {
        return t = y.extendOwn({}, t),
        function(e) {
            return y.isMatch(e, t)
        }
    }
    ,
    y.times = function(t, e, i) {
        var r = Array(Math.max(0, t));
        e = v(e, i, 1);
        for (var n = 0; t > n; n++)
            r[n] = e(n);
        return r
    }
    ,
    y.random = function(t, e) {
        return null  == e && (e = t,
        t = 0),
        t + Math.floor(Math.random() * (e - t + 1))
    }
    ,
    y.now = Date.now || function() {
        return (new Date).getTime()
    }
    ;
    var D = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#x27;",
        "`": "&#x60;"
    }
      , k = y.invert(D)
      , O = function(t) {
        var e = function(e) {
            return t[e]
        }
          , i = "(?:" + y.keys(t).join("|") + ")"
          , r = RegExp(i)
          , n = RegExp(i, "g");
        return function(t) {
            return t = null  == t ? "" : "" + t,
            r.test(t) ? t.replace(n, e) : t
        }
    }
    ;
    y.escape = O(D),
    y.unescape = O(k),
    y.result = function(t, e, i) {
        var r = null  == t ? void 0 : t[e];
        return void 0 === r && (r = i),
        y.isFunction(r) ? r.call(t) : r
    }
    ;
    var F = 0;
    y.uniqueId = function(t) {
        var e = ++F + "";
        return t ? t + e : e
    }
    ,
    y.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var N = /(.)^/
      , z = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\u2028": "u2028",
        "\u2029": "u2029"
    }
      , V = /\\|'|\r|\n|\u2028|\u2029/g
      , I = function(t) {
        return "\\" + z[t]
    }
    ;
    y.template = function(t, e, i) {
        !e && i && (e = i),
        e = y.defaults({}, e, y.templateSettings);
        var r = RegExp([(e.escape || N).source, (e.interpolate || N).source, (e.evaluate || N).source].join("|") + "|$", "g")
          , n = 0
          , o = "__p+='";
        t.replace(r, function(e, i, r, a, s) {
            return o += t.slice(n, s).replace(V, I),
            n = s + e.length,
            i ? o += "'+\n((__t=(" + i + "))==null?'':_.escape(__t))+\n'" : r ? o += "'+\n((__t=(" + r + "))==null?'':__t)+\n'" : a && (o += "';\n" + a + "\n__p+='"),
            e
        }
        ),
        o += "';\n",
        e.variable || (o = "with(obj||{}){\n" + o + "}\n"),
        o = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + o + "return __p;\n";
        try {
            var a = new Function(e.variable || "obj","_",o)
        } catch (s) {
            throw s.source = o,
            s
        }
        var l = function(t) {
            return a.call(this, t, y)
        }
          , h = e.variable || "obj";
        return l.source = "function(" + h + "){\n" + o + "}",
        l
    }
    ,
    y.chain = function(t) {
        var e = y(t);
        return e._chain = !0,
        e
    }
    ;
    var U = function(t, e) {
        return t._chain ? y(e).chain() : e
    }
    ;
    y.mixin = function(t) {
        y.each(y.functions(t), function(e) {
            var i = y[e] = t[e];
            y.prototype[e] = function() {
                var t = [this._wrapped];
                return h.apply(t, arguments),
                U(this, i.apply(y, t))
            }
        }
        )
    }
    ,
    y.mixin(y),
    y.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(t) {
        var e = a[t];
        y.prototype[t] = function() {
            var i = this._wrapped;
            return e.apply(i, arguments),
            "shift" !== t && "splice" !== t || 0 !== i.length || delete i[0],
            U(this, i)
        }
    }
    ),
    y.each(["concat", "join", "slice"], function(t) {
        var e = a[t];
        y.prototype[t] = function() {
            return U(this, e.apply(this._wrapped, arguments))
        }
    }
    ),
    y.prototype.value = function() {
        return this._wrapped
    }
    ,
    y.prototype.valueOf = y.prototype.toJSON = y.prototype.value,
    y.prototype.toString = function() {
        return "" + this._wrapped
    }
    ,
    "function" == typeof define && define.amd && define("underscore", [], function() {
        return y
    }
    )
}
.call(this),
!function(t, e) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = t.document ? e(t, !0) : function(t) {
        if (!t.document)
            throw new Error("jQuery requires a window with a document");
        return e(t)
    }
     : e(t)
}
("undefined" != typeof window ? window : this, function(t, e) {
    function i(t) {
        var e = t.length
          , i = J.type(t);
        return "function" === i || J.isWindow(t) ? !1 : 1 === t.nodeType && e ? !0 : "array" === i || 0 === e || "number" == typeof e && e > 0 && e - 1 in t
    }
    function r(t, e, i) {
        if (J.isFunction(e))
            return J.grep(t, function(t, r) {
                return !!e.call(t, r, t) !== i
            }
            );
        if (e.nodeType)
            return J.grep(t, function(t) {
                return t === e !== i
            }
            );
        if ("string" == typeof e) {
            if (st.test(e))
                return J.filter(e, t, i);
            e = J.filter(e, t)
        }
        return J.grep(t, function(t) {
            return X.call(e, t) >= 0 !== i
        }
        )
    }
    function n(t, e) {
        for (; (t = t[e]) && 1 !== t.nodeType; )
            ;
        return t
    }
    function o(t) {
        var e = ft[t] = {};
        return J.each(t.match(dt) || [], function(t, i) {
            e[i] = !0
        }
        ),
        e
    }
    function a() {
        K.removeEventListener("DOMContentLoaded", a, !1),
        t.removeEventListener("load", a, !1),
        J.ready()
    }
    function s() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function() {
                return {}
            }
        }),
        this.expando = J.expando + Math.random()
    }
    function l(t, e, i) {
        var r;
        if (void 0 === i && 1 === t.nodeType)
            if (r = "data-" + e.replace(_t, "-$1").toLowerCase(),
            i = t.getAttribute(r),
            "string" == typeof i) {
                try {
                    i = "true" === i ? !0 : "false" === i ? !1 : "null" === i ? null  : +i + "" === i ? +i : vt.test(i) ? J.parseJSON(i) : i
                } catch (n) {}
                yt.set(t, e, i)
            } else
                i = void 0;
        return i
    }
    function h() {
        return !0
    }
    function c() {
        return !1
    }
    function u() {
        try {
            return K.activeElement
        } catch (t) {}
    }
    function p(t, e) {
        return J.nodeName(t, "table") && J.nodeName(11 !== e.nodeType ? e : e.firstChild, "tr") ? t.getElementsByTagName("tbody")[0] || t.appendChild(t.ownerDocument.createElement("tbody")) : t
    }
    function d(t) {
        return t.type = (null  !== t.getAttribute("type")) + "/" + t.type,
        t
    }
    function f(t) {
        var e = Ft.exec(t.type);
        return e ? t.type = e[1] : t.removeAttribute("type"),
        t
    }
    function m(t, e) {
        for (var i = 0, r = t.length; r > i; i++)
            Et.set(t[i], "globalEval", !e || Et.get(e[i], "globalEval"))
    }
    function g(t, e) {
        var i, r, n, o, a, s, l, h;
        if (1 === e.nodeType) {
            if (Et.hasData(t) && (o = Et.access(t),
            a = Et.set(e, o),
            h = o.events)) {
                delete a.handle,
                a.events = {};
                for (n in h)
                    for (i = 0,
                    r = h[n].length; r > i; i++)
                        J.event.add(e, n, h[n][i])
            }
            yt.hasData(t) && (s = yt.access(t),
            l = J.extend({}, s),
            yt.set(e, l))
        }
    }
    function E(t, e) {
        var i = t.getElementsByTagName ? t.getElementsByTagName(e || "*") : t.querySelectorAll ? t.querySelectorAll(e || "*") : [];
        return void 0 === e || e && J.nodeName(t, e) ? J.merge([t], i) : i
    }
    function y(t, e) {
        var i = e.nodeName.toLowerCase();
        "input" === i && bt.test(t.type) ? e.checked = t.checked : ("input" === i || "textarea" === i) && (e.defaultValue = t.defaultValue)
    }
    function v(e, i) {
        var r, n = J(i.createElement(e)).appendTo(i.body), o = t.getDefaultComputedStyle && (r = t.getDefaultComputedStyle(n[0])) ? r.display : J.css(n[0], "display");
        return n.detach(),
        o
    }
    function _(t) {
        var e = K
          , i = It[t];
        return i || (i = v(t, e),
        "none" !== i && i || (Vt = (Vt || J("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),
        e = Vt[0].contentDocument,
        e.write(),
        e.close(),
        i = v(t, e),
        Vt.detach()),
        It[t] = i),
        i
    }
    function x(t, e, i) {
        var r, n, o, a, s = t.style;
        return i = i || jt(t),
        i && (a = i.getPropertyValue(e) || i[e]),
        i && ("" !== a || J.contains(t.ownerDocument, t) || (a = J.style(t, e)),
        Bt.test(a) && Ut.test(e) && (r = s.width,
        n = s.minWidth,
        o = s.maxWidth,
        s.minWidth = s.maxWidth = s.width = a,
        a = i.width,
        s.width = r,
        s.minWidth = n,
        s.maxWidth = o)),
        void 0 !== a ? a + "" : a
    }
    function T(t, e) {
        return {
            get: function() {
                return t() ? void delete this.get : (this.get = e).apply(this, arguments)
            }
        }
    }
    function w(t, e) {
        if (e in t)
            return e;
        for (var i = e[0].toUpperCase() + e.slice(1), r = e, n = $t.length; n--; )
            if (e = $t[n] + i,
            e in t)
                return e;
        return r
    }
    function b(t, e, i) {
        var r = Wt.exec(e);
        return r ? Math.max(0, r[1] - (i || 0)) + (r[2] || "px") : e
    }
    function R(t, e, i, r, n) {
        for (var o = i === (r ? "border" : "content") ? 4 : "width" === e ? 1 : 0, a = 0; 4 > o; o += 2)
            "margin" === i && (a += J.css(t, i + Tt[o], !0, n)),
            r ? ("content" === i && (a -= J.css(t, "padding" + Tt[o], !0, n)),
            "margin" !== i && (a -= J.css(t, "border" + Tt[o] + "Width", !0, n))) : (a += J.css(t, "padding" + Tt[o], !0, n),
            "padding" !== i && (a += J.css(t, "border" + Tt[o] + "Width", !0, n)));
        return a
    }
    function H(t, e, i) {
        var r = !0
          , n = "width" === e ? t.offsetWidth : t.offsetHeight
          , o = jt(t)
          , a = "border-box" === J.css(t, "boxSizing", !1, o);
        if (0 >= n || null  == n) {
            if (n = x(t, e, o),
            (0 > n || null  == n) && (n = t.style[e]),
            Bt.test(n))
                return n;
            r = a && (Q.boxSizingReliable() || n === t.style[e]),
            n = parseFloat(n) || 0
        }
        return n + R(t, e, i || (a ? "border" : "content"), r, o) + "px"
    }
    function S(t, e) {
        for (var i, r, n, o = [], a = 0, s = t.length; s > a; a++)
            r = t[a],
            r.style && (o[a] = Et.get(r, "olddisplay"),
            i = r.style.display,
            e ? (o[a] || "none" !== i || (r.style.display = ""),
            "" === r.style.display && wt(r) && (o[a] = Et.access(r, "olddisplay", _(r.nodeName)))) : (n = wt(r),
            "none" === i && n || Et.set(r, "olddisplay", n ? i : J.css(r, "display"))));
        for (a = 0; s > a; a++)
            r = t[a],
            r.style && (e && "none" !== r.style.display && "" !== r.style.display || (r.style.display = e ? o[a] || "" : "none"));
        return t
    }
    function M(t, e, i, r, n) {
        return new M.prototype.init(t,e,i,r,n)
    }
    function C() {
        return setTimeout(function() {
            Qt = void 0
        }
        ),
        Qt = J.now()
    }
    function A(t, e) {
        var i, r = 0, n = {
            height: t
        };
        for (e = e ? 1 : 0; 4 > r; r += 2 - e)
            i = Tt[r],
            n["margin" + i] = n["padding" + i] = t;
        return e && (n.opacity = n.width = t),
        n
    }
    function P(t, e, i) {
        for (var r, n = (ie[e] || []).concat(ie["*"]), o = 0, a = n.length; a > o; o++)
            if (r = n[o].call(i, e, t))
                return r
    }
    function L(t, e, i) {
        var r, n, o, a, s, l, h, c, u = this, p = {}, d = t.style, f = t.nodeType && wt(t), m = Et.get(t, "fxshow");
        i.queue || (s = J._queueHooks(t, "fx"),
        null  == s.unqueued && (s.unqueued = 0,
        l = s.empty.fire,
        s.empty.fire = function() {
            s.unqueued || l()
        }
        ),
        s.unqueued++,
        u.always(function() {
            u.always(function() {
                s.unqueued--,
                J.queue(t, "fx").length || s.empty.fire()
            }
            )
        }
        )),
        1 === t.nodeType && ("height" in e || "width" in e) && (i.overflow = [d.overflow, d.overflowX, d.overflowY],
        h = J.css(t, "display"),
        c = "none" === h ? Et.get(t, "olddisplay") || _(t.nodeName) : h,
        "inline" === c && "none" === J.css(t, "float") && (d.display = "inline-block")),
        i.overflow && (d.overflow = "hidden",
        u.always(function() {
            d.overflow = i.overflow[0],
            d.overflowX = i.overflow[1],
            d.overflowY = i.overflow[2]
        }
        ));
        for (r in e)
            if (n = e[r],
            Zt.exec(n)) {
                if (delete e[r],
                o = o || "toggle" === n,
                n === (f ? "hide" : "show")) {
                    if ("show" !== n || !m || void 0 === m[r])
                        continue;f = !0
                }
                p[r] = m && m[r] || J.style(t, r)
            } else
                h = void 0;
        if (J.isEmptyObject(p))
            "inline" === ("none" === h ? _(t.nodeName) : h) && (d.display = h);
        else {
            m ? "hidden" in m && (f = m.hidden) : m = Et.access(t, "fxshow", {}),
            o && (m.hidden = !f),
            f ? J(t).show() : u.done(function() {
                J(t).hide()
            }
            ),
            u.done(function() {
                var e;
                Et.remove(t, "fxshow");
                for (e in p)
                    J.style(t, e, p[e])
            }
            );
            for (r in p)
                a = P(f ? m[r] : 0, r, u),
                r in m || (m[r] = a.start,
                f && (a.end = a.start,
                a.start = "width" === r || "height" === r ? 1 : 0))
        }
    }
    function D(t, e) {
        var i, r, n, o, a;
        for (i in t)
            if (r = J.camelCase(i),
            n = e[r],
            o = t[i],
            J.isArray(o) && (n = o[1],
            o = t[i] = o[0]),
            i !== r && (t[r] = o,
            delete t[i]),
            a = J.cssHooks[r],
            a && "expand" in a) {
                o = a.expand(o),
                delete t[r];
                for (i in o)
                    i in t || (t[i] = o[i],
                    e[i] = n)
            } else
                e[r] = n
    }
    function k(t, e, i) {
        var r, n, o = 0, a = ee.length, s = J.Deferred().always(function() {
            delete l.elem
        }
        ), l = function() {
            if (n)
                return !1;
            for (var e = Qt || C(), i = Math.max(0, h.startTime + h.duration - e), r = i / h.duration || 0, o = 1 - r, a = 0, l = h.tweens.length; l > a; a++)
                h.tweens[a].run(o);
            return s.notifyWith(t, [h, o, i]),
            1 > o && l ? i : (s.resolveWith(t, [h]),
            !1)
        }
        , h = s.promise({
            elem: t,
            props: J.extend({}, e),
            opts: J.extend(!0, {
                specialEasing: {}
            }, i),
            originalProperties: e,
            originalOptions: i,
            startTime: Qt || C(),
            duration: i.duration,
            tweens: [],
            createTween: function(e, i) {
                var r = J.Tween(t, h.opts, e, i, h.opts.specialEasing[e] || h.opts.easing);
                return h.tweens.push(r),
                r
            },
            stop: function(e) {
                var i = 0
                  , r = e ? h.tweens.length : 0;
                if (n)
                    return this;
                for (n = !0; r > i; i++)
                    h.tweens[i].run(1);
                return e ? s.resolveWith(t, [h, e]) : s.rejectWith(t, [h, e]),
                this
            }
        }), c = h.props;
        for (D(c, h.opts.specialEasing); a > o; o++)
            if (r = ee[o].call(h, t, c, h.opts))
                return r;
        return J.map(c, P, h),
        J.isFunction(h.opts.start) && h.opts.start.call(t, h),
        J.fx.timer(J.extend(l, {
            elem: t,
            anim: h,
            queue: h.opts.queue
        })),
        h.progress(h.opts.progress).done(h.opts.done, h.opts.complete).fail(h.opts.fail).always(h.opts.always);
    }
    function O(t) {
        return function(e, i) {
            "string" != typeof e && (i = e,
            e = "*");
            var r, n = 0, o = e.toLowerCase().match(dt) || [];
            if (J.isFunction(i))
                for (; r = o[n++]; )
                    "+" === r[0] ? (r = r.slice(1) || "*",
                    (t[r] = t[r] || []).unshift(i)) : (t[r] = t[r] || []).push(i)
        }
    }
    function F(t, e, i, r) {
        function n(s) {
            var l;
            return o[s] = !0,
            J.each(t[s] || [], function(t, s) {
                var h = s(e, i, r);
                return "string" != typeof h || a || o[h] ? a ? !(l = h) : void 0 : (e.dataTypes.unshift(h),
                n(h),
                !1)
            }
            ),
            l
        }
        var o = {}
          , a = t === xe;
        return n(e.dataTypes[0]) || !o["*"] && n("*")
    }
    function N(t, e) {
        var i, r, n = J.ajaxSettings.flatOptions || {};
        for (i in e)
            void 0 !== e[i] && ((n[i] ? t : r || (r = {}))[i] = e[i]);
        return r && J.extend(!0, t, r),
        t
    }
    function z(t, e, i) {
        for (var r, n, o, a, s = t.contents, l = t.dataTypes; "*" === l[0]; )
            l.shift(),
            void 0 === r && (r = t.mimeType || e.getResponseHeader("Content-Type"));
        if (r)
            for (n in s)
                if (s[n] && s[n].test(r)) {
                    l.unshift(n);
                    break
                }
        if (l[0] in i)
            o = l[0];
        else {
            for (n in i) {
                if (!l[0] || t.converters[n + " " + l[0]]) {
                    o = n;
                    break
                }
                a || (a = n)
            }
            o = o || a
        }
        return o ? (o !== l[0] && l.unshift(o),
        i[o]) : void 0
    }
    function V(t, e, i, r) {
        var n, o, a, s, l, h = {}, c = t.dataTypes.slice();
        if (c[1])
            for (a in t.converters)
                h[a.toLowerCase()] = t.converters[a];
        for (o = c.shift(); o; )
            if (t.responseFields[o] && (i[t.responseFields[o]] = e),
            !l && r && t.dataFilter && (e = t.dataFilter(e, t.dataType)),
            l = o,
            o = c.shift())
                if ("*" === o)
                    o = l;
                else if ("*" !== l && l !== o) {
                    if (a = h[l + " " + o] || h["* " + o],
                    !a)
                        for (n in h)
                            if (s = n.split(" "),
                            s[1] === o && (a = h[l + " " + s[0]] || h["* " + s[0]])) {
                                a === !0 ? a = h[n] : h[n] !== !0 && (o = s[0],
                                c.unshift(s[1]));
                                break
                            }
                    if (a !== !0)
                        if (a && t["throws"])
                            e = a(e);
                        else
                            try {
                                e = a(e)
                            } catch (u) {
                                return {
                                    state: "parsererror",
                                    error: a ? u : "No conversion from " + l + " to " + o
                                }
                            }
                }
        return {
            state: "success",
            data: e
        }
    }
    function I(t, e, i, r) {
        var n;
        if (J.isArray(e))
            J.each(e, function(e, n) {
                i || Re.test(t) ? r(t, n) : I(t + "[" + ("object" == typeof n ? e : "") + "]", n, i, r)
            }
            );
        else if (i || "object" !== J.type(e))
            r(t, e);
        else
            for (n in e)
                I(t + "[" + n + "]", e[n], i, r)
    }
    function U(t) {
        return J.isWindow(t) ? t : 9 === t.nodeType && t.defaultView
    }
    var B = []
      , j = B.slice
      , G = B.concat
      , W = B.push
      , X = B.indexOf
      , q = {}
      , Y = q.toString
      , $ = q.hasOwnProperty
      , Q = {}
      , K = t.document
      , Z = "2.1.1"
      , J = function(t, e) {
        return new J.fn.init(t,e)
    }
      , tt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
      , et = /^-ms-/
      , it = /-([\da-z])/gi
      , rt = function(t, e) {
        return e.toUpperCase()
    }
    ;
    J.fn = J.prototype = {
        jquery: Z,
        constructor: J,
        selector: "",
        length: 0,
        toArray: function() {
            return j.call(this)
        },
        get: function(t) {
            return null  != t ? 0 > t ? this[t + this.length] : this[t] : j.call(this)
        },
        pushStack: function(t) {
            var e = J.merge(this.constructor(), t);
            return e.prevObject = this,
            e.context = this.context,
            e
        },
        each: function(t, e) {
            return J.each(this, t, e)
        },
        map: function(t) {
            return this.pushStack(J.map(this, function(e, i) {
                return t.call(e, i, e)
            }
            ))
        },
        slice: function() {
            return this.pushStack(j.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(t) {
            var e = this.length
              , i = +t + (0 > t ? e : 0);
            return this.pushStack(i >= 0 && e > i ? [this[i]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null )
        },
        push: W,
        sort: B.sort,
        splice: B.splice
    },
    J.extend = J.fn.extend = function() {
        var t, e, i, r, n, o, a = arguments[0] || {}, s = 1, l = arguments.length, h = !1;
        for ("boolean" == typeof a && (h = a,
        a = arguments[s] || {},
        s++),
        "object" == typeof a || J.isFunction(a) || (a = {}),
        s === l && (a = this,
        s--); l > s; s++)
            if (null  != (t = arguments[s]))
                for (e in t)
                    i = a[e],
                    r = t[e],
                    a !== r && (h && r && (J.isPlainObject(r) || (n = J.isArray(r))) ? (n ? (n = !1,
                    o = i && J.isArray(i) ? i : []) : o = i && J.isPlainObject(i) ? i : {},
                    a[e] = J.extend(h, o, r)) : void 0 !== r && (a[e] = r));
        return a
    }
    ,
    J.extend({
        expando: "jQuery" + (Z + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(t) {
            throw new Error(t)
        },
        noop: function() {},
        isFunction: function(t) {
            return "function" === J.type(t)
        },
        isArray: Array.isArray,
        isWindow: function(t) {
            return null  != t && t === t.window
        },
        isNumeric: function(t) {
            return !J.isArray(t) && t - parseFloat(t) >= 0
        },
        isPlainObject: function(t) {
            return "object" !== J.type(t) || t.nodeType || J.isWindow(t) ? !1 : t.constructor && !$.call(t.constructor.prototype, "isPrototypeOf") ? !1 : !0
        },
        isEmptyObject: function(t) {
            var e;
            for (e in t)
                return !1;
            return !0
        },
        type: function(t) {
            return null  == t ? t + "" : "object" == typeof t || "function" == typeof t ? q[Y.call(t)] || "object" : typeof t
        },
        globalEval: function(t) {
            var e, i = eval;
            t = J.trim(t),
            t && (1 === t.indexOf("use strict") ? (e = K.createElement("script"),
            e.text = t,
            K.head.appendChild(e).parentNode.removeChild(e)) : i(t))
        },
        camelCase: function(t) {
            return t.replace(et, "ms-").replace(it, rt)
        },
        nodeName: function(t, e) {
            return t.nodeName && t.nodeName.toLowerCase() === e.toLowerCase()
        },
        each: function(t, e, r) {
            var n, o = 0, a = t.length, s = i(t);
            if (r) {
                if (s)
                    for (; a > o && (n = e.apply(t[o], r),
                    n !== !1); o++)
                        ;
                else
                    for (o in t)
                        if (n = e.apply(t[o], r),
                        n === !1)
                            break
            } else if (s)
                for (; a > o && (n = e.call(t[o], o, t[o]),
                n !== !1); o++)
                    ;
            else
                for (o in t)
                    if (n = e.call(t[o], o, t[o]),
                    n === !1)
                        break;
            return t
        },
        trim: function(t) {
            return null  == t ? "" : (t + "").replace(tt, "")
        },
        makeArray: function(t, e) {
            var r = e || [];
            return null  != t && (i(Object(t)) ? J.merge(r, "string" == typeof t ? [t] : t) : W.call(r, t)),
            r
        },
        inArray: function(t, e, i) {
            return null  == e ? -1 : X.call(e, t, i)
        },
        merge: function(t, e) {
            for (var i = +e.length, r = 0, n = t.length; i > r; r++)
                t[n++] = e[r];
            return t.length = n,
            t
        },
        grep: function(t, e, i) {
            for (var r, n = [], o = 0, a = t.length, s = !i; a > o; o++)
                r = !e(t[o], o),
                r !== s && n.push(t[o]);
            return n
        },
        map: function(t, e, r) {
            var n, o = 0, a = t.length, s = i(t), l = [];
            if (s)
                for (; a > o; o++)
                    n = e(t[o], o, r),
                    null  != n && l.push(n);
            else
                for (o in t)
                    n = e(t[o], o, r),
                    null  != n && l.push(n);
            return G.apply([], l)
        },
        guid: 1,
        proxy: function(t, e) {
            var i, r, n;
            return "string" == typeof e && (i = t[e],
            e = t,
            t = i),
            J.isFunction(t) ? (r = j.call(arguments, 2),
            n = function() {
                return t.apply(e || this, r.concat(j.call(arguments)))
            }
            ,
            n.guid = t.guid = t.guid || J.guid++,
            n) : void 0
        },
        now: Date.now,
        support: Q
    }),
    J.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(t, e) {
        q["[object " + e + "]"] = e.toLowerCase()
    }
    );
    var nt = function(t) {
        function e(t, e, i, r) {
            var n, o, a, s, l, h, u, d, f, m;
            if ((e ? e.ownerDocument || e : I) !== L && P(e),
            e = e || L,
            i = i || [],
            !t || "string" != typeof t)
                return i;
            if (1 !== (s = e.nodeType) && 9 !== s)
                return [];
            if (k && !r) {
                if (n = yt.exec(t))
                    if (a = n[1]) {
                        if (9 === s) {
                            if (o = e.getElementById(a),
                            !o || !o.parentNode)
                                return i;
                            if (o.id === a)
                                return i.push(o),
                                i
                        } else if (e.ownerDocument && (o = e.ownerDocument.getElementById(a)) && z(e, o) && o.id === a)
                            return i.push(o),
                            i
                    } else {
                        if (n[2])
                            return J.apply(i, e.getElementsByTagName(t)),
                            i;
                        if ((a = n[3]) && x.getElementsByClassName && e.getElementsByClassName)
                            return J.apply(i, e.getElementsByClassName(a)),
                            i
                    }
                if (x.qsa && (!O || !O.test(t))) {
                    if (d = u = V,
                    f = e,
                    m = 9 === s && t,
                    1 === s && "object" !== e.nodeName.toLowerCase()) {
                        for (h = R(t),
                        (u = e.getAttribute("id")) ? d = u.replace(_t, "\\$&") : e.setAttribute("id", d),
                        d = "[id='" + d + "'] ",
                        l = h.length; l--; )
                            h[l] = d + p(h[l]);
                        f = vt.test(t) && c(e.parentNode) || e,
                        m = h.join(",")
                    }
                    if (m)
                        try {
                            return J.apply(i, f.querySelectorAll(m)),
                            i
                        } catch (g) {} finally {
                            u || e.removeAttribute("id")
                        }
                }
            }
            return S(t.replace(lt, "$1"), e, i, r)
        }
        function i() {
            function t(i, r) {
                return e.push(i + " ") > T.cacheLength && delete t[e.shift()],
                t[i + " "] = r
            }
            var e = [];
            return t
        }
        function r(t) {
            return t[V] = !0,
            t
        }
        function n(t) {
            var e = L.createElement("div");
            try {
                return !!t(e)
            } catch (i) {
                return !1
            } finally {
                e.parentNode && e.parentNode.removeChild(e),
                e = null 
            }
        }
        function o(t, e) {
            for (var i = t.split("|"), r = t.length; r--; )
                T.attrHandle[i[r]] = e
        }
        function a(t, e) {
            var i = e && t
              , r = i && 1 === t.nodeType && 1 === e.nodeType && (~e.sourceIndex || Y) - (~t.sourceIndex || Y);
            if (r)
                return r;
            if (i)
                for (; i = i.nextSibling; )
                    if (i === e)
                        return -1;
            return t ? 1 : -1
        }
        function s(t) {
            return function(e) {
                var i = e.nodeName.toLowerCase();
                return "input" === i && e.type === t
            }
        }
        function l(t) {
            return function(e) {
                var i = e.nodeName.toLowerCase();
                return ("input" === i || "button" === i) && e.type === t
            }
        }
        function h(t) {
            return r(function(e) {
                return e = +e,
                r(function(i, r) {
                    for (var n, o = t([], i.length, e), a = o.length; a--; )
                        i[n = o[a]] && (i[n] = !(r[n] = i[n]))
                }
                )
            }
            )
        }
        function c(t) {
            return t && typeof t.getElementsByTagName !== q && t
        }
        function u() {}
        function p(t) {
            for (var e = 0, i = t.length, r = ""; i > e; e++)
                r += t[e].value;
            return r
        }
        function d(t, e, i) {
            var r = e.dir
              , n = i && "parentNode" === r
              , o = B++;
            return e.first ? function(e, i, o) {
                for (; e = e[r]; )
                    if (1 === e.nodeType || n)
                        return t(e, i, o)
            }
             : function(e, i, a) {
                var s, l, h = [U, o];
                if (a) {
                    for (; e = e[r]; )
                        if ((1 === e.nodeType || n) && t(e, i, a))
                            return !0
                } else
                    for (; e = e[r]; )
                        if (1 === e.nodeType || n) {
                            if (l = e[V] || (e[V] = {}),
                            (s = l[r]) && s[0] === U && s[1] === o)
                                return h[2] = s[2];
                            if (l[r] = h,
                            h[2] = t(e, i, a))
                                return !0
                        }
            }
        }
        function f(t) {
            return t.length > 1 ? function(e, i, r) {
                for (var n = t.length; n--; )
                    if (!t[n](e, i, r))
                        return !1;
                return !0
            }
             : t[0]
        }
        function m(t, i, r) {
            for (var n = 0, o = i.length; o > n; n++)
                e(t, i[n], r);
            return r
        }
        function g(t, e, i, r, n) {
            for (var o, a = [], s = 0, l = t.length, h = null  != e; l > s; s++)
                (o = t[s]) && (!i || i(o, r, n)) && (a.push(o),
                h && e.push(s));
            return a
        }
        function E(t, e, i, n, o, a) {
            return n && !n[V] && (n = E(n)),
            o && !o[V] && (o = E(o, a)),
            r(function(r, a, s, l) {
                var h, c, u, p = [], d = [], f = a.length, E = r || m(e || "*", s.nodeType ? [s] : s, []), y = !t || !r && e ? E : g(E, p, t, s, l), v = i ? o || (r ? t : f || n) ? [] : a : y;
                if (i && i(y, v, s, l),
                n)
                    for (h = g(v, d),
                    n(h, [], s, l),
                    c = h.length; c--; )
                        (u = h[c]) && (v[d[c]] = !(y[d[c]] = u));
                if (r) {
                    if (o || t) {
                        if (o) {
                            for (h = [],
                            c = v.length; c--; )
                                (u = v[c]) && h.push(y[c] = u);
                            o(null , v = [], h, l)
                        }
                        for (c = v.length; c--; )
                            (u = v[c]) && (h = o ? et.call(r, u) : p[c]) > -1 && (r[h] = !(a[h] = u))
                    }
                } else
                    v = g(v === a ? v.splice(f, v.length) : v),
                    o ? o(null , a, v, l) : J.apply(a, v)
            }
            )
        }
        function y(t) {
            for (var e, i, r, n = t.length, o = T.relative[t[0].type], a = o || T.relative[" "], s = o ? 1 : 0, l = d(function(t) {
                return t === e
            }
            , a, !0), h = d(function(t) {
                return et.call(e, t) > -1
            }
            , a, !0), c = [function(t, i, r) {
                return !o && (r || i !== M) || ((e = i).nodeType ? l(t, i, r) : h(t, i, r))
            }
            ]; n > s; s++)
                if (i = T.relative[t[s].type])
                    c = [d(f(c), i)];
                else {
                    if (i = T.filter[t[s].type].apply(null , t[s].matches),
                    i[V]) {
                        for (r = ++s; n > r && !T.relative[t[r].type]; r++)
                            ;
                        return E(s > 1 && f(c), s > 1 && p(t.slice(0, s - 1).concat({
                            value: " " === t[s - 2].type ? "*" : ""
                        })).replace(lt, "$1"), i, r > s && y(t.slice(s, r)), n > r && y(t = t.slice(r)), n > r && p(t))
                    }
                    c.push(i)
                }
            return f(c)
        }
        function v(t, i) {
            var n = i.length > 0
              , o = t.length > 0
              , a = function(r, a, s, l, h) {
                var c, u, p, d = 0, f = "0", m = r && [], E = [], y = M, v = r || o && T.find.TAG("*", h), _ = U += null  == y ? 1 : Math.random() || .1, x = v.length;
                for (h && (M = a !== L && a); f !== x && null  != (c = v[f]); f++) {
                    if (o && c) {
                        for (u = 0; p = t[u++]; )
                            if (p(c, a, s)) {
                                l.push(c);
                                break
                            }
                        h && (U = _)
                    }
                    n && ((c = !p && c) && d--,
                    r && m.push(c))
                }
                if (d += f,
                n && f !== d) {
                    for (u = 0; p = i[u++]; )
                        p(m, E, a, s);
                    if (r) {
                        if (d > 0)
                            for (; f--; )
                                m[f] || E[f] || (E[f] = K.call(l));
                        E = g(E)
                    }
                    J.apply(l, E),
                    h && !r && E.length > 0 && d + i.length > 1 && e.uniqueSort(l)
                }
                return h && (U = _,
                M = y),
                m
            }
            ;
            return n ? r(a) : a
        }
        var _, x, T, w, b, R, H, S, M, C, A, P, L, D, k, O, F, N, z, V = "sizzle" + -new Date, I = t.document, U = 0, B = 0, j = i(), G = i(), W = i(), X = function(t, e) {
            return t === e && (A = !0),
            0
        }
        , q = "undefined", Y = 1 << 31, $ = {}.hasOwnProperty, Q = [], K = Q.pop, Z = Q.push, J = Q.push, tt = Q.slice, et = Q.indexOf || function(t) {
            for (var e = 0, i = this.length; i > e; e++)
                if (this[e] === t)
                    return e;
            return -1
        }
        , it = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", rt = "[\\x20\\t\\r\\n\\f]", nt = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", ot = nt.replace("w", "w#"), at = "\\[" + rt + "*(" + nt + ")(?:" + rt + "*([*^$|!~]?=)" + rt + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + ot + "))|)" + rt + "*\\]", st = ":(" + nt + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + at + ")*)|.*)\\)|)", lt = new RegExp("^" + rt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + rt + "+$","g"), ht = new RegExp("^" + rt + "*," + rt + "*"), ct = new RegExp("^" + rt + "*([>+~]|" + rt + ")" + rt + "*"), ut = new RegExp("=" + rt + "*([^\\]'\"]*?)" + rt + "*\\]","g"), pt = new RegExp(st), dt = new RegExp("^" + ot + "$"), ft = {
            ID: new RegExp("^#(" + nt + ")"),
            CLASS: new RegExp("^\\.(" + nt + ")"),
            TAG: new RegExp("^(" + nt.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + at),
            PSEUDO: new RegExp("^" + st),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + rt + "*(even|odd|(([+-]|)(\\d*)n|)" + rt + "*(?:([+-]|)" + rt + "*(\\d+)|))" + rt + "*\\)|)","i"),
            bool: new RegExp("^(?:" + it + ")$","i"),
            needsContext: new RegExp("^" + rt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + rt + "*((?:-\\d)?\\d*)" + rt + "*\\)|)(?=[^-]|$)","i")
        }, mt = /^(?:input|select|textarea|button)$/i, gt = /^h\d$/i, Et = /^[^{]+\{\s*\[native \w/, yt = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, vt = /[+~]/, _t = /'|\\/g, xt = new RegExp("\\\\([\\da-f]{1,6}" + rt + "?|(" + rt + ")|.)","ig"), Tt = function(t, e, i) {
            var r = "0x" + e - 65536;
            return r !== r || i ? e : 0 > r ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320)
        }
        ;
        try {
            J.apply(Q = tt.call(I.childNodes), I.childNodes),
            Q[I.childNodes.length].nodeType
        } catch (wt) {
            J = {
                apply: Q.length ? function(t, e) {
                    Z.apply(t, tt.call(e))
                }
                 : function(t, e) {
                    for (var i = t.length, r = 0; t[i++] = e[r++]; )
                        ;
                    t.length = i - 1
                }
            }
        }
        x = e.support = {},
        b = e.isXML = function(t) {
            var e = t && (t.ownerDocument || t).documentElement;
            return e ? "HTML" !== e.nodeName : !1
        }
        ,
        P = e.setDocument = function(t) {
            var e, i = t ? t.ownerDocument || t : I, r = i.defaultView;
            return i !== L && 9 === i.nodeType && i.documentElement ? (L = i,
            D = i.documentElement,
            k = !b(i),
            r && r !== r.top && (r.addEventListener ? r.addEventListener("unload", function() {
                P()
            }
            , !1) : r.attachEvent && r.attachEvent("onunload", function() {
                P()
            }
            )),
            x.attributes = n(function(t) {
                return t.className = "i",
                !t.getAttribute("className")
            }
            ),
            x.getElementsByTagName = n(function(t) {
                return t.appendChild(i.createComment("")),
                !t.getElementsByTagName("*").length
            }
            ),
            x.getElementsByClassName = Et.test(i.getElementsByClassName) && n(function(t) {
                return t.innerHTML = "<div class='a'></div><div class='a i'></div>",
                t.firstChild.className = "i",
                2 === t.getElementsByClassName("i").length
            }
            ),
            x.getById = n(function(t) {
                return D.appendChild(t).id = V,
                !i.getElementsByName || !i.getElementsByName(V).length
            }
            ),
            x.getById ? (T.find.ID = function(t, e) {
                if (typeof e.getElementById !== q && k) {
                    var i = e.getElementById(t);
                    return i && i.parentNode ? [i] : []
                }
            }
            ,
            T.filter.ID = function(t) {
                var e = t.replace(xt, Tt);
                return function(t) {
                    return t.getAttribute("id") === e
                }
            }
            ) : (delete T.find.ID,
            T.filter.ID = function(t) {
                var e = t.replace(xt, Tt);
                return function(t) {
                    var i = typeof t.getAttributeNode !== q && t.getAttributeNode("id");
                    return i && i.value === e
                }
            }
            ),
            T.find.TAG = x.getElementsByTagName ? function(t, e) {
                return typeof e.getElementsByTagName !== q ? e.getElementsByTagName(t) : void 0
            }
             : function(t, e) {
                var i, r = [], n = 0, o = e.getElementsByTagName(t);
                if ("*" === t) {
                    for (; i = o[n++]; )
                        1 === i.nodeType && r.push(i);
                    return r
                }
                return o
            }
            ,
            T.find.CLASS = x.getElementsByClassName && function(t, e) {
                return typeof e.getElementsByClassName !== q && k ? e.getElementsByClassName(t) : void 0
            }
            ,
            F = [],
            O = [],
            (x.qsa = Et.test(i.querySelectorAll)) && (n(function(t) {
                t.innerHTML = "<select msallowclip=''><option selected=''></option></select>",
                t.querySelectorAll("[msallowclip^='']").length && O.push("[*^$]=" + rt + "*(?:''|\"\")"),
                t.querySelectorAll("[selected]").length || O.push("\\[" + rt + "*(?:value|" + it + ")"),
                t.querySelectorAll(":checked").length || O.push(":checked")
            }
            ),
            n(function(t) {
                var e = i.createElement("input");
                e.setAttribute("type", "hidden"),
                t.appendChild(e).setAttribute("name", "D"),
                t.querySelectorAll("[name=d]").length && O.push("name" + rt + "*[*^$|!~]?="),
                t.querySelectorAll(":enabled").length || O.push(":enabled", ":disabled"),
                t.querySelectorAll("*,:x"),
                O.push(",.*:")
            }
            )),
            (x.matchesSelector = Et.test(N = D.matches || D.webkitMatchesSelector || D.mozMatchesSelector || D.oMatchesSelector || D.msMatchesSelector)) && n(function(t) {
                x.disconnectedMatch = N.call(t, "div"),
                N.call(t, "[s!='']:x"),
                F.push("!=", st)
            }
            ),
            O = O.length && new RegExp(O.join("|")),
            F = F.length && new RegExp(F.join("|")),
            e = Et.test(D.compareDocumentPosition),
            z = e || Et.test(D.contains) ? function(t, e) {
                var i = 9 === t.nodeType ? t.documentElement : t
                  , r = e && e.parentNode;
                return t === r || !(!r || 1 !== r.nodeType || !(i.contains ? i.contains(r) : t.compareDocumentPosition && 16 & t.compareDocumentPosition(r)))
            }
             : function(t, e) {
                if (e)
                    for (; e = e.parentNode; )
                        if (e === t)
                            return !0;
                return !1
            }
            ,
            X = e ? function(t, e) {
                if (t === e)
                    return A = !0,
                    0;
                var r = !t.compareDocumentPosition - !e.compareDocumentPosition;
                return r ? r : (r = (t.ownerDocument || t) === (e.ownerDocument || e) ? t.compareDocumentPosition(e) : 1,
                1 & r || !x.sortDetached && e.compareDocumentPosition(t) === r ? t === i || t.ownerDocument === I && z(I, t) ? -1 : e === i || e.ownerDocument === I && z(I, e) ? 1 : C ? et.call(C, t) - et.call(C, e) : 0 : 4 & r ? -1 : 1)
            }
             : function(t, e) {
                if (t === e)
                    return A = !0,
                    0;
                var r, n = 0, o = t.parentNode, s = e.parentNode, l = [t], h = [e];
                if (!o || !s)
                    return t === i ? -1 : e === i ? 1 : o ? -1 : s ? 1 : C ? et.call(C, t) - et.call(C, e) : 0;
                if (o === s)
                    return a(t, e);
                for (r = t; r = r.parentNode; )
                    l.unshift(r);
                for (r = e; r = r.parentNode; )
                    h.unshift(r);
                for (; l[n] === h[n]; )
                    n++;
                return n ? a(l[n], h[n]) : l[n] === I ? -1 : h[n] === I ? 1 : 0
            }
            ,
            i) : L
        }
        ,
        e.matches = function(t, i) {
            return e(t, null , null , i)
        }
        ,
        e.matchesSelector = function(t, i) {
            if ((t.ownerDocument || t) !== L && P(t),
            i = i.replace(ut, "='$1']"),
            !(!x.matchesSelector || !k || F && F.test(i) || O && O.test(i)))
                try {
                    var r = N.call(t, i);
                    if (r || x.disconnectedMatch || t.document && 11 !== t.document.nodeType)
                        return r
                } catch (n) {}
            return e(i, L, null , [t]).length > 0
        }
        ,
        e.contains = function(t, e) {
            return (t.ownerDocument || t) !== L && P(t),
            z(t, e)
        }
        ,
        e.attr = function(t, e) {
            (t.ownerDocument || t) !== L && P(t);
            var i = T.attrHandle[e.toLowerCase()]
              , r = i && $.call(T.attrHandle, e.toLowerCase()) ? i(t, e, !k) : void 0;
            return void 0 !== r ? r : x.attributes || !k ? t.getAttribute(e) : (r = t.getAttributeNode(e)) && r.specified ? r.value : null 
        }
        ,
        e.error = function(t) {
            throw new Error("Syntax error, unrecognized expression: " + t)
        }
        ,
        e.uniqueSort = function(t) {
            var e, i = [], r = 0, n = 0;
            if (A = !x.detectDuplicates,
            C = !x.sortStable && t.slice(0),
            t.sort(X),
            A) {
                for (; e = t[n++]; )
                    e === t[n] && (r = i.push(n));
                for (; r--; )
                    t.splice(i[r], 1)
            }
            return C = null ,
            t
        }
        ,
        w = e.getText = function(t) {
            var e, i = "", r = 0, n = t.nodeType;
            if (n) {
                if (1 === n || 9 === n || 11 === n) {
                    if ("string" == typeof t.textContent)
                        return t.textContent;
                    for (t = t.firstChild; t; t = t.nextSibling)
                        i += w(t)
                } else if (3 === n || 4 === n)
                    return t.nodeValue
            } else
                for (; e = t[r++]; )
                    i += w(e);
            return i
        }
        ,
        T = e.selectors = {
            cacheLength: 50,
            createPseudo: r,
            match: ft,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(t) {
                    return t[1] = t[1].replace(xt, Tt),
                    t[3] = (t[3] || t[4] || t[5] || "").replace(xt, Tt),
                    "~=" === t[2] && (t[3] = " " + t[3] + " "),
                    t.slice(0, 4)
                },
                CHILD: function(t) {
                    return t[1] = t[1].toLowerCase(),
                    "nth" === t[1].slice(0, 3) ? (t[3] || e.error(t[0]),
                    t[4] = +(t[4] ? t[5] + (t[6] || 1) : 2 * ("even" === t[3] || "odd" === t[3])),
                    t[5] = +(t[7] + t[8] || "odd" === t[3])) : t[3] && e.error(t[0]),
                    t
                },
                PSEUDO: function(t) {
                    var e, i = !t[6] && t[2];
                    return ft.CHILD.test(t[0]) ? null  : (t[3] ? t[2] = t[4] || t[5] || "" : i && pt.test(i) && (e = R(i, !0)) && (e = i.indexOf(")", i.length - e) - i.length) && (t[0] = t[0].slice(0, e),
                    t[2] = i.slice(0, e)),
                    t.slice(0, 3))
                }
            },
            filter: {
                TAG: function(t) {
                    var e = t.replace(xt, Tt).toLowerCase();
                    return "*" === t ? function() {
                        return !0
                    }
                     : function(t) {
                        return t.nodeName && t.nodeName.toLowerCase() === e
                    }
                },
                CLASS: function(t) {
                    var e = j[t + " "];
                    return e || (e = new RegExp("(^|" + rt + ")" + t + "(" + rt + "|$)")) && j(t, function(t) {
                        return e.test("string" == typeof t.className && t.className || typeof t.getAttribute !== q && t.getAttribute("class") || "")
                    }
                    )
                },
                ATTR: function(t, i, r) {
                    return function(n) {
                        var o = e.attr(n, t);
                        return null  == o ? "!=" === i : i ? (o += "",
                        "=" === i ? o === r : "!=" === i ? o !== r : "^=" === i ? r && 0 === o.indexOf(r) : "*=" === i ? r && o.indexOf(r) > -1 : "$=" === i ? r && o.slice(-r.length) === r : "~=" === i ? (" " + o + " ").indexOf(r) > -1 : "|=" === i ? o === r || o.slice(0, r.length + 1) === r + "-" : !1) : !0
                    }
                },
                CHILD: function(t, e, i, r, n) {
                    var o = "nth" !== t.slice(0, 3)
                      , a = "last" !== t.slice(-4)
                      , s = "of-type" === e;
                    return 1 === r && 0 === n ? function(t) {
                        return !!t.parentNode
                    }
                     : function(e, i, l) {
                        var h, c, u, p, d, f, m = o !== a ? "nextSibling" : "previousSibling", g = e.parentNode, E = s && e.nodeName.toLowerCase(), y = !l && !s;
                        if (g) {
                            if (o) {
                                for (; m; ) {
                                    for (u = e; u = u[m]; )
                                        if (s ? u.nodeName.toLowerCase() === E : 1 === u.nodeType)
                                            return !1;
                                    f = m = "only" === t && !f && "nextSibling"
                                }
                                return !0
                            }
                            if (f = [a ? g.firstChild : g.lastChild],
                            a && y) {
                                for (c = g[V] || (g[V] = {}),
                                h = c[t] || [],
                                d = h[0] === U && h[1],
                                p = h[0] === U && h[2],
                                u = d && g.childNodes[d]; u = ++d && u && u[m] || (p = d = 0) || f.pop(); )
                                    if (1 === u.nodeType && ++p && u === e) {
                                        c[t] = [U, d, p];
                                        break
                                    }
                            } else if (y && (h = (e[V] || (e[V] = {}))[t]) && h[0] === U)
                                p = h[1];
                            else
                                for (; (u = ++d && u && u[m] || (p = d = 0) || f.pop()) && ((s ? u.nodeName.toLowerCase() !== E : 1 !== u.nodeType) || !++p || (y && ((u[V] || (u[V] = {}))[t] = [U, p]),
                                u !== e)); )
                                    ;
                            return p -= n,
                            p === r || p % r === 0 && p / r >= 0
                        }
                    }
                },
                PSEUDO: function(t, i) {
                    var n, o = T.pseudos[t] || T.setFilters[t.toLowerCase()] || e.error("unsupported pseudo: " + t);
                    return o[V] ? o(i) : o.length > 1 ? (n = [t, t, "", i],
                    T.setFilters.hasOwnProperty(t.toLowerCase()) ? r(function(t, e) {
                        for (var r, n = o(t, i), a = n.length; a--; )
                            r = et.call(t, n[a]),
                            t[r] = !(e[r] = n[a])
                    }
                    ) : function(t) {
                        return o(t, 0, n)
                    }
                    ) : o
                }
            },
            pseudos: {
                not: r(function(t) {
                    var e = []
                      , i = []
                      , n = H(t.replace(lt, "$1"));
                    return n[V] ? r(function(t, e, i, r) {
                        for (var o, a = n(t, null , r, []), s = t.length; s--; )
                            (o = a[s]) && (t[s] = !(e[s] = o))
                    }
                    ) : function(t, r, o) {
                        return e[0] = t,
                        n(e, null , o, i),
                        !i.pop()
                    }
                }
                ),
                has: r(function(t) {
                    return function(i) {
                        return e(t, i).length > 0
                    }
                }
                ),
                contains: r(function(t) {
                    return function(e) {
                        return (e.textContent || e.innerText || w(e)).indexOf(t) > -1
                    }
                }
                ),
                lang: r(function(t) {
                    return dt.test(t || "") || e.error("unsupported lang: " + t),
                    t = t.replace(xt, Tt).toLowerCase(),
                    function(e) {
                        var i;
                        do
                            if (i = k ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                                return i = i.toLowerCase(),
                                i === t || 0 === i.indexOf(t + "-");
                        while ((e = e.parentNode) && 1 === e.nodeType);return !1
                    }
                }
                ),
                target: function(e) {
                    var i = t.location && t.location.hash;
                    return i && i.slice(1) === e.id
                },
                root: function(t) {
                    return t === D
                },
                focus: function(t) {
                    return t === L.activeElement && (!L.hasFocus || L.hasFocus()) && !!(t.type || t.href || ~t.tabIndex)
                },
                enabled: function(t) {
                    return t.disabled === !1
                },
                disabled: function(t) {
                    return t.disabled === !0
                },
                checked: function(t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && !!t.checked || "option" === e && !!t.selected
                },
                selected: function(t) {
                    return t.parentNode && t.parentNode.selectedIndex,
                    t.selected === !0
                },
                empty: function(t) {
                    for (t = t.firstChild; t; t = t.nextSibling)
                        if (t.nodeType < 6)
                            return !1;
                    return !0
                },
                parent: function(t) {
                    return !T.pseudos.empty(t)
                },
                header: function(t) {
                    return gt.test(t.nodeName)
                },
                input: function(t) {
                    return mt.test(t.nodeName)
                },
                button: function(t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && "button" === t.type || "button" === e
                },
                text: function(t) {
                    var e;
                    return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null  == (e = t.getAttribute("type")) || "text" === e.toLowerCase())
                },
                first: h(function() {
                    return [0]
                }
                ),
                last: h(function(t, e) {
                    return [e - 1]
                }
                ),
                eq: h(function(t, e, i) {
                    return [0 > i ? i + e : i]
                }
                ),
                even: h(function(t, e) {
                    for (var i = 0; e > i; i += 2)
                        t.push(i);
                    return t
                }
                ),
                odd: h(function(t, e) {
                    for (var i = 1; e > i; i += 2)
                        t.push(i);
                    return t
                }
                ),
                lt: h(function(t, e, i) {
                    for (var r = 0 > i ? i + e : i; --r >= 0; )
                        t.push(r);
                    return t
                }
                ),
                gt: h(function(t, e, i) {
                    for (var r = 0 > i ? i + e : i; ++r < e; )
                        t.push(r);
                    return t
                }
                )
            }
        },
        T.pseudos.nth = T.pseudos.eq;
        for (_ in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })
            T.pseudos[_] = s(_);
        for (_ in {
            submit: !0,
            reset: !0
        })
            T.pseudos[_] = l(_);
        return u.prototype = T.filters = T.pseudos,
        T.setFilters = new u,
        R = e.tokenize = function(t, i) {
            var r, n, o, a, s, l, h, c = G[t + " "];
            if (c)
                return i ? 0 : c.slice(0);
            for (s = t,
            l = [],
            h = T.preFilter; s; ) {
                (!r || (n = ht.exec(s))) && (n && (s = s.slice(n[0].length) || s),
                l.push(o = [])),
                r = !1,
                (n = ct.exec(s)) && (r = n.shift(),
                o.push({
                    value: r,
                    type: n[0].replace(lt, " ")
                }),
                s = s.slice(r.length));
                for (a in T.filter)
                    !(n = ft[a].exec(s)) || h[a] && !(n = h[a](n)) || (r = n.shift(),
                    o.push({
                        value: r,
                        type: a,
                        matches: n
                    }),
                    s = s.slice(r.length));
                if (!r)
                    break
            }
            return i ? s.length : s ? e.error(t) : G(t, l).slice(0)
        }
        ,
        H = e.compile = function(t, e) {
            var i, r = [], n = [], o = W[t + " "];
            if (!o) {
                for (e || (e = R(t)),
                i = e.length; i--; )
                    o = y(e[i]),
                    o[V] ? r.push(o) : n.push(o);
                o = W(t, v(n, r)),
                o.selector = t
            }
            return o
        }
        ,
        S = e.select = function(t, e, i, r) {
            var n, o, a, s, l, h = "function" == typeof t && t, u = !r && R(t = h.selector || t);
            if (i = i || [],
            1 === u.length) {
                if (o = u[0] = u[0].slice(0),
                o.length > 2 && "ID" === (a = o[0]).type && x.getById && 9 === e.nodeType && k && T.relative[o[1].type]) {
                    if (e = (T.find.ID(a.matches[0].replace(xt, Tt), e) || [])[0],
                    !e)
                        return i;
                    h && (e = e.parentNode),
                    t = t.slice(o.shift().value.length)
                }
                for (n = ft.needsContext.test(t) ? 0 : o.length; n-- && (a = o[n],
                !T.relative[s = a.type]); )
                    if ((l = T.find[s]) && (r = l(a.matches[0].replace(xt, Tt), vt.test(o[0].type) && c(e.parentNode) || e))) {
                        if (o.splice(n, 1),
                        t = r.length && p(o),
                        !t)
                            return J.apply(i, r),
                            i;
                        break
                    }
            }
            return (h || H(t, u))(r, e, !k, i, vt.test(t) && c(e.parentNode) || e),
            i
        }
        ,
        x.sortStable = V.split("").sort(X).join("") === V,
        x.detectDuplicates = !!A,
        P(),
        x.sortDetached = n(function(t) {
            return 1 & t.compareDocumentPosition(L.createElement("div"))
        }
        ),
        n(function(t) {
            return t.innerHTML = "<a href='#'></a>",
            "#" === t.firstChild.getAttribute("href")
        }
        ) || o("type|href|height|width", function(t, e, i) {
            return i ? void 0 : t.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2)
        }
        ),
        x.attributes && n(function(t) {
            return t.innerHTML = "<input/>",
            t.firstChild.setAttribute("value", ""),
            "" === t.firstChild.getAttribute("value")
        }
        ) || o("value", function(t, e, i) {
            return i || "input" !== t.nodeName.toLowerCase() ? void 0 : t.defaultValue
        }
        ),
        n(function(t) {
            return null  == t.getAttribute("disabled")
        }
        ) || o(it, function(t, e, i) {
            var r;
            return i ? void 0 : t[e] === !0 ? e.toLowerCase() : (r = t.getAttributeNode(e)) && r.specified ? r.value : null 
        }
        ),
        e
    }
    (t);
    J.find = nt,
    J.expr = nt.selectors,
    J.expr[":"] = J.expr.pseudos,
    J.unique = nt.uniqueSort,
    J.text = nt.getText,
    J.isXMLDoc = nt.isXML,
    J.contains = nt.contains;
    var ot = J.expr.match.needsContext
      , at = /^<(\w+)\s*\/?>(?:<\/\1>|)$/
      , st = /^.[^:#\[\.,]*$/;
    J.filter = function(t, e, i) {
        var r = e[0];
        return i && (t = ":not(" + t + ")"),
        1 === e.length && 1 === r.nodeType ? J.find.matchesSelector(r, t) ? [r] : [] : J.find.matches(t, J.grep(e, function(t) {
            return 1 === t.nodeType
        }
        ))
    }
    ,
    J.fn.extend({
        find: function(t) {
            var e, i = this.length, r = [], n = this;
            if ("string" != typeof t)
                return this.pushStack(J(t).filter(function() {
                    for (e = 0; i > e; e++)
                        if (J.contains(n[e], this))
                            return !0
                }
                ));
            for (e = 0; i > e; e++)
                J.find(t, n[e], r);
            return r = this.pushStack(i > 1 ? J.unique(r) : r),
            r.selector = this.selector ? this.selector + " " + t : t,
            r
        },
        filter: function(t) {
            return this.pushStack(r(this, t || [], !1))
        },
        not: function(t) {
            return this.pushStack(r(this, t || [], !0))
        },
        is: function(t) {
            return !!r(this, "string" == typeof t && ot.test(t) ? J(t) : t || [], !1).length
        }
    });
    var lt, ht = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, ct = J.fn.init = function(t, e) {
        var i, r;
        if (!t)
            return this;
        if ("string" == typeof t) {
            if (i = "<" === t[0] && ">" === t[t.length - 1] && t.length >= 3 ? [null , t, null ] : ht.exec(t),
            !i || !i[1] && e)
                return !e || e.jquery ? (e || lt).find(t) : this.constructor(e).find(t);
            if (i[1]) {
                if (e = e instanceof J ? e[0] : e,
                J.merge(this, J.parseHTML(i[1], e && e.nodeType ? e.ownerDocument || e : K, !0)),
                at.test(i[1]) && J.isPlainObject(e))
                    for (i in e)
                        J.isFunction(this[i]) ? this[i](e[i]) : this.attr(i, e[i]);
                return this
            }
            return r = K.getElementById(i[2]),
            r && r.parentNode && (this.length = 1,
            this[0] = r),
            this.context = K,
            this.selector = t,
            this
        }
        return t.nodeType ? (this.context = this[0] = t,
        this.length = 1,
        this) : J.isFunction(t) ? "undefined" != typeof lt.ready ? lt.ready(t) : t(J) : (void 0 !== t.selector && (this.selector = t.selector,
        this.context = t.context),
        J.makeArray(t, this))
    }
    ;
    ct.prototype = J.fn,
    lt = J(K);
    var ut = /^(?:parents|prev(?:Until|All))/
      , pt = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    J.extend({
        dir: function(t, e, i) {
            for (var r = [], n = void 0 !== i; (t = t[e]) && 9 !== t.nodeType; )
                if (1 === t.nodeType) {
                    if (n && J(t).is(i))
                        break;
                    r.push(t)
                }
            return r
        },
        sibling: function(t, e) {
            for (var i = []; t; t = t.nextSibling)
                1 === t.nodeType && t !== e && i.push(t);
            return i
        }
    }),
    J.fn.extend({
        has: function(t) {
            var e = J(t, this)
              , i = e.length;
            return this.filter(function() {
                for (var t = 0; i > t; t++)
                    if (J.contains(this, e[t]))
                        return !0
            }
            )
        },
        closest: function(t, e) {
            for (var i, r = 0, n = this.length, o = [], a = ot.test(t) || "string" != typeof t ? J(t, e || this.context) : 0; n > r; r++)
                for (i = this[r]; i && i !== e; i = i.parentNode)
                    if (i.nodeType < 11 && (a ? a.index(i) > -1 : 1 === i.nodeType && J.find.matchesSelector(i, t))) {
                        o.push(i);
                        break
                    }
            return this.pushStack(o.length > 1 ? J.unique(o) : o)
        },
        index: function(t) {
            return t ? "string" == typeof t ? X.call(J(t), this[0]) : X.call(this, t.jquery ? t[0] : t) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(t, e) {
            return this.pushStack(J.unique(J.merge(this.get(), J(t, e))))
        },
        addBack: function(t) {
            return this.add(null  == t ? this.prevObject : this.prevObject.filter(t))
        }
    }),
    J.each({
        parent: function(t) {
            var e = t.parentNode;
            return e && 11 !== e.nodeType ? e : null 
        },
        parents: function(t) {
            return J.dir(t, "parentNode")
        },
        parentsUntil: function(t, e, i) {
            return J.dir(t, "parentNode", i)
        },
        next: function(t) {
            return n(t, "nextSibling")
        },
        prev: function(t) {
            return n(t, "previousSibling")
        },
        nextAll: function(t) {
            return J.dir(t, "nextSibling")
        },
        prevAll: function(t) {
            return J.dir(t, "previousSibling")
        },
        nextUntil: function(t, e, i) {
            return J.dir(t, "nextSibling", i)
        },
        prevUntil: function(t, e, i) {
            return J.dir(t, "previousSibling", i)
        },
        siblings: function(t) {
            return J.sibling((t.parentNode || {}).firstChild, t)
        },
        children: function(t) {
            return J.sibling(t.firstChild)
        },
        contents: function(t) {
            return t.contentDocument || J.merge([], t.childNodes)
        }
    }, function(t, e) {
        J.fn[t] = function(i, r) {
            var n = J.map(this, e, i);
            return "Until" !== t.slice(-5) && (r = i),
            r && "string" == typeof r && (n = J.filter(r, n)),
            this.length > 1 && (pt[t] || J.unique(n),
            ut.test(t) && n.reverse()),
            this.pushStack(n)
        }
    }
    );
    var dt = /\S+/g
      , ft = {};
    J.Callbacks = function(t) {
        t = "string" == typeof t ? ft[t] || o(t) : J.extend({}, t);
        var e, i, r, n, a, s, l = [], h = !t.once && [], c = function(o) {
            for (e = t.memory && o,
            i = !0,
            s = n || 0,
            n = 0,
            a = l.length,
            r = !0; l && a > s; s++)
                if (l[s].apply(o[0], o[1]) === !1 && t.stopOnFalse) {
                    e = !1;
                    break
                }
            r = !1,
            l && (h ? h.length && c(h.shift()) : e ? l = [] : u.disable())
        }
        , u = {
            add: function() {
                if (l) {
                    var i = l.length;
                    !function o(e) {
                        J.each(e, function(e, i) {
                            var r = J.type(i);
                            "function" === r ? t.unique && u.has(i) || l.push(i) : i && i.length && "string" !== r && o(i)
                        }
                        )
                    }
                    (arguments),
                    r ? a = l.length : e && (n = i,
                    c(e))
                }
                return this
            },
            remove: function() {
                return l && J.each(arguments, function(t, e) {
                    for (var i; (i = J.inArray(e, l, i)) > -1; )
                        l.splice(i, 1),
                        r && (a >= i && a--,
                        s >= i && s--)
                }
                ),
                this
            },
            has: function(t) {
                return t ? J.inArray(t, l) > -1 : !(!l || !l.length)
            },
            empty: function() {
                return l = [],
                a = 0,
                this
            },
            disable: function() {
                return l = h = e = void 0,
                this
            },
            disabled: function() {
                return !l
            },
            lock: function() {
                return h = void 0,
                e || u.disable(),
                this
            },
            locked: function() {
                return !h
            },
            fireWith: function(t, e) {
                return !l || i && !h || (e = e || [],
                e = [t, e.slice ? e.slice() : e],
                r ? h.push(e) : c(e)),
                this
            },
            fire: function() {
                return u.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!i
            }
        };
        return u
    }
    ,
    J.extend({
        Deferred: function(t) {
            var e = [["resolve", "done", J.Callbacks("once memory"), "resolved"], ["reject", "fail", J.Callbacks("once memory"), "rejected"], ["notify", "progress", J.Callbacks("memory")]]
              , i = "pending"
              , r = {
                state: function() {
                    return i
                },
                always: function() {
                    return n.done(arguments).fail(arguments),
                    this
                },
                then: function() {
                    var t = arguments;
                    return J.Deferred(function(i) {
                        J.each(e, function(e, o) {
                            var a = J.isFunction(t[e]) && t[e];
                            n[o[1]](function() {
                                var t = a && a.apply(this, arguments);
                                t && J.isFunction(t.promise) ? t.promise().done(i.resolve).fail(i.reject).progress(i.notify) : i[o[0] + "With"](this === r ? i.promise() : this, a ? [t] : arguments)
                            }
                            )
                        }
                        ),
                        t = null 
                    }
                    ).promise()
                },
                promise: function(t) {
                    return null  != t ? J.extend(t, r) : r
                }
            }
              , n = {};
            return r.pipe = r.then,
            J.each(e, function(t, o) {
                var a = o[2]
                  , s = o[3];
                r[o[1]] = a.add,
                s && a.add(function() {
                    i = s
                }
                , e[1 ^ t][2].disable, e[2][2].lock),
                n[o[0]] = function() {
                    return n[o[0] + "With"](this === n ? r : this, arguments),
                    this
                }
                ,
                n[o[0] + "With"] = a.fireWith
            }
            ),
            r.promise(n),
            t && t.call(n, n),
            n
        },
        when: function(t) {
            var e, i, r, n = 0, o = j.call(arguments), a = o.length, s = 1 !== a || t && J.isFunction(t.promise) ? a : 0, l = 1 === s ? t : J.Deferred(), h = function(t, i, r) {
                return function(n) {
                    i[t] = this,
                    r[t] = arguments.length > 1 ? j.call(arguments) : n,
                    r === e ? l.notifyWith(i, r) : --s || l.resolveWith(i, r)
                }
            }
            ;
            if (a > 1)
                for (e = new Array(a),
                i = new Array(a),
                r = new Array(a); a > n; n++)
                    o[n] && J.isFunction(o[n].promise) ? o[n].promise().done(h(n, r, o)).fail(l.reject).progress(h(n, i, e)) : --s;
            return s || l.resolveWith(r, o),
            l.promise()
        }
    });
    var mt;
    J.fn.ready = function(t) {
        return J.ready.promise().done(t),
        this
    }
    ,
    J.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(t) {
            t ? J.readyWait++ : J.ready(!0)
        },
        ready: function(t) {
            (t === !0 ? --J.readyWait : J.isReady) || (J.isReady = !0,
            t !== !0 && --J.readyWait > 0 || (mt.resolveWith(K, [J]),
            J.fn.triggerHandler && (J(K).triggerHandler("ready"),
            J(K).off("ready"))))
        }
    }),
    J.ready.promise = function(e) {
        return mt || (mt = J.Deferred(),
        "complete" === K.readyState ? setTimeout(J.ready) : (K.addEventListener("DOMContentLoaded", a, !1),
        t.addEventListener("load", a, !1))),
        mt.promise(e)
    }
    ,
    J.ready.promise();
    var gt = J.access = function(t, e, i, r, n, o, a) {
        var s = 0
          , l = t.length
          , h = null  == i;
        if ("object" === J.type(i)) {
            n = !0;
            for (s in i)
                J.access(t, e, s, i[s], !0, o, a)
        } else if (void 0 !== r && (n = !0,
        J.isFunction(r) || (a = !0),
        h && (a ? (e.call(t, r),
        e = null ) : (h = e,
        e = function(t, e, i) {
            return h.call(J(t), i)
        }
        )),
        e))
            for (; l > s; s++)
                e(t[s], i, a ? r : r.call(t[s], s, e(t[s], i)));
        return n ? t : h ? e.call(t) : l ? e(t[0], i) : o
    }
    ;
    J.acceptData = function(t) {
        return 1 === t.nodeType || 9 === t.nodeType || !+t.nodeType
    }
    ,
    s.uid = 1,
    s.accepts = J.acceptData,
    s.prototype = {
        key: function(t) {
            if (!s.accepts(t))
                return 0;
            var e = {}
              , i = t[this.expando];
            if (!i) {
                i = s.uid++;
                try {
                    e[this.expando] = {
                        value: i
                    },
                    Object.defineProperties(t, e)
                } catch (r) {
                    e[this.expando] = i,
                    J.extend(t, e)
                }
            }
            return this.cache[i] || (this.cache[i] = {}),
            i
        },
        set: function(t, e, i) {
            var r, n = this.key(t), o = this.cache[n];
            if ("string" == typeof e)
                o[e] = i;
            else if (J.isEmptyObject(o))
                J.extend(this.cache[n], e);
            else
                for (r in e)
                    o[r] = e[r];
            return o
        },
        get: function(t, e) {
            var i = this.cache[this.key(t)];
            return void 0 === e ? i : i[e]
        },
        access: function(t, e, i) {
            var r;
            return void 0 === e || e && "string" == typeof e && void 0 === i ? (r = this.get(t, e),
            void 0 !== r ? r : this.get(t, J.camelCase(e))) : (this.set(t, e, i),
            void 0 !== i ? i : e)
        },
        remove: function(t, e) {
            var i, r, n, o = this.key(t), a = this.cache[o];
            if (void 0 === e)
                this.cache[o] = {};
            else {
                J.isArray(e) ? r = e.concat(e.map(J.camelCase)) : (n = J.camelCase(e),
                e in a ? r = [e, n] : (r = n,
                r = r in a ? [r] : r.match(dt) || [])),
                i = r.length;
                for (; i--; )
                    delete a[r[i]]
            }
        },
        hasData: function(t) {
            return !J.isEmptyObject(this.cache[t[this.expando]] || {})
        },
        discard: function(t) {
            t[this.expando] && delete this.cache[t[this.expando]]
        }
    };
    var Et = new s
      , yt = new s
      , vt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , _t = /([A-Z])/g;
    J.extend({
        hasData: function(t) {
            return yt.hasData(t) || Et.hasData(t)
        },
        data: function(t, e, i) {
            return yt.access(t, e, i)
        },
        removeData: function(t, e) {
            yt.remove(t, e)
        },
        _data: function(t, e, i) {
            return Et.access(t, e, i)
        },
        _removeData: function(t, e) {
            Et.remove(t, e)
        }
    }),
    J.fn.extend({
        data: function(t, e) {
            var i, r, n, o = this[0], a = o && o.attributes;
            if (void 0 === t) {
                if (this.length && (n = yt.get(o),
                1 === o.nodeType && !Et.get(o, "hasDataAttrs"))) {
                    for (i = a.length; i--; )
                        a[i] && (r = a[i].name,
                        0 === r.indexOf("data-") && (r = J.camelCase(r.slice(5)),
                        l(o, r, n[r])));
                    Et.set(o, "hasDataAttrs", !0)
                }
                return n
            }
            return "object" == typeof t ? this.each(function() {
                yt.set(this, t)
            }
            ) : gt(this, function(e) {
                var i, r = J.camelCase(t);
                if (o && void 0 === e) {
                    if (i = yt.get(o, t),
                    void 0 !== i)
                        return i;
                    if (i = yt.get(o, r),
                    void 0 !== i)
                        return i;
                    if (i = l(o, r, void 0),
                    void 0 !== i)
                        return i
                } else
                    this.each(function() {
                        var i = yt.get(this, r);
                        yt.set(this, r, e),
                        -1 !== t.indexOf("-") && void 0 !== i && yt.set(this, t, e)
                    }
                    )
            }
            , null , e, arguments.length > 1, null , !0)
        },
        removeData: function(t) {
            return this.each(function() {
                yt.remove(this, t)
            }
            )
        }
    }),
    J.extend({
        queue: function(t, e, i) {
            var r;
            return t ? (e = (e || "fx") + "queue",
            r = Et.get(t, e),
            i && (!r || J.isArray(i) ? r = Et.access(t, e, J.makeArray(i)) : r.push(i)),
            r || []) : void 0
        },
        dequeue: function(t, e) {
            e = e || "fx";
            var i = J.queue(t, e)
              , r = i.length
              , n = i.shift()
              , o = J._queueHooks(t, e)
              , a = function() {
                J.dequeue(t, e)
            }
            ;
            "inprogress" === n && (n = i.shift(),
            r--),
            n && ("fx" === e && i.unshift("inprogress"),
            delete o.stop,
            n.call(t, a, o)),
            !r && o && o.empty.fire()
        },
        _queueHooks: function(t, e) {
            var i = e + "queueHooks";
            return Et.get(t, i) || Et.access(t, i, {
                empty: J.Callbacks("once memory").add(function() {
                    Et.remove(t, [e + "queue", i])
                }
                )
            })
        }
    }),
    J.fn.extend({
        queue: function(t, e) {
            var i = 2;
            return "string" != typeof t && (e = t,
            t = "fx",
            i--),
            arguments.length < i ? J.queue(this[0], t) : void 0 === e ? this : this.each(function() {
                var i = J.queue(this, t, e);
                J._queueHooks(this, t),
                "fx" === t && "inprogress" !== i[0] && J.dequeue(this, t)
            }
            )
        },
        dequeue: function(t) {
            return this.each(function() {
                J.dequeue(this, t)
            }
            )
        },
        clearQueue: function(t) {
            return this.queue(t || "fx", [])
        },
        promise: function(t, e) {
            var i, r = 1, n = J.Deferred(), o = this, a = this.length, s = function() {
                --r || n.resolveWith(o, [o])
            }
            ;
            for ("string" != typeof t && (e = t,
            t = void 0),
            t = t || "fx"; a--; )
                i = Et.get(o[a], t + "queueHooks"),
                i && i.empty && (r++,
                i.empty.add(s));
            return s(),
            n.promise(e)
        }
    });
    var xt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , Tt = ["Top", "Right", "Bottom", "Left"]
      , wt = function(t, e) {
        return t = e || t,
        "none" === J.css(t, "display") || !J.contains(t.ownerDocument, t)
    }
      , bt = /^(?:checkbox|radio)$/i;
    !function() {
        var t = K.createDocumentFragment()
          , e = t.appendChild(K.createElement("div"))
          , i = K.createElement("input");
        i.setAttribute("type", "radio"),
        i.setAttribute("checked", "checked"),
        i.setAttribute("name", "t"),
        e.appendChild(i),
        Q.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked,
        e.innerHTML = "<textarea>x</textarea>",
        Q.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue
    }
    ();
    var Rt = "undefined";
    Q.focusinBubbles = "onfocusin" in t;
    var Ht = /^key/
      , St = /^(?:mouse|pointer|contextmenu)|click/
      , Mt = /^(?:focusinfocus|focusoutblur)$/
      , Ct = /^([^.]*)(?:\.(.+)|)$/;
    J.event = {
        global: {},
        add: function(t, e, i, r, n) {
            var o, a, s, l, h, c, u, p, d, f, m, g = Et.get(t);
            if (g)
                for (i.handler && (o = i,
                i = o.handler,
                n = o.selector),
                i.guid || (i.guid = J.guid++),
                (l = g.events) || (l = g.events = {}),
                (a = g.handle) || (a = g.handle = function(e) {
                    return typeof J !== Rt && J.event.triggered !== e.type ? J.event.dispatch.apply(t, arguments) : void 0
                }
                ),
                e = (e || "").match(dt) || [""],
                h = e.length; h--; )
                    s = Ct.exec(e[h]) || [],
                    d = m = s[1],
                    f = (s[2] || "").split(".").sort(),
                    d && (u = J.event.special[d] || {},
                    d = (n ? u.delegateType : u.bindType) || d,
                    u = J.event.special[d] || {},
                    c = J.extend({
                        type: d,
                        origType: m,
                        data: r,
                        handler: i,
                        guid: i.guid,
                        selector: n,
                        needsContext: n && J.expr.match.needsContext.test(n),
                        namespace: f.join(".")
                    }, o),
                    (p = l[d]) || (p = l[d] = [],
                    p.delegateCount = 0,
                    u.setup && u.setup.call(t, r, f, a) !== !1 || t.addEventListener && t.addEventListener(d, a, !1)),
                    u.add && (u.add.call(t, c),
                    c.handler.guid || (c.handler.guid = i.guid)),
                    n ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                    J.event.global[d] = !0)
        },
        remove: function(t, e, i, r, n) {
            var o, a, s, l, h, c, u, p, d, f, m, g = Et.hasData(t) && Et.get(t);
            if (g && (l = g.events)) {
                for (e = (e || "").match(dt) || [""],
                h = e.length; h--; )
                    if (s = Ct.exec(e[h]) || [],
                    d = m = s[1],
                    f = (s[2] || "").split(".").sort(),
                    d) {
                        for (u = J.event.special[d] || {},
                        d = (r ? u.delegateType : u.bindType) || d,
                        p = l[d] || [],
                        s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        a = o = p.length; o--; )
                            c = p[o],
                            !n && m !== c.origType || i && i.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1),
                            c.selector && p.delegateCount--,
                            u.remove && u.remove.call(t, c));
                        a && !p.length && (u.teardown && u.teardown.call(t, f, g.handle) !== !1 || J.removeEvent(t, d, g.handle),
                        delete l[d])
                    } else
                        for (d in l)
                            J.event.remove(t, d + e[h], i, r, !0);
                J.isEmptyObject(l) && (delete g.handle,
                Et.remove(t, "events"))
            }
        },
        trigger: function(e, i, r, n) {
            var o, a, s, l, h, c, u, p = [r || K], d = $.call(e, "type") ? e.type : e, f = $.call(e, "namespace") ? e.namespace.split(".") : [];
            if (a = s = r = r || K,
            3 !== r.nodeType && 8 !== r.nodeType && !Mt.test(d + J.event.triggered) && (d.indexOf(".") >= 0 && (f = d.split("."),
            d = f.shift(),
            f.sort()),
            h = d.indexOf(":") < 0 && "on" + d,
            e = e[J.expando] ? e : new J.Event(d,"object" == typeof e && e),
            e.isTrigger = n ? 2 : 3,
            e.namespace = f.join("."),
            e.namespace_re = e.namespace ? new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)") : null ,
            e.result = void 0,
            e.target || (e.target = r),
            i = null  == i ? [e] : J.makeArray(i, [e]),
            u = J.event.special[d] || {},
            n || !u.trigger || u.trigger.apply(r, i) !== !1)) {
                if (!n && !u.noBubble && !J.isWindow(r)) {
                    for (l = u.delegateType || d,
                    Mt.test(l + d) || (a = a.parentNode); a; a = a.parentNode)
                        p.push(a),
                        s = a;
                    s === (r.ownerDocument || K) && p.push(s.defaultView || s.parentWindow || t)
                }
                for (o = 0; (a = p[o++]) && !e.isPropagationStopped(); )
                    e.type = o > 1 ? l : u.bindType || d,
                    c = (Et.get(a, "events") || {})[e.type] && Et.get(a, "handle"),
                    c && c.apply(a, i),
                    c = h && a[h],
                    c && c.apply && J.acceptData(a) && (e.result = c.apply(a, i),
                    e.result === !1 && e.preventDefault());
                return e.type = d,
                n || e.isDefaultPrevented() || u._default && u._default.apply(p.pop(), i) !== !1 || !J.acceptData(r) || h && J.isFunction(r[d]) && !J.isWindow(r) && (s = r[h],
                s && (r[h] = null ),
                J.event.triggered = d,
                r[d](),
                J.event.triggered = void 0,
                s && (r[h] = s)),
                e.result
            }
        },
        dispatch: function(t) {
            t = J.event.fix(t);
            var e, i, r, n, o, a = [], s = j.call(arguments), l = (Et.get(this, "events") || {})[t.type] || [], h = J.event.special[t.type] || {};
            if (s[0] = t,
            t.delegateTarget = this,
            !h.preDispatch || h.preDispatch.call(this, t) !== !1) {
                for (a = J.event.handlers.call(this, t, l),
                e = 0; (n = a[e++]) && !t.isPropagationStopped(); )
                    for (t.currentTarget = n.elem,
                    i = 0; (o = n.handlers[i++]) && !t.isImmediatePropagationStopped(); )
                        (!t.namespace_re || t.namespace_re.test(o.namespace)) && (t.handleObj = o,
                        t.data = o.data,
                        r = ((J.event.special[o.origType] || {}).handle || o.handler).apply(n.elem, s),
                        void 0 !== r && (t.result = r) === !1 && (t.preventDefault(),
                        t.stopPropagation()));
                return h.postDispatch && h.postDispatch.call(this, t),
                t.result
            }
        },
        handlers: function(t, e) {
            var i, r, n, o, a = [], s = e.delegateCount, l = t.target;
            if (s && l.nodeType && (!t.button || "click" !== t.type))
                for (; l !== this; l = l.parentNode || this)
                    if (l.disabled !== !0 || "click" !== t.type) {
                        for (r = [],
                        i = 0; s > i; i++)
                            o = e[i],
                            n = o.selector + " ",
                            void 0 === r[n] && (r[n] = o.needsContext ? J(n, this).index(l) >= 0 : J.find(n, this, null , [l]).length),
                            r[n] && r.push(o);
                        r.length && a.push({
                            elem: l,
                            handlers: r
                        })
                    }
            return s < e.length && a.push({
                elem: this,
                handlers: e.slice(s)
            }),
            a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(t, e) {
                return null  == t.which && (t.which = null  != e.charCode ? e.charCode : e.keyCode),
                t
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(t, e) {
                var i, r, n, o = e.button;
                return null  == t.pageX && null  != e.clientX && (i = t.target.ownerDocument || K,
                r = i.documentElement,
                n = i.body,
                t.pageX = e.clientX + (r && r.scrollLeft || n && n.scrollLeft || 0) - (r && r.clientLeft || n && n.clientLeft || 0),
                t.pageY = e.clientY + (r && r.scrollTop || n && n.scrollTop || 0) - (r && r.clientTop || n && n.clientTop || 0)),
                t.which || void 0 === o || (t.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0),
                t
            }
        },
        fix: function(t) {
            if (t[J.expando])
                return t;
            var e, i, r, n = t.type, o = t, a = this.fixHooks[n];
            for (a || (this.fixHooks[n] = a = St.test(n) ? this.mouseHooks : Ht.test(n) ? this.keyHooks : {}),
            r = a.props ? this.props.concat(a.props) : this.props,
            t = new J.Event(o),
            e = r.length; e--; )
                i = r[e],
                t[i] = o[i];
            return t.target || (t.target = K),
            3 === t.target.nodeType && (t.target = t.target.parentNode),
            a.filter ? a.filter(t, o) : t
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    return this !== u() && this.focus ? (this.focus(),
                    !1) : void 0
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === u() && this.blur ? (this.blur(),
                    !1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return "checkbox" === this.type && this.click && J.nodeName(this, "input") ? (this.click(),
                    !1) : void 0
                },
                _default: function(t) {
                    return J.nodeName(t.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(t) {
                    void 0 !== t.result && t.originalEvent && (t.originalEvent.returnValue = t.result)
                }
            }
        },
        simulate: function(t, e, i, r) {
            var n = J.extend(new J.Event, i, {
                type: t,
                isSimulated: !0,
                originalEvent: {}
            });
            r ? J.event.trigger(n, null , e) : J.event.dispatch.call(e, n),
            n.isDefaultPrevented() && i.preventDefault()
        }
    },
    J.removeEvent = function(t, e, i) {
        t.removeEventListener && t.removeEventListener(e, i, !1)
    }
    ,
    J.Event = function(t, e) {
        return this instanceof J.Event ? (t && t.type ? (this.originalEvent = t,
        this.type = t.type,
        this.isDefaultPrevented = t.defaultPrevented || void 0 === t.defaultPrevented && t.returnValue === !1 ? h : c) : this.type = t,
        e && J.extend(this, e),
        this.timeStamp = t && t.timeStamp || J.now(),
        void (this[J.expando] = !0)) : new J.Event(t,e)
    }
    ,
    J.Event.prototype = {
        isDefaultPrevented: c,
        isPropagationStopped: c,
        isImmediatePropagationStopped: c,
        preventDefault: function() {
            var t = this.originalEvent;
            this.isDefaultPrevented = h,
            t && t.preventDefault && t.preventDefault()
        },
        stopPropagation: function() {
            var t = this.originalEvent;
            this.isPropagationStopped = h,
            t && t.stopPropagation && t.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var t = this.originalEvent;
            this.isImmediatePropagationStopped = h,
            t && t.stopImmediatePropagation && t.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    J.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(t, e) {
        J.event.special[t] = {
            delegateType: e,
            bindType: e,
            handle: function(t) {
                var i, r = this, n = t.relatedTarget, o = t.handleObj;
                return (!n || n !== r && !J.contains(r, n)) && (t.type = o.origType,
                i = o.handler.apply(this, arguments),
                t.type = e),
                i
            }
        }
    }
    ),
    Q.focusinBubbles || J.each({
        focus: "focusin",
        blur: "focusout"
    }, function(t, e) {
        var i = function(t) {
            J.event.simulate(e, t.target, J.event.fix(t), !0)
        }
        ;
        J.event.special[e] = {
            setup: function() {
                var r = this.ownerDocument || this
                  , n = Et.access(r, e);
                n || r.addEventListener(t, i, !0),
                Et.access(r, e, (n || 0) + 1)
            },
            teardown: function() {
                var r = this.ownerDocument || this
                  , n = Et.access(r, e) - 1;
                n ? Et.access(r, e, n) : (r.removeEventListener(t, i, !0),
                Et.remove(r, e))
            }
        }
    }
    ),
    J.fn.extend({
        on: function(t, e, i, r, n) {
            var o, a;
            if ("object" == typeof t) {
                "string" != typeof e && (i = i || e,
                e = void 0);
                for (a in t)
                    this.on(a, e, i, t[a], n);
                return this
            }
            if (null  == i && null  == r ? (r = e,
            i = e = void 0) : null  == r && ("string" == typeof e ? (r = i,
            i = void 0) : (r = i,
            i = e,
            e = void 0)),
            r === !1)
                r = c;
            else if (!r)
                return this;
            return 1 === n && (o = r,
            r = function(t) {
                return J().off(t),
                o.apply(this, arguments)
            }
            ,
            r.guid = o.guid || (o.guid = J.guid++)),
            this.each(function() {
                J.event.add(this, t, r, i, e)
            }
            )
        },
        one: function(t, e, i, r) {
            return this.on(t, e, i, r, 1)
        },
        off: function(t, e, i) {
            var r, n;
            if (t && t.preventDefault && t.handleObj)
                return r = t.handleObj,
                J(t.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler),
                this;
            if ("object" == typeof t) {
                for (n in t)
                    this.off(n, e, t[n]);
                return this
            }
            return (e === !1 || "function" == typeof e) && (i = e,
            e = void 0),
            i === !1 && (i = c),
            this.each(function() {
                J.event.remove(this, t, i, e)
            }
            )
        },
        trigger: function(t, e) {
            return this.each(function() {
                J.event.trigger(t, e, this)
            }
            )
        },
        triggerHandler: function(t, e) {
            var i = this[0];
            return i ? J.event.trigger(t, e, i, !0) : void 0
        }
    });
    var At = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , Pt = /<([\w:]+)/
      , Lt = /<|&#?\w+;/
      , Dt = /<(?:script|style|link)/i
      , kt = /checked\s*(?:[^=]|=\s*.checked.)/i
      , Ot = /^$|\/(?:java|ecma)script/i
      , Ft = /^true\/(.*)/
      , Nt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g
      , zt = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    zt.optgroup = zt.option,
    zt.tbody = zt.tfoot = zt.colgroup = zt.caption = zt.thead,
    zt.th = zt.td,
    J.extend({
        clone: function(t, e, i) {
            var r, n, o, a, s = t.cloneNode(!0), l = J.contains(t.ownerDocument, t);
            if (!(Q.noCloneChecked || 1 !== t.nodeType && 11 !== t.nodeType || J.isXMLDoc(t)))
                for (a = E(s),
                o = E(t),
                r = 0,
                n = o.length; n > r; r++)
                    y(o[r], a[r]);
            if (e)
                if (i)
                    for (o = o || E(t),
                    a = a || E(s),
                    r = 0,
                    n = o.length; n > r; r++)
                        g(o[r], a[r]);
                else
                    g(t, s);
            return a = E(s, "script"),
            a.length > 0 && m(a, !l && E(t, "script")),
            s
        },
        buildFragment: function(t, e, i, r) {
            for (var n, o, a, s, l, h, c = e.createDocumentFragment(), u = [], p = 0, d = t.length; d > p; p++)
                if (n = t[p],
                n || 0 === n)
                    if ("object" === J.type(n))
                        J.merge(u, n.nodeType ? [n] : n);
                    else if (Lt.test(n)) {
                        for (o = o || c.appendChild(e.createElement("div")),
                        a = (Pt.exec(n) || ["", ""])[1].toLowerCase(),
                        s = zt[a] || zt._default,
                        o.innerHTML = s[1] + n.replace(At, "<$1></$2>") + s[2],
                        h = s[0]; h--; )
                            o = o.lastChild;
                        J.merge(u, o.childNodes),
                        o = c.firstChild,
                        o.textContent = ""
                    } else
                        u.push(e.createTextNode(n));
            for (c.textContent = "",
            p = 0; n = u[p++]; )
                if ((!r || -1 === J.inArray(n, r)) && (l = J.contains(n.ownerDocument, n),
                o = E(c.appendChild(n), "script"),
                l && m(o),
                i))
                    for (h = 0; n = o[h++]; )
                        Ot.test(n.type || "") && i.push(n);
            return c
        },
        cleanData: function(t) {
            for (var e, i, r, n, o = J.event.special, a = 0; void 0 !== (i = t[a]); a++) {
                if (J.acceptData(i) && (n = i[Et.expando],
                n && (e = Et.cache[n]))) {
                    if (e.events)
                        for (r in e.events)
                            o[r] ? J.event.remove(i, r) : J.removeEvent(i, r, e.handle);
                    Et.cache[n] && delete Et.cache[n]
                }
                delete yt.cache[i[yt.expando]]
            }
        }
    }),
    J.fn.extend({
        text: function(t) {
            return gt(this, function(t) {
                return void 0 === t ? J.text(this) : this.empty().each(function() {
                    (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = t)
                }
                )
            }
            , null , t, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(t) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var e = p(this, t);
                    e.appendChild(t)
                }
            }
            )
        },
        prepend: function() {
            return this.domManip(arguments, function(t) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var e = p(this, t);
                    e.insertBefore(t, e.firstChild)
                }
            }
            )
        },
        before: function() {
            return this.domManip(arguments, function(t) {
                this.parentNode && this.parentNode.insertBefore(t, this)
            }
            )
        },
        after: function() {
            return this.domManip(arguments, function(t) {
                this.parentNode && this.parentNode.insertBefore(t, this.nextSibling)
            }
            )
        },
        remove: function(t, e) {
            for (var i, r = t ? J.filter(t, this) : this, n = 0; null  != (i = r[n]); n++)
                e || 1 !== i.nodeType || J.cleanData(E(i)),
                i.parentNode && (e && J.contains(i.ownerDocument, i) && m(E(i, "script")),
                i.parentNode.removeChild(i));
            return this
        },
        empty: function() {
            for (var t, e = 0; null  != (t = this[e]); e++)
                1 === t.nodeType && (J.cleanData(E(t, !1)),
                t.textContent = "");
            return this
        },
        clone: function(t, e) {
            return t = null  == t ? !1 : t,
            e = null  == e ? t : e,
            this.map(function() {
                return J.clone(this, t, e)
            }
            )
        },
        html: function(t) {
            return gt(this, function(t) {
                var e = this[0] || {}
                  , i = 0
                  , r = this.length;
                if (void 0 === t && 1 === e.nodeType)
                    return e.innerHTML;
                if ("string" == typeof t && !Dt.test(t) && !zt[(Pt.exec(t) || ["", ""])[1].toLowerCase()]) {
                    t = t.replace(At, "<$1></$2>");
                    try {
                        for (; r > i; i++)
                            e = this[i] || {},
                            1 === e.nodeType && (J.cleanData(E(e, !1)),
                            e.innerHTML = t);
                        e = 0
                    } catch (n) {}
                }
                e && this.empty().append(t)
            }
            , null , t, arguments.length)
        },
        replaceWith: function() {
            var t = arguments[0];
            return this.domManip(arguments, function(e) {
                t = this.parentNode,
                J.cleanData(E(this)),
                t && t.replaceChild(e, this)
            }
            ),
            t && (t.length || t.nodeType) ? this : this.remove()
        },
        detach: function(t) {
            return this.remove(t, !0)
        },
        domManip: function(t, e) {
            t = G.apply([], t);
            var i, r, n, o, a, s, l = 0, h = this.length, c = this, u = h - 1, p = t[0], m = J.isFunction(p);
            if (m || h > 1 && "string" == typeof p && !Q.checkClone && kt.test(p))
                return this.each(function(i) {
                    var r = c.eq(i);
                    m && (t[0] = p.call(this, i, r.html())),
                    r.domManip(t, e)
                }
                );
            if (h && (i = J.buildFragment(t, this[0].ownerDocument, !1, this),
            r = i.firstChild,
            1 === i.childNodes.length && (i = r),
            r)) {
                for (n = J.map(E(i, "script"), d),
                o = n.length; h > l; l++)
                    a = i,
                    l !== u && (a = J.clone(a, !0, !0),
                    o && J.merge(n, E(a, "script"))),
                    e.call(this[l], a, l);
                if (o)
                    for (s = n[n.length - 1].ownerDocument,
                    J.map(n, f),
                    l = 0; o > l; l++)
                        a = n[l],
                        Ot.test(a.type || "") && !Et.access(a, "globalEval") && J.contains(s, a) && (a.src ? J._evalUrl && J._evalUrl(a.src) : J.globalEval(a.textContent.replace(Nt, "")))
            }
            return this
        }
    }),
    J.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(t, e) {
        J.fn[t] = function(t) {
            for (var i, r = [], n = J(t), o = n.length - 1, a = 0; o >= a; a++)
                i = a === o ? this : this.clone(!0),
                J(n[a])[e](i),
                W.apply(r, i.get());
            return this.pushStack(r)
        }
    }
    );
    var Vt, It = {}, Ut = /^margin/, Bt = new RegExp("^(" + xt + ")(?!px)[a-z%]+$","i"), jt = function(t) {
        return t.ownerDocument.defaultView.getComputedStyle(t, null )
    }
    ;
    !function() {
        function e() {
            a.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",
            a.innerHTML = "",
            n.appendChild(o);
            var e = t.getComputedStyle(a, null );
            i = "1%" !== e.top,
            r = "4px" === e.width,
            n.removeChild(o)
        }
        var i, r, n = K.documentElement, o = K.createElement("div"), a = K.createElement("div");
        a.style && (a.style.backgroundClip = "content-box",
        a.cloneNode(!0).style.backgroundClip = "",
        Q.clearCloneStyle = "content-box" === a.style.backgroundClip,
        o.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",
        o.appendChild(a),
        t.getComputedStyle && J.extend(Q, {
            pixelPosition: function() {
                return e(),
                i
            },
            boxSizingReliable: function() {
                return null  == r && e(),
                r
            },
            reliableMarginRight: function() {
                var e, i = a.appendChild(K.createElement("div"));
                return i.style.cssText = a.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",
                i.style.marginRight = i.style.width = "0",
                a.style.width = "1px",
                n.appendChild(o),
                e = !parseFloat(t.getComputedStyle(i, null ).marginRight),
                n.removeChild(o),
                e
            }
        }))
    }
    (),
    J.swap = function(t, e, i, r) {
        var n, o, a = {};
        for (o in e)
            a[o] = t.style[o],
            t.style[o] = e[o];
        n = i.apply(t, r || []);
        for (o in e)
            t.style[o] = a[o];
        return n
    }
    ;
    var Gt = /^(none|table(?!-c[ea]).+)/
      , Wt = new RegExp("^(" + xt + ")(.*)$","i")
      , Xt = new RegExp("^([+-])=(" + xt + ")","i")
      , qt = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }
      , Yt = {
        letterSpacing: "0",
        fontWeight: "400"
    }
      , $t = ["Webkit", "O", "Moz", "ms"];
    J.extend({
        cssHooks: {
            opacity: {
                get: function(t, e) {
                    if (e) {
                        var i = x(t, "opacity");
                        return "" === i ? "1" : i
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": "cssFloat"
        },
        style: function(t, e, i, r) {
            if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                var n, o, a, s = J.camelCase(e), l = t.style;
                return e = J.cssProps[s] || (J.cssProps[s] = w(l, s)),
                a = J.cssHooks[e] || J.cssHooks[s],
                void 0 === i ? a && "get" in a && void 0 !== (n = a.get(t, !1, r)) ? n : l[e] : (o = typeof i,
                "string" === o && (n = Xt.exec(i)) && (i = (n[1] + 1) * n[2] + parseFloat(J.css(t, e)),
                o = "number"),
                void (null  != i && i === i && ("number" !== o || J.cssNumber[s] || (i += "px"),
                Q.clearCloneStyle || "" !== i || 0 !== e.indexOf("background") || (l[e] = "inherit"),
                a && "set" in a && void 0 === (i = a.set(t, i, r)) || (l[e] = i))))
            }
        },
        css: function(t, e, i, r) {
            var n, o, a, s = J.camelCase(e);
            return e = J.cssProps[s] || (J.cssProps[s] = w(t.style, s)),
            a = J.cssHooks[e] || J.cssHooks[s],
            a && "get" in a && (n = a.get(t, !0, i)),
            void 0 === n && (n = x(t, e, r)),
            "normal" === n && e in Yt && (n = Yt[e]),
            "" === i || i ? (o = parseFloat(n),
            i === !0 || J.isNumeric(o) ? o || 0 : n) : n
        }
    }),
    J.each(["height", "width"], function(t, e) {
        J.cssHooks[e] = {
            get: function(t, i, r) {
                return i ? Gt.test(J.css(t, "display")) && 0 === t.offsetWidth ? J.swap(t, qt, function() {
                    return H(t, e, r)
                }
                ) : H(t, e, r) : void 0
            },
            set: function(t, i, r) {
                var n = r && jt(t);
                return b(t, i, r ? R(t, e, r, "border-box" === J.css(t, "boxSizing", !1, n), n) : 0)
            }
        }
    }
    ),
    J.cssHooks.marginRight = T(Q.reliableMarginRight, function(t, e) {
        return e ? J.swap(t, {
            display: "inline-block"
        }, x, [t, "marginRight"]) : void 0
    }
    ),
    J.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(t, e) {
        J.cssHooks[t + e] = {
            expand: function(i) {
                for (var r = 0, n = {}, o = "string" == typeof i ? i.split(" ") : [i]; 4 > r; r++)
                    n[t + Tt[r] + e] = o[r] || o[r - 2] || o[0];
                return n
            }
        },
        Ut.test(t) || (J.cssHooks[t + e].set = b)
    }
    ),
    J.fn.extend({
        css: function(t, e) {
            return gt(this, function(t, e, i) {
                var r, n, o = {}, a = 0;
                if (J.isArray(e)) {
                    for (r = jt(t),
                    n = e.length; n > a; a++)
                        o[e[a]] = J.css(t, e[a], !1, r);
                    return o
                }
                return void 0 !== i ? J.style(t, e, i) : J.css(t, e)
            }
            , t, e, arguments.length > 1)
        },
        show: function() {
            return S(this, !0)
        },
        hide: function() {
            return S(this)
        },
        toggle: function(t) {
            return "boolean" == typeof t ? t ? this.show() : this.hide() : this.each(function() {
                wt(this) ? J(this).show() : J(this).hide()
            }
            )
        }
    }),
    J.Tween = M,
    M.prototype = {
        constructor: M,
        init: function(t, e, i, r, n, o) {
            this.elem = t,
            this.prop = i,
            this.easing = n || "swing",
            this.options = e,
            this.start = this.now = this.cur(),
            this.end = r,
            this.unit = o || (J.cssNumber[i] ? "" : "px")
        },
        cur: function() {
            var t = M.propHooks[this.prop];
            return t && t.get ? t.get(this) : M.propHooks._default.get(this)
        },
        run: function(t) {
            var e, i = M.propHooks[this.prop];
            return this.pos = e = this.options.duration ? J.easing[this.easing](t, this.options.duration * t, 0, 1, this.options.duration) : t,
            this.now = (this.end - this.start) * e + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            i && i.set ? i.set(this) : M.propHooks._default.set(this),
            this
        }
    },
    M.prototype.init.prototype = M.prototype,
    M.propHooks = {
        _default: {
            get: function(t) {
                var e;
                return null  == t.elem[t.prop] || t.elem.style && null  != t.elem.style[t.prop] ? (e = J.css(t.elem, t.prop, ""),
                e && "auto" !== e ? e : 0) : t.elem[t.prop]
            },
            set: function(t) {
                J.fx.step[t.prop] ? J.fx.step[t.prop](t) : t.elem.style && (null  != t.elem.style[J.cssProps[t.prop]] || J.cssHooks[t.prop]) ? J.style(t.elem, t.prop, t.now + t.unit) : t.elem[t.prop] = t.now
            }
        }
    },
    M.propHooks.scrollTop = M.propHooks.scrollLeft = {
        set: function(t) {
            t.elem.nodeType && t.elem.parentNode && (t.elem[t.prop] = t.now)
        }
    },
    J.easing = {
        linear: function(t) {
            return t
        },
        swing: function(t) {
            return .5 - Math.cos(t * Math.PI) / 2
        }
    },
    J.fx = M.prototype.init,
    J.fx.step = {};
    var Qt, Kt, Zt = /^(?:toggle|show|hide)$/, Jt = new RegExp("^(?:([+-])=|)(" + xt + ")([a-z%]*)$","i"), te = /queueHooks$/, ee = [L], ie = {
        "*": [function(t, e) {
            var i = this.createTween(t, e)
              , r = i.cur()
              , n = Jt.exec(e)
              , o = n && n[3] || (J.cssNumber[t] ? "" : "px")
              , a = (J.cssNumber[t] || "px" !== o && +r) && Jt.exec(J.css(i.elem, t))
              , s = 1
              , l = 20;
            if (a && a[3] !== o) {
                o = o || a[3],
                n = n || [],
                a = +r || 1;
                do
                    s = s || ".5",
                    a /= s,
                    J.style(i.elem, t, a + o);
                while (s !== (s = i.cur() / r) && 1 !== s && --l)
            }
            return n && (a = i.start = +a || +r || 0,
            i.unit = o,
            i.end = n[1] ? a + (n[1] + 1) * n[2] : +n[2]),
            i
        }
        ]
    };
    J.Animation = J.extend(k, {
        tweener: function(t, e) {
            J.isFunction(t) ? (e = t,
            t = ["*"]) : t = t.split(" ");
            for (var i, r = 0, n = t.length; n > r; r++)
                i = t[r],
                ie[i] = ie[i] || [],
                ie[i].unshift(e)
        },
        prefilter: function(t, e) {
            e ? ee.unshift(t) : ee.push(t)
        }
    }),
    J.speed = function(t, e, i) {
        var r = t && "object" == typeof t ? J.extend({}, t) : {
            complete: i || !i && e || J.isFunction(t) && t,
            duration: t,
            easing: i && e || e && !J.isFunction(e) && e
        };
        return r.duration = J.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in J.fx.speeds ? J.fx.speeds[r.duration] : J.fx.speeds._default,
        (null  == r.queue || r.queue === !0) && (r.queue = "fx"),
        r.old = r.complete,
        r.complete = function() {
            J.isFunction(r.old) && r.old.call(this),
            r.queue && J.dequeue(this, r.queue)
        }
        ,
        r
    }
    ,
    J.fn.extend({
        fadeTo: function(t, e, i, r) {
            return this.filter(wt).css("opacity", 0).show().end().animate({
                opacity: e
            }, t, i, r)
        },
        animate: function(t, e, i, r) {
            var n = J.isEmptyObject(t)
              , o = J.speed(e, i, r)
              , a = function() {
                var e = k(this, J.extend({}, t), o);
                (n || Et.get(this, "finish")) && e.stop(!0)
            }
            ;
            return a.finish = a,
            n || o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(t, e, i) {
            var r = function(t) {
                var e = t.stop;
                delete t.stop,
                e(i)
            }
            ;
            return "string" != typeof t && (i = e,
            e = t,
            t = void 0),
            e && t !== !1 && this.queue(t || "fx", []),
            this.each(function() {
                var e = !0
                  , n = null  != t && t + "queueHooks"
                  , o = J.timers
                  , a = Et.get(this);
                if (n)
                    a[n] && a[n].stop && r(a[n]);
                else
                    for (n in a)
                        a[n] && a[n].stop && te.test(n) && r(a[n]);
                for (n = o.length; n--; )
                    o[n].elem !== this || null  != t && o[n].queue !== t || (o[n].anim.stop(i),
                    e = !1,
                    o.splice(n, 1));
                (e || !i) && J.dequeue(this, t)
            }
            )
        },
        finish: function(t) {
            return t !== !1 && (t = t || "fx"),
            this.each(function() {
                var e, i = Et.get(this), r = i[t + "queue"], n = i[t + "queueHooks"], o = J.timers, a = r ? r.length : 0;
                for (i.finish = !0,
                J.queue(this, t, []),
                n && n.stop && n.stop.call(this, !0),
                e = o.length; e--; )
                    o[e].elem === this && o[e].queue === t && (o[e].anim.stop(!0),
                    o.splice(e, 1));
                for (e = 0; a > e; e++)
                    r[e] && r[e].finish && r[e].finish.call(this);
                delete i.finish
            }
            )
        }
    }),
    J.each(["toggle", "show", "hide"], function(t, e) {
        var i = J.fn[e];
        J.fn[e] = function(t, r, n) {
            return null  == t || "boolean" == typeof t ? i.apply(this, arguments) : this.animate(A(e, !0), t, r, n)
        }
    }
    ),
    J.each({
        slideDown: A("show"),
        slideUp: A("hide"),
        slideToggle: A("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(t, e) {
        J.fn[t] = function(t, i, r) {
            return this.animate(e, t, i, r)
        }
    }
    ),
    J.timers = [],
    J.fx.tick = function() {
        var t, e = 0, i = J.timers;
        for (Qt = J.now(); e < i.length; e++)
            t = i[e],
            t() || i[e] !== t || i.splice(e--, 1);
        i.length || J.fx.stop(),
        Qt = void 0
    }
    ,
    J.fx.timer = function(t) {
        J.timers.push(t),
        t() ? J.fx.start() : J.timers.pop()
    }
    ,
    J.fx.interval = 13,
    J.fx.start = function() {
        Kt || (Kt = setInterval(J.fx.tick, J.fx.interval))
    }
    ,
    J.fx.stop = function() {
        clearInterval(Kt),
        Kt = null 
    }
    ,
    J.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    J.fn.delay = function(t, e) {
        return t = J.fx ? J.fx.speeds[t] || t : t,
        e = e || "fx",
        this.queue(e, function(e, i) {
            var r = setTimeout(e, t);
            i.stop = function() {
                clearTimeout(r)
            }
        }
        )
    }
    ,
    function() {
        var t = K.createElement("input")
          , e = K.createElement("select")
          , i = e.appendChild(K.createElement("option"));
        t.type = "checkbox",
        Q.checkOn = "" !== t.value,
        Q.optSelected = i.selected,
        e.disabled = !0,
        Q.optDisabled = !i.disabled,
        t = K.createElement("input"),
        t.value = "t",
        t.type = "radio",
        Q.radioValue = "t" === t.value
    }
    ();
    var re, ne, oe = J.expr.attrHandle;
    J.fn.extend({
        attr: function(t, e) {
            return gt(this, J.attr, t, e, arguments.length > 1)
        },
        removeAttr: function(t) {
            return this.each(function() {
                J.removeAttr(this, t)
            }
            )
        }
    }),
    J.extend({
        attr: function(t, e, i) {
            var r, n, o = t.nodeType;
            return t && 3 !== o && 8 !== o && 2 !== o ? typeof t.getAttribute === Rt ? J.prop(t, e, i) : (1 === o && J.isXMLDoc(t) || (e = e.toLowerCase(),
            r = J.attrHooks[e] || (J.expr.match.bool.test(e) ? ne : re)),
            void 0 === i ? r && "get" in r && null  !== (n = r.get(t, e)) ? n : (n = J.find.attr(t, e),
            null  == n ? void 0 : n) : null  !== i ? r && "set" in r && void 0 !== (n = r.set(t, i, e)) ? n : (t.setAttribute(e, i + ""),
            i) : void J.removeAttr(t, e)) : void 0
        },
        removeAttr: function(t, e) {
            var i, r, n = 0, o = e && e.match(dt);
            if (o && 1 === t.nodeType)
                for (; i = o[n++]; )
                    r = J.propFix[i] || i,
                    J.expr.match.bool.test(i) && (t[r] = !1),
                    t.removeAttribute(i)
        },
        attrHooks: {
            type: {
                set: function(t, e) {
                    if (!Q.radioValue && "radio" === e && J.nodeName(t, "input")) {
                        var i = t.value;
                        return t.setAttribute("type", e),
                        i && (t.value = i),
                        e
                    }
                }
            }
        }
    }),
    ne = {
        set: function(t, e, i) {
            return e === !1 ? J.removeAttr(t, i) : t.setAttribute(i, i),
            i
        }
    },
    J.each(J.expr.match.bool.source.match(/\w+/g), function(t, e) {
        var i = oe[e] || J.find.attr;
        oe[e] = function(t, e, r) {
            var n, o;
            return r || (o = oe[e],
            oe[e] = n,
            n = null  != i(t, e, r) ? e.toLowerCase() : null ,
            oe[e] = o),
            n
        }
    }
    );
    var ae = /^(?:input|select|textarea|button)$/i;
    J.fn.extend({
        prop: function(t, e) {
            return gt(this, J.prop, t, e, arguments.length > 1)
        },
        removeProp: function(t) {
            return this.each(function() {
                delete this[J.propFix[t] || t]
            }
            )
        }
    }),
    J.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(t, e, i) {
            var r, n, o, a = t.nodeType;
            return t && 3 !== a && 8 !== a && 2 !== a ? (o = 1 !== a || !J.isXMLDoc(t),
            o && (e = J.propFix[e] || e,
            n = J.propHooks[e]),
            void 0 !== i ? n && "set" in n && void 0 !== (r = n.set(t, i, e)) ? r : t[e] = i : n && "get" in n && null  !== (r = n.get(t, e)) ? r : t[e]) : void 0
        },
        propHooks: {
            tabIndex: {
                get: function(t) {
                    return t.hasAttribute("tabindex") || ae.test(t.nodeName) || t.href ? t.tabIndex : -1
                }
            }
        }
    }),
    Q.optSelected || (J.propHooks.selected = {
        get: function(t) {
            var e = t.parentNode;
            return e && e.parentNode && e.parentNode.selectedIndex,
            null 
        }
    }),
    J.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        J.propFix[this.toLowerCase()] = this
    }
    );
    var se = /[\t\r\n\f]/g;
    J.fn.extend({
        addClass: function(t) {
            var e, i, r, n, o, a, s = "string" == typeof t && t, l = 0, h = this.length;
            if (J.isFunction(t))
                return this.each(function(e) {
                    J(this).addClass(t.call(this, e, this.className))
                }
                );
            if (s)
                for (e = (t || "").match(dt) || []; h > l; l++)
                    if (i = this[l],
                    r = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(se, " ") : " ")) {
                        for (o = 0; n = e[o++]; )
                            r.indexOf(" " + n + " ") < 0 && (r += n + " ");
                        a = J.trim(r),
                        i.className !== a && (i.className = a)
                    }
            return this
        },
        removeClass: function(t) {
            var e, i, r, n, o, a, s = 0 === arguments.length || "string" == typeof t && t, l = 0, h = this.length;
            if (J.isFunction(t))
                return this.each(function(e) {
                    J(this).removeClass(t.call(this, e, this.className))
                }
                );
            if (s)
                for (e = (t || "").match(dt) || []; h > l; l++)
                    if (i = this[l],
                    r = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(se, " ") : "")) {
                        for (o = 0; n = e[o++]; )
                            for (; r.indexOf(" " + n + " ") >= 0; )
                                r = r.replace(" " + n + " ", " ");
                        a = t ? J.trim(r) : "",
                        i.className !== a && (i.className = a)
                    }
            return this
        },
        toggleClass: function(t, e) {
            var i = typeof t;
            return "boolean" == typeof e && "string" === i ? e ? this.addClass(t) : this.removeClass(t) : this.each(J.isFunction(t) ? function(i) {
                J(this).toggleClass(t.call(this, i, this.className, e), e)
            }
             : function() {
                if ("string" === i)
                    for (var e, r = 0, n = J(this), o = t.match(dt) || []; e = o[r++]; )
                        n.hasClass(e) ? n.removeClass(e) : n.addClass(e);
                else
                    (i === Rt || "boolean" === i) && (this.className && Et.set(this, "__className__", this.className),
                    this.className = this.className || t === !1 ? "" : Et.get(this, "__className__") || "")
            }
            )
        },
        hasClass: function(t) {
            for (var e = " " + t + " ", i = 0, r = this.length; r > i; i++)
                if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(se, " ").indexOf(e) >= 0)
                    return !0;
            return !1
        }
    });
    var le = /\r/g;
    J.fn.extend({
        val: function(t) {
            var e, i, r, n = this[0];
            return arguments.length ? (r = J.isFunction(t),
            this.each(function(i) {
                var n;
                1 === this.nodeType && (n = r ? t.call(this, i, J(this).val()) : t,
                null  == n ? n = "" : "number" == typeof n ? n += "" : J.isArray(n) && (n = J.map(n, function(t) {
                    return null  == t ? "" : t + ""
                }
                )),
                e = J.valHooks[this.type] || J.valHooks[this.nodeName.toLowerCase()],
                e && "set" in e && void 0 !== e.set(this, n, "value") || (this.value = n))
            }
            )) : n ? (e = J.valHooks[n.type] || J.valHooks[n.nodeName.toLowerCase()],
            e && "get" in e && void 0 !== (i = e.get(n, "value")) ? i : (i = n.value,
            "string" == typeof i ? i.replace(le, "") : null  == i ? "" : i)) : void 0
        }
    }),
    J.extend({
        valHooks: {
            option: {
                get: function(t) {
                    var e = J.find.attr(t, "value");
                    return null  != e ? e : J.trim(J.text(t))
                }
            },
            select: {
                get: function(t) {
                    for (var e, i, r = t.options, n = t.selectedIndex, o = "select-one" === t.type || 0 > n, a = o ? null  : [], s = o ? n + 1 : r.length, l = 0 > n ? s : o ? n : 0; s > l; l++)
                        if (i = r[l],
                        !(!i.selected && l !== n || (Q.optDisabled ? i.disabled : null  !== i.getAttribute("disabled")) || i.parentNode.disabled && J.nodeName(i.parentNode, "optgroup"))) {
                            if (e = J(i).val(),
                            o)
                                return e;
                            a.push(e)
                        }
                    return a
                },
                set: function(t, e) {
                    for (var i, r, n = t.options, o = J.makeArray(e), a = n.length; a--; )
                        r = n[a],
                        (r.selected = J.inArray(r.value, o) >= 0) && (i = !0);
                    return i || (t.selectedIndex = -1),
                    o
                }
            }
        }
    }),
    J.each(["radio", "checkbox"], function() {
        J.valHooks[this] = {
            set: function(t, e) {
                return J.isArray(e) ? t.checked = J.inArray(J(t).val(), e) >= 0 : void 0
            }
        },
        Q.checkOn || (J.valHooks[this].get = function(t) {
            return null  === t.getAttribute("value") ? "on" : t.value
        }
        )
    }
    ),
    J.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(t, e) {
        J.fn[e] = function(t, i) {
            return arguments.length > 0 ? this.on(e, null , t, i) : this.trigger(e)
        }
    }
    ),
    J.fn.extend({
        hover: function(t, e) {
            return this.mouseenter(t).mouseleave(e || t)
        },
        bind: function(t, e, i) {
            return this.on(t, null , e, i)
        },
        unbind: function(t, e) {
            return this.off(t, null , e)
        },
        delegate: function(t, e, i, r) {
            return this.on(e, t, i, r)
        },
        undelegate: function(t, e, i) {
            return 1 === arguments.length ? this.off(t, "**") : this.off(e, t || "**", i)
        }
    });
    var he = J.now()
      , ce = /\?/;
    J.parseJSON = function(t) {
        return JSON.parse(t + "")
    }
    ,
    J.parseXML = function(t) {
        var e, i;
        if (!t || "string" != typeof t)
            return null ;
        try {
            i = new DOMParser,
            e = i.parseFromString(t, "text/xml")
        } catch (r) {
            e = void 0
        }
        return (!e || e.getElementsByTagName("parsererror").length) && J.error("Invalid XML: " + t),
        e
    }
    ;
    var ue, pe, de = /#.*$/, fe = /([?&])_=[^&]*/, me = /^(.*?):[ \t]*([^\r\n]*)$/gm, ge = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Ee = /^(?:GET|HEAD)$/, ye = /^\/\//, ve = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, _e = {}, xe = {}, Te = "*/".concat("*");
    try {
        pe = location.href
    } catch (we) {
        pe = K.createElement("a"),
        pe.href = "",
        pe = pe.href
    }
    ue = ve.exec(pe.toLowerCase()) || [],
    J.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: pe,
            type: "GET",
            isLocal: ge.test(ue[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Te,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": J.parseJSON,
                "text xml": J.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(t, e) {
            return e ? N(N(t, J.ajaxSettings), e) : N(J.ajaxSettings, t)
        },
        ajaxPrefilter: O(_e),
        ajaxTransport: O(xe),
        ajax: function(t, e) {
            function i(t, e, i, a) {
                var l, c, E, y, _, T = e;
                2 !== v && (v = 2,
                s && clearTimeout(s),
                r = void 0,
                o = a || "",
                x.readyState = t > 0 ? 4 : 0,
                l = t >= 200 && 300 > t || 304 === t,
                i && (y = z(u, x, i)),
                y = V(u, y, x, l),
                l ? (u.ifModified && (_ = x.getResponseHeader("Last-Modified"),
                _ && (J.lastModified[n] = _),
                _ = x.getResponseHeader("etag"),
                _ && (J.etag[n] = _)),
                204 === t || "HEAD" === u.type ? T = "nocontent" : 304 === t ? T = "notmodified" : (T = y.state,
                c = y.data,
                E = y.error,
                l = !E)) : (E = T,
                (t || !T) && (T = "error",
                0 > t && (t = 0))),
                x.status = t,
                x.statusText = (e || T) + "",
                l ? f.resolveWith(p, [c, T, x]) : f.rejectWith(p, [x, T, E]),
                x.statusCode(g),
                g = void 0,
                h && d.trigger(l ? "ajaxSuccess" : "ajaxError", [x, u, l ? c : E]),
                m.fireWith(p, [x, T]),
                h && (d.trigger("ajaxComplete", [x, u]),
                --J.active || J.event.trigger("ajaxStop")))
            }
            "object" == typeof t && (e = t,
            t = void 0),
            e = e || {};
            var r, n, o, a, s, l, h, c, u = J.ajaxSetup({}, e), p = u.context || u, d = u.context && (p.nodeType || p.jquery) ? J(p) : J.event, f = J.Deferred(), m = J.Callbacks("once memory"), g = u.statusCode || {}, E = {}, y = {}, v = 0, _ = "canceled", x = {
                readyState: 0,
                getResponseHeader: function(t) {
                    var e;
                    if (2 === v) {
                        if (!a)
                            for (a = {}; e = me.exec(o); )
                                a[e[1].toLowerCase()] = e[2];
                        e = a[t.toLowerCase()]
                    }
                    return null  == e ? null  : e
                },
                getAllResponseHeaders: function() {
                    return 2 === v ? o : null 
                },
                setRequestHeader: function(t, e) {
                    var i = t.toLowerCase();
                    return v || (t = y[i] = y[i] || t,
                    E[t] = e),
                    this
                },
                overrideMimeType: function(t) {
                    return v || (u.mimeType = t),
                    this
                },
                statusCode: function(t) {
                    var e;
                    if (t)
                        if (2 > v)
                            for (e in t)
                                g[e] = [g[e], t[e]];
                        else
                            x.always(t[x.status]);
                    return this
                },
                abort: function(t) {
                    var e = t || _;
                    return r && r.abort(e),
                    i(0, e),
                    this
                }
            };
            if (f.promise(x).complete = m.add,
            x.success = x.done,
            x.error = x.fail,
            u.url = ((t || u.url || pe) + "").replace(de, "").replace(ye, ue[1] + "//"),
            u.type = e.method || e.type || u.method || u.type,
            u.dataTypes = J.trim(u.dataType || "*").toLowerCase().match(dt) || [""],
            null  == u.crossDomain && (l = ve.exec(u.url.toLowerCase()),
            u.crossDomain = !(!l || l[1] === ue[1] && l[2] === ue[2] && (l[3] || ("http:" === l[1] ? "80" : "443")) === (ue[3] || ("http:" === ue[1] ? "80" : "443")))),
            u.data && u.processData && "string" != typeof u.data && (u.data = J.param(u.data, u.traditional)),
            F(_e, u, e, x),
            2 === v)
                return x;
            h = u.global,
            h && 0 === J.active++ && J.event.trigger("ajaxStart"),
            u.type = u.type.toUpperCase(),
            u.hasContent = !Ee.test(u.type),
            n = u.url,
            u.hasContent || (u.data && (n = u.url += (ce.test(n) ? "&" : "?") + u.data,
            delete u.data),
            u.cache === !1 && (u.url = fe.test(n) ? n.replace(fe, "$1_=" + he++) : n + (ce.test(n) ? "&" : "?") + "_=" + he++)),
            u.ifModified && (J.lastModified[n] && x.setRequestHeader("If-Modified-Since", J.lastModified[n]),
            J.etag[n] && x.setRequestHeader("If-None-Match", J.etag[n])),
            (u.data && u.hasContent && u.contentType !== !1 || e.contentType) && x.setRequestHeader("Content-Type", u.contentType),
            x.setRequestHeader("Accept", u.dataTypes[0] && u.accepts[u.dataTypes[0]] ? u.accepts[u.dataTypes[0]] + ("*" !== u.dataTypes[0] ? ", " + Te + "; q=0.01" : "") : u.accepts["*"]);
            for (c in u.headers)
                x.setRequestHeader(c, u.headers[c]);
            if (u.beforeSend && (u.beforeSend.call(p, x, u) === !1 || 2 === v))
                return x.abort();
            _ = "abort";
            for (c in {
                success: 1,
                error: 1,
                complete: 1
            })
                x[c](u[c]);
            if (r = F(xe, u, e, x)) {
                x.readyState = 1,
                h && d.trigger("ajaxSend", [x, u]),
                u.async && u.timeout > 0 && (s = setTimeout(function() {
                    x.abort("timeout")
                }
                , u.timeout));
                try {
                    v = 1,
                    r.send(E, i)
                } catch (T) {
                    if (!(2 > v))
                        throw T;
                    i(-1, T)
                }
            } else
                i(-1, "No Transport");
            return x
        },
        getJSON: function(t, e, i) {
            return J.get(t, e, i, "json")
        },
        getScript: function(t, e) {
            return J.get(t, void 0, e, "script")
        }
    }),
    J.each(["get", "post"], function(t, e) {
        J[e] = function(t, i, r, n) {
            return J.isFunction(i) && (n = n || r,
            r = i,
            i = void 0),
            J.ajax({
                url: t,
                type: e,
                dataType: n,
                data: i,
                success: r
            })
        }
    }
    ),
    J.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(t, e) {
        J.fn[e] = function(t) {
            return this.on(e, t)
        }
    }
    ),
    J._evalUrl = function(t) {
        return J.ajax({
            url: t,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }
    ,
    J.fn.extend({
        wrapAll: function(t) {
            var e;
            return J.isFunction(t) ? this.each(function(e) {
                J(this).wrapAll(t.call(this, e))
            }
            ) : (this[0] && (e = J(t, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && e.insertBefore(this[0]),
            e.map(function() {
                for (var t = this; t.firstElementChild; )
                    t = t.firstElementChild;
                return t
            }
            ).append(this)),
            this)
        },
        wrapInner: function(t) {
            return this.each(J.isFunction(t) ? function(e) {
                J(this).wrapInner(t.call(this, e))
            }
             : function() {
                var e = J(this)
                  , i = e.contents();
                i.length ? i.wrapAll(t) : e.append(t)
            }
            )
        },
        wrap: function(t) {
            var e = J.isFunction(t);
            return this.each(function(i) {
                J(this).wrapAll(e ? t.call(this, i) : t)
            }
            )
        },
        unwrap: function() {
            return this.parent().each(function() {
                J.nodeName(this, "body") || J(this).replaceWith(this.childNodes)
            }
            ).end()
        }
    }),
    J.expr.filters.hidden = function(t) {
        return t.offsetWidth <= 0 && t.offsetHeight <= 0
    }
    ,
    J.expr.filters.visible = function(t) {
        return !J.expr.filters.hidden(t)
    }
    ;
    var be = /%20/g
      , Re = /\[\]$/
      , He = /\r?\n/g
      , Se = /^(?:submit|button|image|reset|file)$/i
      , Me = /^(?:input|select|textarea|keygen)/i;
    J.param = function(t, e) {
        var i, r = [], n = function(t, e) {
            e = J.isFunction(e) ? e() : null  == e ? "" : e,
            r[r.length] = encodeURIComponent(t) + "=" + encodeURIComponent(e)
        }
        ;
        if (void 0 === e && (e = J.ajaxSettings && J.ajaxSettings.traditional),
        J.isArray(t) || t.jquery && !J.isPlainObject(t))
            J.each(t, function() {
                n(this.name, this.value)
            }
            );
        else
            for (i in t)
                I(i, t[i], e, n);
        return r.join("&").replace(be, "+")
    }
    ,
    J.fn.extend({
        serialize: function() {
            return J.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var t = J.prop(this, "elements");
                return t ? J.makeArray(t) : this
            }
            ).filter(function() {
                var t = this.type;
                return this.name && !J(this).is(":disabled") && Me.test(this.nodeName) && !Se.test(t) && (this.checked || !bt.test(t))
            }
            ).map(function(t, e) {
                var i = J(this).val();
                return null  == i ? null  : J.isArray(i) ? J.map(i, function(t) {
                    return {
                        name: e.name,
                        value: t.replace(He, "\r\n")
                    }
                }
                ) : {
                    name: e.name,
                    value: i.replace(He, "\r\n")
                }
            }
            ).get()
        }
    }),
    J.ajaxSettings.xhr = function() {
        try {
            return new XMLHttpRequest
        } catch (t) {}
    }
    ;
    var Ce = 0
      , Ae = {}
      , Pe = {
        0: 200,
        1223: 204
    }
      , Le = J.ajaxSettings.xhr();
    t.ActiveXObject && J(t).on("unload", function() {
        for (var t in Ae)
            Ae[t]()
    }
    ),
    Q.cors = !!Le && "withCredentials" in Le,
    Q.ajax = Le = !!Le,
    J.ajaxTransport(function(t) {
        var e;
        return Q.cors || Le && !t.crossDomain ? {
            send: function(i, r) {
                var n, o = t.xhr(), a = ++Ce;
                if (o.open(t.type, t.url, t.async, t.username, t.password),
                t.xhrFields)
                    for (n in t.xhrFields)
                        o[n] = t.xhrFields[n];
                t.mimeType && o.overrideMimeType && o.overrideMimeType(t.mimeType),
                t.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest");
                for (n in i)
                    o.setRequestHeader(n, i[n]);
                e = function(t) {
                    return function() {
                        e && (delete Ae[a],
                        e = o.onload = o.onerror = null ,
                        "abort" === t ? o.abort() : "error" === t ? r(o.status, o.statusText) : r(Pe[o.status] || o.status, o.statusText, "string" == typeof o.responseText ? {
                            text: o.responseText
                        } : void 0, o.getAllResponseHeaders()))
                    }
                }
                ,
                o.onload = e(),
                o.onerror = e("error"),
                e = Ae[a] = e("abort");
                try {
                    o.send(t.hasContent && t.data || null )
                } catch (s) {
                    if (e)
                        throw s
                }
            },
            abort: function() {
                e && e()
            }
        } : void 0
    }
    ),
    J.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(t) {
                return J.globalEval(t),
                t
            }
        }
    }),
    J.ajaxPrefilter("script", function(t) {
        void 0 === t.cache && (t.cache = !1),
        t.crossDomain && (t.type = "GET")
    }
    ),
    J.ajaxTransport("script", function(t) {
        if (t.crossDomain) {
            var e, i;
            return {
                send: function(r, n) {
                    e = J("<script>").prop({
                        async: !0,
                        charset: t.scriptCharset,
                        src: t.url
                    }).on("load error", i = function(t) {
                        e.remove(),
                        i = null ,
                        t && n("error" === t.type ? 404 : 200, t.type)
                    }
                    ),
                    K.head.appendChild(e[0])
                },
                abort: function() {
                    i && i()
                }
            }
        }
    }
    );
    var De = []
      , ke = /(=)\?(?=&|$)|\?\?/;
    J.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var t = De.pop() || J.expando + "_" + he++;
            return this[t] = !0,
            t
        }
    }),
    J.ajaxPrefilter("json jsonp", function(e, i, r) {
        var n, o, a, s = e.jsonp !== !1 && (ke.test(e.url) ? "url" : "string" == typeof e.data && !(e.contentType || "").indexOf("application/x-www-form-urlencoded") && ke.test(e.data) && "data");
        return s || "jsonp" === e.dataTypes[0] ? (n = e.jsonpCallback = J.isFunction(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback,
        s ? e[s] = e[s].replace(ke, "$1" + n) : e.jsonp !== !1 && (e.url += (ce.test(e.url) ? "&" : "?") + e.jsonp + "=" + n),
        e.converters["script json"] = function() {
            return a || J.error(n + " was not called"),
            a[0]
        }
        ,
        e.dataTypes[0] = "json",
        o = t[n],
        t[n] = function() {
            a = arguments
        }
        ,
        r.always(function() {
            t[n] = o,
            e[n] && (e.jsonpCallback = i.jsonpCallback,
            De.push(n)),
            a && J.isFunction(o) && o(a[0]),
            a = o = void 0
        }
        ),
        "script") : void 0
    }
    ),
    J.parseHTML = function(t, e, i) {
        if (!t || "string" != typeof t)
            return null ;
        "boolean" == typeof e && (i = e,
        e = !1),
        e = e || K;
        var r = at.exec(t)
          , n = !i && [];
        return r ? [e.createElement(r[1])] : (r = J.buildFragment([t], e, n),
        n && n.length && J(n).remove(),
        J.merge([], r.childNodes))
    }
    ;
    var Oe = J.fn.load;
    J.fn.load = function(t, e, i) {
        if ("string" != typeof t && Oe)
            return Oe.apply(this, arguments);
        var r, n, o, a = this, s = t.indexOf(" ");
        return s >= 0 && (r = J.trim(t.slice(s)),
        t = t.slice(0, s)),
        J.isFunction(e) ? (i = e,
        e = void 0) : e && "object" == typeof e && (n = "POST"),
        a.length > 0 && J.ajax({
            url: t,
            type: n,
            dataType: "html",
            data: e
        }).done(function(t) {
            o = arguments,
            a.html(r ? J("<div>").append(J.parseHTML(t)).find(r) : t)
        }
        ).complete(i && function(t, e) {
            a.each(i, o || [t.responseText, e, t])
        }
        ),
        this
    }
    ,
    J.expr.filters.animated = function(t) {
        return J.grep(J.timers, function(e) {
            return t === e.elem
        }
        ).length
    }
    ;
    var Fe = t.document.documentElement;
    J.offset = {
        setOffset: function(t, e, i) {
            var r, n, o, a, s, l, h, c = J.css(t, "position"), u = J(t), p = {};
            "static" === c && (t.style.position = "relative"),
            s = u.offset(),
            o = J.css(t, "top"),
            l = J.css(t, "left"),
            h = ("absolute" === c || "fixed" === c) && (o + l).indexOf("auto") > -1,
            h ? (r = u.position(),
            a = r.top,
            n = r.left) : (a = parseFloat(o) || 0,
            n = parseFloat(l) || 0),
            J.isFunction(e) && (e = e.call(t, i, s)),
            null  != e.top && (p.top = e.top - s.top + a),
            null  != e.left && (p.left = e.left - s.left + n),
            "using" in e ? e.using.call(t, p) : u.css(p)
        }
    },
    J.fn.extend({
        offset: function(t) {
            if (arguments.length)
                return void 0 === t ? this : this.each(function(e) {
                    J.offset.setOffset(this, t, e)
                }
                );
            var e, i, r = this[0], n = {
                top: 0,
                left: 0
            }, o = r && r.ownerDocument;
            return o ? (e = o.documentElement,
            J.contains(e, r) ? (typeof r.getBoundingClientRect !== Rt && (n = r.getBoundingClientRect()),
            i = U(o),
            {
                top: n.top + i.pageYOffset - e.clientTop,
                left: n.left + i.pageXOffset - e.clientLeft
            }) : n) : void 0
        },
        position: function() {
            if (this[0]) {
                var t, e, i = this[0], r = {
                    top: 0,
                    left: 0
                };
                return "fixed" === J.css(i, "position") ? e = i.getBoundingClientRect() : (t = this.offsetParent(),
                e = this.offset(),
                J.nodeName(t[0], "html") || (r = t.offset()),
                r.top += J.css(t[0], "borderTopWidth", !0),
                r.left += J.css(t[0], "borderLeftWidth", !0)),
                {
                    top: e.top - r.top - J.css(i, "marginTop", !0),
                    left: e.left - r.left - J.css(i, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var t = this.offsetParent || Fe; t && !J.nodeName(t, "html") && "static" === J.css(t, "position"); )
                    t = t.offsetParent;
                return t || Fe
            }
            )
        }
    }),
    J.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, i) {
        var r = "pageYOffset" === i;
        J.fn[e] = function(n) {
            return gt(this, function(e, n, o) {
                var a = U(e);
                return void 0 === o ? a ? a[i] : e[n] : void (a ? a.scrollTo(r ? t.pageXOffset : o, r ? o : t.pageYOffset) : e[n] = o)
            }
            , e, n, arguments.length, null )
        }
    }
    ),
    J.each(["top", "left"], function(t, e) {
        J.cssHooks[e] = T(Q.pixelPosition, function(t, i) {
            return i ? (i = x(t, e),
            Bt.test(i) ? J(t).position()[e] + "px" : i) : void 0
        }
        )
    }
    ),
    J.each({
        Height: "height",
        Width: "width"
    }, function(t, e) {
        J.each({
            padding: "inner" + t,
            content: e,
            "": "outer" + t
        }, function(i, r) {
            J.fn[r] = function(r, n) {
                var o = arguments.length && (i || "boolean" != typeof r)
                  , a = i || (r === !0 || n === !0 ? "margin" : "border");
                return gt(this, function(e, i, r) {
                    var n;
                    return J.isWindow(e) ? e.document.documentElement["client" + t] : 9 === e.nodeType ? (n = e.documentElement,
                    Math.max(e.body["scroll" + t], n["scroll" + t], e.body["offset" + t], n["offset" + t], n["client" + t])) : void 0 === r ? J.css(e, i, a) : J.style(e, i, r, a)
                }
                , e, o ? r : void 0, o, null )
            }
        }
        )
    }
    ),
    J.fn.size = function() {
        return this.length
    }
    ,
    J.fn.andSelf = J.fn.addBack,
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return J
    }
    );
    var Ne = t.jQuery
      , ze = t.$;
    return J.noConflict = function(e) {
        return t.$ === J && (t.$ = ze),
        e && t.jQuery === J && (t.jQuery = Ne),
        J
    }
    ,
    typeof e === Rt && (t.jQuery = t.$ = J),
    J
}
),
function(t) {
    var e = "object" == typeof self && self.self == self && self || "object" == typeof global && global.global == global && global;
    if ("function" == typeof define && define.amd)
        define(["underscore", "jquery", "exports"], function(i, r, n) {
            e.Backbone = t(e, n, i, r)
        }
        );
    else if ("undefined" != typeof exports) {
        var i, r = require("underscore");
        try {
            i = require("jquery")
        } catch (n) {}
        t(e, exports, r, i)
    } else
        e.Backbone = t(e, {}, e._, e.jQuery || e.Zepto || e.ender || e.$)
}
(function(t, e, i, r) {
    var n = t.Backbone
      , o = [].slice;
    e.VERSION = "1.2.1",
    e.$ = r,
    e.noConflict = function() {
        return t.Backbone = n,
        this
    }
    ,
    e.emulateHTTP = !1,
    e.emulateJSON = !1;
    var a = function(t, e, r) {
        switch (t) {
        case 1:
            return function() {
                return i[e](this[r])
            }
            ;
        case 2:
            return function(t) {
                return i[e](this[r], t)
            }
            ;
        case 3:
            return function(t, n) {
                return i[e](this[r], t, n)
            }
            ;
        case 4:
            return function(t, n, o) {
                return i[e](this[r], t, n, o)
            }
            ;
        default:
            return function() {
                var t = o.call(arguments);
                return t.unshift(this[r]),
                i[e].apply(i, t)
            }
        }
    }
      , s = function(t, e, r) {
        i.each(e, function(e, n) {
            i[n] && (t.prototype[n] = a(e, n, r))
        }
        )
    }
      , l = e.Events = {}
      , h = /\s+/
      , c = function(t, e, r, n, o) {
        var a, s = 0;
        if (r && "object" == typeof r) {
            void 0 !== n && "context" in o && void 0 === o.context && (o.context = n);
            for (a = i.keys(r); s < a.length; s++)
                e = t(e, a[s], r[a[s]], o)
        } else if (r && h.test(r))
            for (a = r.split(h); s < a.length; s++)
                e = t(e, a[s], n, o);
        else
            e = t(e, r, n, o);
        return e
    }
    ;
    l.on = function(t, e, i) {
        return u(this, t, e, i)
    }
    ;
    var u = function(t, e, i, r, n) {
        if (t._events = c(p, t._events || {}, e, i, {
            context: r,
            ctx: t,
            listening: n
        }),
        n) {
            var o = t._listeners || (t._listeners = {});
            o[n.id] = n
        }
        return t
    }
    ;
    l.listenTo = function(t, e, r) {
        if (!t)
            return this;
        var n = t._listenId || (t._listenId = i.uniqueId("l"))
          , o = this._listeningTo || (this._listeningTo = {})
          , a = o[n];
        if (!a) {
            var s = this._listenId || (this._listenId = i.uniqueId("l"));
            a = o[n] = {
                obj: t,
                objId: n,
                id: s,
                listeningTo: o,
                count: 0
            }
        }
        return u(t, e, r, this, a),
        this
    }
    ;
    var p = function(t, e, i, r) {
        if (i) {
            var n = t[e] || (t[e] = [])
              , o = r.context
              , a = r.ctx
              , s = r.listening;
            s && s.count++,
            n.push({
                callback: i,
                context: o,
                ctx: o || a,
                listening: s
            })
        }
        return t
    }
    ;
    l.off = function(t, e, i) {
        return this._events ? (this._events = c(d, this._events, t, e, {
            context: i,
            listeners: this._listeners
        }),
        this) : this
    }
    ,
    l.stopListening = function(t, e, r) {
        var n = this._listeningTo;
        if (!n)
            return this;
        for (var o = t ? [t._listenId] : i.keys(n), a = 0; a < o.length; a++) {
            var s = n[o[a]];
            if (!s)
                break;
            s.obj.off(e, r, this)
        }
        return i.isEmpty(n) && (this._listeningTo = void 0),
        this
    }
    ;
    var d = function(t, e, r, n) {
        if (t) {
            var o, a = 0, s = n.context, l = n.listeners;
            if (e || r || s) {
                for (var h = e ? [e] : i.keys(t); a < h.length; a++) {
                    e = h[a];
                    var c = t[e];
                    if (!c)
                        break;
                    for (var u = [], p = 0; p < c.length; p++) {
                        var d = c[p];
                        r && r !== d.callback && r !== d.callback._callback || s && s !== d.context ? u.push(d) : (o = d.listening,
                        o && 0 === --o.count && (delete l[o.id],
                        delete o.listeningTo[o.objId]))
                    }
                    u.length ? t[e] = u : delete t[e]
                }
                return i.size(t) ? t : void 0
            }
            for (var f = i.keys(l); a < f.length; a++)
                o = l[f[a]],
                delete l[o.id],
                delete o.listeningTo[o.objId]
        }
    }
    ;
    l.once = function(t, e, r) {
        var n = c(f, {}, t, e, i.bind(this.off, this));
        return this.on(n, void 0, r)
    }
    ,
    l.listenToOnce = function(t, e, r) {
        var n = c(f, {}, e, r, i.bind(this.stopListening, this, t));
        return this.listenTo(t, n)
    }
    ;
    var f = function(t, e, r, n) {
        if (r) {
            var o = t[e] = i.once(function() {
                n(e, o),
                r.apply(this, arguments)
            }
            );
            o._callback = r
        }
        return t
    }
    ;
    l.trigger = function(t) {
        if (!this._events)
            return this;
        for (var e = Math.max(0, arguments.length - 1), i = Array(e), r = 0; e > r; r++)
            i[r] = arguments[r + 1];
        return c(m, this._events, t, void 0, i),
        this
    }
    ;
    var m = function(t, e, i, r) {
        if (t) {
            var n = t[e]
              , o = t.all;
            n && o && (o = o.slice()),
            n && g(n, r),
            o && g(o, [e].concat(r))
        }
        return t
    }
      , g = function(t, e) {
        var i, r = -1, n = t.length, o = e[0], a = e[1], s = e[2];
        switch (e.length) {
        case 0:
            for (; ++r < n; )
                (i = t[r]).callback.call(i.ctx);
            return;
        case 1:
            for (; ++r < n; )
                (i = t[r]).callback.call(i.ctx, o);
            return;
        case 2:
            for (; ++r < n; )
                (i = t[r]).callback.call(i.ctx, o, a);
            return;
        case 3:
            for (; ++r < n; )
                (i = t[r]).callback.call(i.ctx, o, a, s);
            return;
        default:
            for (; ++r < n; )
                (i = t[r]).callback.apply(i.ctx, e);
            return
        }
    }
    ;
    l.bind = l.on,
    l.unbind = l.off,
    i.extend(e, l);
    var E = e.Model = function(t, e) {
        var r = t || {};
        e || (e = {}),
        this.cid = i.uniqueId(this.cidPrefix),
        this.attributes = {},
        e.collection && (this.collection = e.collection),
        e.parse && (r = this.parse(r, e) || {}),
        r = i.defaults({}, r, i.result(this, "defaults")),
        this.set(r, e),
        this.changed = {},
        this.initialize.apply(this, arguments)
    }
    ;
    i.extend(E.prototype, l, {
        changed: null ,
        validationError: null ,
        idAttribute: "id",
        cidPrefix: "c",
        initialize: function() {},
        toJSON: function(t) {
            return i.clone(this.attributes)
        },
        sync: function() {
            return e.sync.apply(this, arguments)
        },
        get: function(t) {
            return this.attributes[t]
        },
        escape: function(t) {
            return i.escape(this.get(t))
        },
        has: function(t) {
            return null  != this.get(t)
        },
        matches: function(t) {
            return !!i.iteratee(t, this)(this.attributes)
        },
        set: function(t, e, r) {
            if (null  == t)
                return this;
            var n;
            if ("object" == typeof t ? (n = t,
            r = e) : (n = {})[t] = e,
            r || (r = {}),
            !this._validate(n, r))
                return !1;
            var o = r.unset
              , a = r.silent
              , s = []
              , l = this._changing;
            this._changing = !0,
            l || (this._previousAttributes = i.clone(this.attributes),
            this.changed = {});
            var h = this.attributes
              , c = this.changed
              , u = this._previousAttributes;
            this.idAttribute in n && (this.id = n[this.idAttribute]);
            for (var p in n)
                e = n[p],
                i.isEqual(h[p], e) || s.push(p),
                i.isEqual(u[p], e) ? delete c[p] : c[p] = e,
                o ? delete h[p] : h[p] = e;
            if (!a) {
                s.length && (this._pending = r);
                for (var d = 0; d < s.length; d++)
                    this.trigger("change:" + s[d], this, h[s[d]], r)
            }
            if (l)
                return this;
            if (!a)
                for (; this._pending; )
                    r = this._pending,
                    this._pending = !1,
                    this.trigger("change", this, r);
            return this._pending = !1,
            this._changing = !1,
            this
        },
        unset: function(t, e) {
            return this.set(t, void 0, i.extend({}, e, {
                unset: !0
            }))
        },
        clear: function(t) {
            var e = {};
            for (var r in this.attributes)
                e[r] = void 0;
            return this.set(e, i.extend({}, t, {
                unset: !0
            }))
        },
        hasChanged: function(t) {
            return null  == t ? !i.isEmpty(this.changed) : i.has(this.changed, t)
        },
        changedAttributes: function(t) {
            if (!t)
                return this.hasChanged() ? i.clone(this.changed) : !1;
            var e = this._changing ? this._previousAttributes : this.attributes
              , r = {};
            for (var n in t) {
                var o = t[n];
                i.isEqual(e[n], o) || (r[n] = o)
            }
            return i.size(r) ? r : !1
        },
        previous: function(t) {
            return null  != t && this._previousAttributes ? this._previousAttributes[t] : null 
        },
        previousAttributes: function() {
            return i.clone(this._previousAttributes)
        },
        fetch: function(t) {
            t = i.extend({
                parse: !0
            }, t);
            var e = this
              , r = t.success;
            return t.success = function(i) {
                var n = t.parse ? e.parse(i, t) : i;
                return e.set(n, t) ? (r && r.call(t.context, e, i, t),
                void e.trigger("sync", e, i, t)) : !1
            }
            ,
            V(this, t),
            this.sync("read", this, t)
        },
        save: function(t, e, r) {
            var n;
            null  == t || "object" == typeof t ? (n = t,
            r = e) : (n = {})[t] = e,
            r = i.extend({
                validate: !0,
                parse: !0
            }, r);
            var o = r.wait;
            if (n && !o) {
                if (!this.set(n, r))
                    return !1
            } else if (!this._validate(n, r))
                return !1;
            var a = this
              , s = r.success
              , l = this.attributes;
            r.success = function(t) {
                a.attributes = l;
                var e = r.parse ? a.parse(t, r) : t;
                return o && (e = i.extend({}, n, e)),
                e && !a.set(e, r) ? !1 : (s && s.call(r.context, a, t, r),
                void a.trigger("sync", a, t, r))
            }
            ,
            V(this, r),
            n && o && (this.attributes = i.extend({}, l, n));
            var h = this.isNew() ? "create" : r.patch ? "patch" : "update";
            "patch" !== h || r.attrs || (r.attrs = n);
            var c = this.sync(h, this, r);
            return this.attributes = l,
            c
        },
        destroy: function(t) {
            t = t ? i.clone(t) : {};
            var e = this
              , r = t.success
              , n = t.wait
              , o = function() {
                e.stopListening(),
                e.trigger("destroy", e, e.collection, t)
            }
            ;
            t.success = function(i) {
                n && o(),
                r && r.call(t.context, e, i, t),
                e.isNew() || e.trigger("sync", e, i, t)
            }
            ;
            var a = !1;
            return this.isNew() ? i.defer(t.success) : (V(this, t),
            a = this.sync("delete", this, t)),
            n || o(),
            a
        },
        url: function() {
            var t = i.result(this, "urlRoot") || i.result(this.collection, "url") || z();
            if (this.isNew())
                return t;
            var e = this.get(this.idAttribute);
            return t.replace(/[^\/]$/, "$&/") + encodeURIComponent(e)
        },
        parse: function(t, e) {
            return t
        },
        clone: function() {
            return new this.constructor(this.attributes)
        },
        isNew: function() {
            return !this.has(this.idAttribute)
        },
        isValid: function(t) {
            return this._validate({}, i.defaults({
                validate: !0
            }, t))
        },
        _validate: function(t, e) {
            if (!e.validate || !this.validate)
                return !0;
            t = i.extend({}, this.attributes, t);
            var r = this.validationError = this.validate(t, e) || null ;
            return r ? (this.trigger("invalid", this, r, i.extend(e, {
                validationError: r
            })),
            !1) : !0
        }
    });
    var y = {
        keys: 1,
        values: 1,
        pairs: 1,
        invert: 1,
        pick: 0,
        omit: 0,
        chain: 1,
        isEmpty: 1
    };
    s(E, y, "attributes");
    var v = e.Collection = function(t, e) {
        e || (e = {}),
        e.model && (this.model = e.model),
        void 0 !== e.comparator && (this.comparator = e.comparator),
        this._reset(),
        this.initialize.apply(this, arguments),
        t && this.reset(t, i.extend({
            silent: !0
        }, e))
    }
      , _ = {
        add: !0,
        remove: !0,
        merge: !0
    }
      , x = {
        add: !0,
        remove: !1
    };
    i.extend(v.prototype, l, {
        model: E,
        initialize: function() {},
        toJSON: function(t) {
            return this.map(function(e) {
                return e.toJSON(t)
            }
            )
        },
        sync: function() {
            return e.sync.apply(this, arguments)
        },
        add: function(t, e) {
            return this.set(t, i.extend({
                merge: !1
            }, e, x))
        },
        remove: function(t, e) {
            e = i.extend({}, e);
            var r = !i.isArray(t);
            t = r ? [t] : i.clone(t);
            var n = this._removeModels(t, e);
            return !e.silent && n && this.trigger("update", this, e),
            r ? n[0] : n
        },
        set: function(t, e) {
            e = i.defaults({}, e, _),
            e.parse && !this._isModel(t) && (t = this.parse(t, e));
            var r = !i.isArray(t);
            t = r ? t ? [t] : [] : t.slice();
            var n, o, a, s, l, h = e.at;
            null  != h && (h = +h),
            0 > h && (h += this.length + 1);
            for (var c = this.comparator && null  == h && e.sort !== !1, u = i.isString(this.comparator) ? this.comparator : null , p = [], d = [], f = {}, m = e.add, g = e.merge, E = e.remove, y = !c && m && E ? [] : !1, v = !1, x = 0; x < t.length; x++) {
                if (a = t[x],
                s = this.get(a))
                    E && (f[s.cid] = !0),
                    g && a !== s && (a = this._isModel(a) ? a.attributes : a,
                    e.parse && (a = s.parse(a, e)),
                    s.set(a, e),
                    c && !l && s.hasChanged(u) && (l = !0)),
                    t[x] = s;
                else if (m) {
                    if (o = t[x] = this._prepareModel(a, e),
                    !o)
                        continue;p.push(o),
                    this._addReference(o, e)
                }
                o = s || o,
                o && (n = this.modelId(o.attributes),
                !y || !o.isNew() && f[n] || (y.push(o),
                v = v || !this.models[x] || o.cid !== this.models[x].cid),
                f[n] = !0)
            }
            if (E) {
                for (var x = 0; x < this.length; x++)
                    f[(o = this.models[x]).cid] || d.push(o);
                d.length && this._removeModels(d, e)
            }
            if (p.length || v)
                if (c && (l = !0),
                this.length += p.length,
                null  != h)
                    for (var x = 0; x < p.length; x++)
                        this.models.splice(h + x, 0, p[x]);
                else {
                    y && (this.models.length = 0);
                    for (var T = y || p, x = 0; x < T.length; x++)
                        this.models.push(T[x])
                }
            if (l && this.sort({
                silent: !0
            }),
            !e.silent) {
                for (var w = null  != h ? i.clone(e) : e, x = 0; x < p.length; x++)
                    null  != h && (w.index = h + x),
                    (o = p[x]).trigger("add", o, this, w);
                (l || v) && this.trigger("sort", this, e),
                (p.length || d.length) && this.trigger("update", this, e)
            }
            return r ? t[0] : t
        },
        reset: function(t, e) {
            e = e ? i.clone(e) : {};
            for (var r = 0; r < this.models.length; r++)
                this._removeReference(this.models[r], e);
            return e.previousModels = this.models,
            this._reset(),
            t = this.add(t, i.extend({
                silent: !0
            }, e)),
            e.silent || this.trigger("reset", this, e),
            t
        },
        push: function(t, e) {
            return this.add(t, i.extend({
                at: this.length
            }, e))
        },
        pop: function(t) {
            var e = this.at(this.length - 1);
            return this.remove(e, t)
        },
        unshift: function(t, e) {
            return this.add(t, i.extend({
                at: 0
            }, e))
        },
        shift: function(t) {
            var e = this.at(0);
            return this.remove(e, t)
        },
        slice: function() {
            return o.apply(this.models, arguments)
        },
        get: function(t) {
            if (null  == t)
                return void 0;
            var e = this.modelId(this._isModel(t) ? t.attributes : t);
            return this._byId[t] || this._byId[e] || this._byId[t.cid]
        },
        at: function(t) {
            return 0 > t && (t += this.length),
            this.models[t]
        },
        where: function(t, e) {
            var r = i.matches(t);
            return this[e ? "find" : "filter"](function(t) {
                return r(t.attributes)
            }
            )
        },
        findWhere: function(t) {
            return this.where(t, !0)
        },
        sort: function(t) {
            if (!this.comparator)
                throw new Error("Cannot sort a set without a comparator");
            return t || (t = {}),
            i.isString(this.comparator) || 1 === this.comparator.length ? this.models = this.sortBy(this.comparator, this) : this.models.sort(i.bind(this.comparator, this)),
            t.silent || this.trigger("sort", this, t),
            this
        },
        pluck: function(t) {
            return i.invoke(this.models, "get", t)
        },
        fetch: function(t) {
            t = i.extend({
                parse: !0
            }, t);
            var e = t.success
              , r = this;
            return t.success = function(i) {
                var n = t.reset ? "reset" : "set";
                r[n](i, t),
                e && e.call(t.context, r, i, t),
                r.trigger("sync", r, i, t)
            }
            ,
            V(this, t),
            this.sync("read", this, t)
        },
        create: function(t, e) {
            e = e ? i.clone(e) : {};
            var r = e.wait;
            if (t = this._prepareModel(t, e),
            !t)
                return !1;
            r || this.add(t, e);
            var n = this
              , o = e.success;
            return e.success = function(t, e, i) {
                r && n.add(t, i),
                o && o.call(i.context, t, e, i)
            }
            ,
            t.save(null , e),
            t
        },
        parse: function(t, e) {
            return t
        },
        clone: function() {
            return new this.constructor(this.models,{
                model: this.model,
                comparator: this.comparator
            })
        },
        modelId: function(t) {
            return t[this.model.prototype.idAttribute || "id"]
        },
        _reset: function() {
            this.length = 0,
            this.models = [],
            this._byId = {}
        },
        _prepareModel: function(t, e) {
            if (this._isModel(t))
                return t.collection || (t.collection = this),
                t;
            e = e ? i.clone(e) : {},
            e.collection = this;
            var r = new this.model(t,e);
            return r.validationError ? (this.trigger("invalid", this, r.validationError, e),
            !1) : r
        },
        _removeModels: function(t, e) {
            for (var i = [], r = 0; r < t.length; r++) {
                var n = this.get(t[r]);
                if (n) {
                    var o = this.indexOf(n);
                    this.models.splice(o, 1),
                    this.length--,
                    e.silent || (e.index = o,
                    n.trigger("remove", n, this, e)),
                    i.push(n),
                    this._removeReference(n, e)
                }
            }
            return i.length ? i : !1
        },
        _isModel: function(t) {
            return t instanceof E
        },
        _addReference: function(t, e) {
            this._byId[t.cid] = t;
            var i = this.modelId(t.attributes);
            null  != i && (this._byId[i] = t),
            t.on("all", this._onModelEvent, this)
        },
        _removeReference: function(t, e) {
            delete this._byId[t.cid];
            var i = this.modelId(t.attributes);
            null  != i && delete this._byId[i],
            this === t.collection && delete t.collection,
            t.off("all", this._onModelEvent, this)
        },
        _onModelEvent: function(t, e, i, r) {
            if ("add" !== t && "remove" !== t || i === this) {
                if ("destroy" === t && this.remove(e, r),
                "change" === t) {
                    var n = this.modelId(e.previousAttributes())
                      , o = this.modelId(e.attributes);
                    n !== o && (null  != n && delete this._byId[n],
                    null  != o && (this._byId[o] = e))
                }
                this.trigger.apply(this, arguments)
            }
        }
    });
    var T = {
        forEach: 3,
        each: 3,
        map: 3,
        collect: 3,
        reduce: 4,
        foldl: 4,
        inject: 4,
        reduceRight: 4,
        foldr: 4,
        find: 3,
        detect: 3,
        filter: 3,
        select: 3,
        reject: 3,
        every: 3,
        all: 3,
        some: 3,
        any: 3,
        include: 2,
        contains: 2,
        invoke: 0,
        max: 3,
        min: 3,
        toArray: 1,
        size: 1,
        first: 3,
        head: 3,
        take: 3,
        initial: 3,
        rest: 3,
        tail: 3,
        drop: 3,
        last: 3,
        without: 0,
        difference: 0,
        indexOf: 3,
        shuffle: 1,
        lastIndexOf: 3,
        isEmpty: 1,
        chain: 1,
        sample: 3,
        partition: 3
    };
    s(v, T, "models");
    var w = ["groupBy", "countBy", "sortBy", "indexBy"];
    i.each(w, function(t) {
        i[t] && (v.prototype[t] = function(e, r) {
            var n = i.isFunction(e) ? e : function(t) {
                return t.get(e)
            }
            ;
            return i[t](this.models, n, r)
        }
        )
    }
    );
    var b = e.View = function(t) {
        this.cid = i.uniqueId("view"),
        i.extend(this, i.pick(t, H)),
        this._ensureElement(),
        this.initialize.apply(this, arguments)
    }
      , R = /^(\S+)\s*(.*)$/
      , H = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
    i.extend(b.prototype, l, {
        tagName: "div",
        $: function(t) {
            return this.$el.find(t)
        },
        initialize: function() {},
        render: function() {
            return this
        },
        remove: function() {
            return this._removeElement(),
            this.stopListening(),
            this
        },
        _removeElement: function() {
            this.$el.remove()
        },
        setElement: function(t) {
            return this.undelegateEvents(),
            this._setElement(t),
            this.delegateEvents(),
            this
        },
        _setElement: function(t) {
            this.$el = t instanceof e.$ ? t : e.$(t),
            this.el = this.$el[0]
        },
        delegateEvents: function(t) {
            if (t || (t = i.result(this, "events")),
            !t)
                return this;
            this.undelegateEvents();
            for (var e in t) {
                var r = t[e];
                if (i.isFunction(r) || (r = this[r]),
                r) {
                    var n = e.match(R);
                    this.delegate(n[1], n[2], i.bind(r, this))
                }
            }
            return this
        },
        delegate: function(t, e, i) {
            return this.$el.on(t + ".delegateEvents" + this.cid, e, i),
            this
        },
        undelegateEvents: function() {
            return this.$el && this.$el.off(".delegateEvents" + this.cid),
            this
        },
        undelegate: function(t, e, i) {
            return this.$el.off(t + ".delegateEvents" + this.cid, e, i),
            this
        },
        _createElement: function(t) {
            return document.createElement(t)
        },
        _ensureElement: function() {
            if (this.el)
                this.setElement(i.result(this, "el"));
            else {
                var t = i.extend({}, i.result(this, "attributes"));
                this.id && (t.id = i.result(this, "id")),
                this.className && (t["class"] = i.result(this, "className")),
                this.setElement(this._createElement(i.result(this, "tagName"))),
                this._setAttributes(t)
            }
        },
        _setAttributes: function(t) {
            this.$el.attr(t)
        }
    }),
    e.sync = function(t, r, n) {
        var o = S[t];
        i.defaults(n || (n = {}), {
            emulateHTTP: e.emulateHTTP,
            emulateJSON: e.emulateJSON
        });
        var a = {
            type: o,
            dataType: "json"
        };
        if (n.url || (a.url = i.result(r, "url") || z()),
        null  != n.data || !r || "create" !== t && "update" !== t && "patch" !== t || (a.contentType = "application/json",
        a.data = JSON.stringify(n.attrs || r.toJSON(n))),
        n.emulateJSON && (a.contentType = "application/x-www-form-urlencoded",
        a.data = a.data ? {
            model: a.data
        } : {}),
        n.emulateHTTP && ("PUT" === o || "DELETE" === o || "PATCH" === o)) {
            a.type = "POST",
            n.emulateJSON && (a.data._method = o);
            var s = n.beforeSend;
            n.beforeSend = function(t) {
                return t.setRequestHeader("X-HTTP-Method-Override", o),
                s ? s.apply(this, arguments) : void 0
            }
        }
        "GET" === a.type || n.emulateJSON || (a.processData = !1);
        var l = n.error;
        n.error = function(t, e, i) {
            n.textStatus = e,
            n.errorThrown = i,
            l && l.call(n.context, t, e, i)
        }
        ;
        var h = n.xhr = e.ajax(i.extend(a, n));
        return r.trigger("request", r, h, n),
        h
    }
    ;
    var S = {
        create: "POST",
        update: "PUT",
        patch: "PATCH",
        "delete": "DELETE",
        read: "GET"
    };
    e.ajax = function() {
        return e.$.ajax.apply(e.$, arguments)
    }
    ;
    var M = e.Router = function(t) {
        t || (t = {}),
        t.routes && (this.routes = t.routes),
        this._bindRoutes(),
        this.initialize.apply(this, arguments)
    }
      , C = /\((.*?)\)/g
      , A = /(\(\?)?:\w+/g
      , P = /\*\w+/g
      , L = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    i.extend(M.prototype, l, {
        initialize: function() {},
        route: function(t, r, n) {
            i.isRegExp(t) || (t = this._routeToRegExp(t)),
            i.isFunction(r) && (n = r,
            r = ""),
            n || (n = this[r]);
            var o = this;
            return e.history.route(t, function(i) {
                var a = o._extractParameters(t, i);
                o.execute(n, a, r) !== !1 && (o.trigger.apply(o, ["route:" + r].concat(a)),
                o.trigger("route", r, a),
                e.history.trigger("route", o, r, a))
            }
            ),
            this
        },
        execute: function(t, e, i) {
            t && t.apply(this, e)
        },
        navigate: function(t, i) {
            return e.history.navigate(t, i),
            this
        },
        _bindRoutes: function() {
            if (this.routes) {
                this.routes = i.result(this, "routes");
                for (var t, e = i.keys(this.routes); null  != (t = e.pop()); )
                    this.route(t, this.routes[t])
            }
        },
        _routeToRegExp: function(t) {
            return t = t.replace(L, "\\$&").replace(C, "(?:$1)?").replace(A, function(t, e) {
                return e ? t : "([^/?]+)"
            }
            ).replace(P, "([^?]*?)"),
            new RegExp("^" + t + "(?:\\?([\\s\\S]*))?$")
        },
        _extractParameters: function(t, e) {
            var r = t.exec(e).slice(1);
            return i.map(r, function(t, e) {
                return e === r.length - 1 ? t || null  : t ? decodeURIComponent(t) : null 
            }
            )
        }
    });
    var D = e.History = function() {
        this.handlers = [],
        i.bindAll(this, "checkUrl"),
        "undefined" != typeof window && (this.location = window.location,
        this.history = window.history)
    }
      , k = /^[#\/]|\s+$/g
      , O = /^\/+|\/+$/g
      , F = /#.*$/;
    D.started = !1,
    i.extend(D.prototype, l, {
        interval: 50,
        atRoot: function() {
            var t = this.location.pathname.replace(/[^\/]$/, "$&/");
            return t === this.root && !this.getSearch()
        },
        matchRoot: function() {
            var t = this.decodeFragment(this.location.pathname)
              , e = t.slice(0, this.root.length - 1) + "/";
            return e === this.root
        },
        decodeFragment: function(t) {
            return decodeURI(t.replace(/%25/g, "%2525"))
        },
        getSearch: function() {
            var t = this.location.href.replace(/#.*/, "").match(/\?.+/);
            return t ? t[0] : ""
        },
        getHash: function(t) {
            var e = (t || this).location.href.match(/#(.*)$/);
            return e ? e[1] : ""
        },
        getPath: function() {
            var t = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
            return "/" === t.charAt(0) ? t.slice(1) : t
        },
        getFragment: function(t) {
            return null  == t && (t = this._usePushState || !this._wantsHashChange ? this.getPath() : this.getHash()),
            t.replace(k, "")
        },
        start: function(t) {
            if (D.started)
                throw new Error("Backbone.history has already been started");
            if (D.started = !0,
            this.options = i.extend({
                root: "/"
            }, this.options, t),
            this.root = this.options.root,
            this._wantsHashChange = this.options.hashChange !== !1,
            this._hasHashChange = "onhashchange" in window,
            this._useHashChange = this._wantsHashChange && this._hasHashChange,
            this._wantsPushState = !!this.options.pushState,
            this._hasPushState = !(!this.history || !this.history.pushState),
            this._usePushState = this._wantsPushState && this._hasPushState,
            this.fragment = this.getFragment(),
            this.root = ("/" + this.root + "/").replace(O, "/"),
            this._wantsHashChange && this._wantsPushState) {
                if (!this._hasPushState && !this.atRoot()) {
                    var e = this.root.slice(0, -1) || "/";
                    return this.location.replace(e + "#" + this.getPath()),
                    !0
                }
                this._hasPushState && this.atRoot() && this.navigate(this.getHash(), {
                    replace: !0
                })
            }
            if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
                this.iframe = document.createElement("iframe"),
                this.iframe.src = "javascript:0",
                this.iframe.style.display = "none",
                this.iframe.tabIndex = -1;
                var r = document.body
                  , n = r.insertBefore(this.iframe, r.firstChild).contentWindow;
                n.document.open(),
                n.document.close(),
                n.location.hash = "#" + this.fragment
            }
            var o = window.addEventListener || function(t, e) {
                return attachEvent("on" + t, e)
            }
            ;
            return this._usePushState ? o("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe ? o("hashchange", this.checkUrl, !1) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)),
            this.options.silent ? void 0 : this.loadUrl()
        },
        stop: function() {
            var t = window.removeEventListener || function(t, e) {
                return detachEvent("on" + t, e)
            }
            ;
            this._usePushState ? t("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe && t("hashchange", this.checkUrl, !1),
            this.iframe && (document.body.removeChild(this.iframe),
            this.iframe = null ),
            this._checkUrlInterval && clearInterval(this._checkUrlInterval),
            D.started = !1
        },
        route: function(t, e) {
            this.handlers.unshift({
                route: t,
                callback: e
            })
        },
        checkUrl: function(t) {
            var e = this.getFragment();
            return e === this.fragment && this.iframe && (e = this.getHash(this.iframe.contentWindow)),
            e === this.fragment ? !1 : (this.iframe && this.navigate(e),
            void this.loadUrl())
        },
        loadUrl: function(t) {
            return this.matchRoot() ? (t = this.fragment = this.getFragment(t),
            i.any(this.handlers, function(e) {
                return e.route.test(t) ? (e.callback(t),
                !0) : void 0
            }
            )) : !1
        },
        navigate: function(t, e) {
            if (!D.started)
                return !1;
            e && e !== !0 || (e = {
                trigger: !!e
            }),
            t = this.getFragment(t || "");
            var i = this.root;
            ("" === t || "?" === t.charAt(0)) && (i = i.slice(0, -1) || "/");
            var r = i + t;
            if (t = this.decodeFragment(t.replace(F, "")),
            this.fragment !== t) {
                if (this.fragment = t,
                this._usePushState)
                    this.history[e.replace ? "replaceState" : "pushState"]({}, document.title, r);
                else {
                    if (!this._wantsHashChange)
                        return this.location.assign(r);
                    if (this._updateHash(this.location, t, e.replace),
                    this.iframe && t !== this.getHash(this.iframe.contentWindow)) {
                        var n = this.iframe.contentWindow;
                        e.replace || (n.document.open(),
                        n.document.close()),
                        this._updateHash(n.location, t, e.replace)
                    }
                }
                return e.trigger ? this.loadUrl(t) : void 0
            }
        },
        _updateHash: function(t, e, i) {
            if (i) {
                var r = t.href.replace(/(javascript:|#).*$/, "");
                t.replace(r + "#" + e)
            } else
                t.hash = "#" + e
        }
    }),
    e.history = new D;
    var N = function(t, e) {
        var r, n = this;
        r = t && i.has(t, "constructor") ? t.constructor : function() {
            return n.apply(this, arguments)
        }
        ,
        i.extend(r, n, e);
        var o = function() {
            this.constructor = r
        }
        ;
        return o.prototype = n.prototype,
        r.prototype = new o,
        t && i.extend(r.prototype, t),
        r.__super__ = n.prototype,
        r
    }
    ;
    E.extend = v.extend = M.extend = b.extend = D.extend = N;
    var z = function() {
        throw new Error('A "url" property or function must be specified')
    }
      , V = function(t, e) {
        var i = e.error;
        e.error = function(r) {
            i && i.call(e.context, t, r, e),
            t.trigger("error", t, r, e)
        }
    }
    ;
    return e
}
);
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
    "use strict";
    _gsScope._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, i) {
        var r = function(t) {
            var e, i = [], r = t.length;
            for (e = 0; e !== r; i.push(t[e++]))
                ;
            return i
        }
          , n = function(t, e, r) {
            i.call(this, t, e, r),
            this._cycle = 0,
            this._yoyo = this.vars.yoyo === !0,
            this._repeat = this.vars.repeat || 0,
            this._repeatDelay = this.vars.repeatDelay || 0,
            this._dirty = !0,
            this.render = n.prototype.render
        }
          , o = 1e-10
          , a = i._internals
          , s = a.isSelector
          , l = a.isArray
          , h = n.prototype = i.to({}, .1, {})
          , c = [];
        n.version = "1.13.1",
        h.constructor = n,
        h.kill()._gc = !1,
        n.killTweensOf = n.killDelayedCallsTo = i.killTweensOf,
        n.getTweensOf = i.getTweensOf,
        n.lagSmoothing = i.lagSmoothing,
        n.ticker = i.ticker,
        n.render = i.render,
        h.invalidate = function() {
            return this._yoyo = this.vars.yoyo === !0,
            this._repeat = this.vars.repeat || 0,
            this._repeatDelay = this.vars.repeatDelay || 0,
            this._uncache(!0),
            i.prototype.invalidate.call(this)
        }
        ,
        h.updateTo = function(t, e) {
            var r, n = this.ratio;
            e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
            this._uncache(!1),
            this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
            for (r in t)
                this.vars[r] = t[r];
            if (this._initted)
                if (e)
                    this._initted = !1;
                else if (this._gc && this._enabled(!0, !1),
                this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this),
                this._time / this._duration > .998) {
                    var o = this._time;
                    this.render(0, !0, !1),
                    this._initted = !1,
                    this.render(o, !0, !1)
                } else if (this._time > 0) {
                    this._initted = !1,
                    this._init();
                    for (var a, s = 1 / (1 - n), l = this._firstPT; l; )
                        a = l.s + l.c,
                        l.c *= s,
                        l.s = a - l.c,
                        l = l._next
                }
            return this
        }
        ,
        h.render = function(t, e, i) {
            this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
            var r, n, s, l, h, u, p, d, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._time, g = this._totalTime, E = this._cycle, y = this._duration, v = this._rawPrevTime;
            if (t >= f ? (this._totalTime = f,
            this._cycle = this._repeat,
            this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0,
            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = y,
            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
            this._reversed || (r = !0,
            n = "onComplete"),
            0 === y && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
            (0 === t || 0 > v || v === o) && v !== t && (i = !0,
            v > o && (n = "onReverseComplete")),
            this._rawPrevTime = d = !e || t || v === t ? t : o)) : 1e-7 > t ? (this._totalTime = this._time = this._cycle = 0,
            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
            (0 !== g || 0 === y && v > 0 && v !== o) && (n = "onReverseComplete",
            r = this._reversed),
            0 > t ? (this._active = !1,
            0 === y && (this._initted || !this.vars.lazy || i) && (v >= 0 && (i = !0),
            this._rawPrevTime = d = !e || t || v === t ? t : o)) : this._initted || (i = !0)) : (this._totalTime = this._time = t,
            0 !== this._repeat && (l = y + this._repeatDelay,
            this._cycle = this._totalTime / l >> 0,
            0 !== this._cycle && this._cycle === this._totalTime / l && this._cycle--,
            this._time = this._totalTime - this._cycle * l,
            this._yoyo && 0 !== (1 & this._cycle) && (this._time = y - this._time),
            this._time > y ? this._time = y : 0 > this._time && (this._time = 0)),
            this._easeType ? (h = this._time / y,
            u = this._easeType,
            p = this._easePower,
            (1 === u || 3 === u && h >= .5) && (h = 1 - h),
            3 === u && (h *= 2),
            1 === p ? h *= h : 2 === p ? h *= h * h : 3 === p ? h *= h * h * h : 4 === p && (h *= h * h * h * h),
            this.ratio = 1 === u ? 1 - h : 2 === u ? h : .5 > this._time / y ? h / 2 : 1 - h / 2) : this.ratio = this._ease.getRatio(this._time / y)),
            m === this._time && !i && E === this._cycle)
                return void (g !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || c)));
            if (!this._initted) {
                if (this._init(),
                !this._initted || this._gc)
                    return;
                if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                    return this._time = m,
                    this._totalTime = g,
                    this._rawPrevTime = v,
                    this._cycle = E,
                    a.lazyTweens.push(this),
                    void (this._lazy = t);
                this._time && !r ? this.ratio = this._ease.getRatio(this._time / y) : r && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
            }
            for (this._lazy !== !1 && (this._lazy = !1),
            this._active || !this._paused && this._time !== m && t >= 0 && (this._active = !0),
            0 === g && (2 === this._initted && t > 0 && this._init(),
            this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : n || (n = "_dummyGS")),
            this.vars.onStart && (0 !== this._totalTime || 0 === y) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || c))),
            s = this._firstPT; s; )
                s.f ? s.t[s.p](s.c * this.ratio + s.s) : s.t[s.p] = s.c * this.ratio + s.s,
                s = s._next;
            this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i),
            e || (this._totalTime !== g || r) && this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || c)),
            this._cycle !== E && (e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || c)),
            n && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i),
            r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
            this._active = !1),
            !e && this.vars[n] && this.vars[n].apply(this.vars[n + "Scope"] || this, this.vars[n + "Params"] || c),
            0 === y && this._rawPrevTime === o && d !== o && (this._rawPrevTime = 0))
        }
        ,
        n.to = function(t, e, i) {
            return new n(t,e,i)
        }
        ,
        n.from = function(t, e, i) {
            return i.runBackwards = !0,
            i.immediateRender = 0 != i.immediateRender,
            new n(t,e,i)
        }
        ,
        n.fromTo = function(t, e, i, r) {
            return r.startAt = i,
            r.immediateRender = 0 != r.immediateRender && 0 != i.immediateRender,
            new n(t,e,r)
        }
        ,
        n.staggerTo = n.allTo = function(t, e, o, a, h, u, p) {
            a = a || 0;
            var d, f, m, g, E = o.delay || 0, y = [], v = function() {
                o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments),
                h.apply(p || this, u || c)
            }
            ;
            for (l(t) || ("string" == typeof t && (t = i.selector(t) || t),
            s(t) && (t = r(t))),
            d = t.length,
            m = 0; d > m; m++) {
                f = {};
                for (g in o)
                    f[g] = o[g];
                f.delay = E,
                m === d - 1 && h && (f.onComplete = v),
                y[m] = new n(t[m],e,f),
                E += a
            }
            return y
        }
        ,
        n.staggerFrom = n.allFrom = function(t, e, i, r, o, a, s) {
            return i.runBackwards = !0,
            i.immediateRender = 0 != i.immediateRender,
            n.staggerTo(t, e, i, r, o, a, s)
        }
        ,
        n.staggerFromTo = n.allFromTo = function(t, e, i, r, o, a, s, l) {
            return r.startAt = i,
            r.immediateRender = 0 != r.immediateRender && 0 != i.immediateRender,
            n.staggerTo(t, e, r, o, a, s, l)
        }
        ,
        n.delayedCall = function(t, e, i, r, o) {
            return new n(e,0,{
                delay: t,
                onComplete: e,
                onCompleteParams: i,
                onCompleteScope: r,
                onReverseComplete: e,
                onReverseCompleteParams: i,
                onReverseCompleteScope: r,
                immediateRender: !1,
                useFrames: o,
                overwrite: 0
            })
        }
        ,
        n.set = function(t, e) {
            return new n(t,0,e)
        }
        ,
        n.isTweening = function(t) {
            return i.getTweensOf(t, !0).length > 0
        }
        ;
        var u = function(t, e) {
            for (var r = [], n = 0, o = t._first; o; )
                o instanceof i ? r[n++] = o : (e && (r[n++] = o),
                r = r.concat(u(o, e)),
                n = r.length),
                o = o._next;
            return r
        }
          , p = n.getAllTweens = function(e) {
            return u(t._rootTimeline, e).concat(u(t._rootFramesTimeline, e))
        }
        ;
        n.killAll = function(t, i, r, n) {
            null  == i && (i = !0),
            null  == r && (r = !0);
            var o, a, s, l = p(0 != n), h = l.length, c = i && r && n;
            for (s = 0; h > s; s++)
                a = l[s],
                (c || a instanceof e || (o = a.target === a.vars.onComplete) && r || i && !o) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1))
        }
        ,
        n.killChildTweensOf = function(t, e) {
            if (null  != t) {
                var o, h, c, u, p, d = a.tweenLookup;
                if ("string" == typeof t && (t = i.selector(t) || t),
                s(t) && (t = r(t)),
                l(t))
                    for (u = t.length; --u > -1; )
                        n.killChildTweensOf(t[u], e);
                else {
                    o = [];
                    for (c in d)
                        for (h = d[c].target.parentNode; h; )
                            h === t && (o = o.concat(d[c].tweens)),
                            h = h.parentNode;
                    for (p = o.length,
                    u = 0; p > u; u++)
                        e && o[u].totalTime(o[u].totalDuration()),
                        o[u]._enabled(!1, !1)
                }
            }
        }
        ;
        var d = function(t, i, r, n) {
            i = i !== !1,
            r = r !== !1,
            n = n !== !1;
            for (var o, a, s = p(n), l = i && r && n, h = s.length; --h > -1; )
                a = s[h],
                (l || a instanceof e || (o = a.target === a.vars.onComplete) && r || i && !o) && a.paused(t)
        }
        ;
        return n.pauseAll = function(t, e, i) {
            d(!0, t, e, i)
        }
        ,
        n.resumeAll = function(t, e, i) {
            d(!1, t, e, i)
        }
        ,
        n.globalTimeScale = function(e) {
            var r = t._rootTimeline
              , n = i.ticker.time;
            return arguments.length ? (e = e || o,
            r._startTime = n - (n - r._startTime) * r._timeScale / e,
            r = t._rootFramesTimeline,
            n = i.ticker.frame,
            r._startTime = n - (n - r._startTime) * r._timeScale / e,
            r._timeScale = t._rootTimeline._timeScale = e,
            e) : r._timeScale
        }
        ,
        h.progress = function(t) {
            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
        }
        ,
        h.totalProgress = function(t) {
            return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration()
        }
        ,
        h.time = function(t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(),
            t > this._duration && (t = this._duration),
            this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
            this.totalTime(t, e)) : this._time
        }
        ,
        h.duration = function(e) {
            return arguments.length ? t.prototype.duration.call(this, e) : this._duration
        }
        ,
        h.totalDuration = function(t) {
            return arguments.length ? -1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
            this._dirty = !1),
            this._totalDuration)
        }
        ,
        h.repeat = function(t) {
            return arguments.length ? (this._repeat = t,
            this._uncache(!0)) : this._repeat
        }
        ,
        h.repeatDelay = function(t) {
            return arguments.length ? (this._repeatDelay = t,
            this._uncache(!0)) : this._repeatDelay
        }
        ,
        h.yoyo = function(t) {
            return arguments.length ? (this._yoyo = t,
            this) : this._yoyo
        }
        ,
        n
    }
    , !0),
    _gsScope._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, i) {
        var r = function(t) {
            e.call(this, t),
            this._labels = {},
            this.autoRemoveChildren = this.vars.autoRemoveChildren === !0,
            this.smoothChildTiming = this.vars.smoothChildTiming === !0,
            this._sortChildren = !0,
            this._onUpdate = this.vars.onUpdate;
            var i, r, n = this.vars;
            for (r in n)
                i = n[r],
                s(i) && -1 !== i.join("").indexOf("{self}") && (n[r] = this._swapSelfInParams(i));
            s(n.tweens) && this.add(n.tweens, 0, n.align, n.stagger)
        }
          , n = 1e-10
          , o = i._internals
          , a = o.isSelector
          , s = o.isArray
          , l = o.lazyTweens
          , h = o.lazyRender
          , c = []
          , u = _gsScope._gsDefine.globals
          , p = function(t) {
            var e, i = {};
            for (e in t)
                i[e] = t[e];
            return i
        }
          , d = function(t, e, i, r) {
            t._timeline.pause(t._startTime),
            e && e.apply(r || t._timeline, i || c)
        }
          , f = function(t) {
            var e, i = [], r = t.length;
            for (e = 0; e !== r; i.push(t[e++]))
                ;
            return i
        }
          , m = r.prototype = new e;
        return r.version = "1.13.1",
        m.constructor = r,
        m.kill()._gc = !1,
        m.to = function(t, e, r, n) {
            var o = r.repeat && u.TweenMax || i;
            return e ? this.add(new o(t,e,r), n) : this.set(t, r, n)
        }
        ,
        m.from = function(t, e, r, n) {
            return this.add((r.repeat && u.TweenMax || i).from(t, e, r), n)
        }
        ,
        m.fromTo = function(t, e, r, n, o) {
            var a = n.repeat && u.TweenMax || i;
            return e ? this.add(a.fromTo(t, e, r, n), o) : this.set(t, n, o)
        }
        ,
        m.staggerTo = function(t, e, n, o, s, l, h, c) {
            var u, d = new r({
                onComplete: l,
                onCompleteParams: h,
                onCompleteScope: c,
                smoothChildTiming: this.smoothChildTiming
            });
            for ("string" == typeof t && (t = i.selector(t) || t),
            a(t) && (t = f(t)),
            o = o || 0,
            u = 0; t.length > u; u++)
                n.startAt && (n.startAt = p(n.startAt)),
                d.to(t[u], e, p(n), u * o);
            return this.add(d, s)
        }
        ,
        m.staggerFrom = function(t, e, i, r, n, o, a, s) {
            return i.immediateRender = 0 != i.immediateRender,
            i.runBackwards = !0,
            this.staggerTo(t, e, i, r, n, o, a, s)
        }
        ,
        m.staggerFromTo = function(t, e, i, r, n, o, a, s, l) {
            return r.startAt = i,
            r.immediateRender = 0 != r.immediateRender && 0 != i.immediateRender,
            this.staggerTo(t, e, r, n, o, a, s, l)
        }
        ,
        m.call = function(t, e, r, n) {
            return this.add(i.delayedCall(0, t, e, r), n)
        }
        ,
        m.set = function(t, e, r) {
            return r = this._parseTimeOrLabel(r, 0, !0),
            null  == e.immediateRender && (e.immediateRender = r === this._time && !this._paused),
            this.add(new i(t,0,e), r)
        }
        ,
        r.exportRoot = function(t, e) {
            t = t || {},
            null  == t.smoothChildTiming && (t.smoothChildTiming = !0);
            var n, o, a = new r(t), s = a._timeline;
            for (null  == e && (e = !0),
            s._remove(a, !0),
            a._startTime = 0,
            a._rawPrevTime = a._time = a._totalTime = s._time,
            n = s._first; n; )
                o = n._next,
                e && n instanceof i && n.target === n.vars.onComplete || a.add(n, n._startTime - n._delay),
                n = o;
            return s.add(a, 0),
            a
        }
        ,
        m.add = function(n, o, a, l) {
            var h, c, u, p, d, f;
            if ("number" != typeof o && (o = this._parseTimeOrLabel(o, 0, !0, n)),
            !(n instanceof t)) {
                if (n instanceof Array || n && n.push && s(n)) {
                    for (a = a || "normal",
                    l = l || 0,
                    h = o,
                    c = n.length,
                    u = 0; c > u; u++)
                        s(p = n[u]) && (p = new r({
                            tweens: p
                        })),
                        this.add(p, h),
                        "string" != typeof p && "function" != typeof p && ("sequence" === a ? h = p._startTime + p.totalDuration() / p._timeScale : "start" === a && (p._startTime -= p.delay())),
                        h += l;
                    return this._uncache(!0)
                }
                if ("string" == typeof n)
                    return this.addLabel(n, o);
                if ("function" != typeof n)
                    throw "Cannot add " + n + " into the timeline; it is not a tween, timeline, function, or string.";
                n = i.delayedCall(0, n)
            }
            if (e.prototype.add.call(this, n, o),
            (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                for (d = this,
                f = d.rawTime() > n._startTime; d._timeline; )
                    f && d._timeline.smoothChildTiming ? d.totalTime(d._totalTime, !0) : d._gc && d._enabled(!0, !1),
                    d = d._timeline;
            return this
        }
        ,
        m.remove = function(e) {
            if (e instanceof t)
                return this._remove(e, !1);
            if (e instanceof Array || e && e.push && s(e)) {
                for (var i = e.length; --i > -1; )
                    this.remove(e[i]);
                return this
            }
            return "string" == typeof e ? this.removeLabel(e) : this.kill(null , e)
        }
        ,
        m._remove = function(t, i) {
            e.prototype._remove.call(this, t, i);
            var r = this._last;
            return r ? this._time > r._startTime + r._totalDuration / r._timeScale && (this._time = this.duration(),
            this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
            this
        }
        ,
        m.append = function(t, e) {
            return this.add(t, this._parseTimeOrLabel(null , e, !0, t))
        }
        ,
        m.insert = m.insertMultiple = function(t, e, i, r) {
            return this.add(t, e || 0, i, r)
        }
        ,
        m.appendMultiple = function(t, e, i, r) {
            return this.add(t, this._parseTimeOrLabel(null , e, !0, t), i, r)
        }
        ,
        m.addLabel = function(t, e) {
            return this._labels[t] = this._parseTimeOrLabel(e),
            this
        }
        ,
        m.addPause = function(t, e, i, r) {
            return this.call(d, ["{self}", e, i, r], this, t)
        }
        ,
        m.removeLabel = function(t) {
            return delete this._labels[t],
            this
        }
        ,
        m.getLabelTime = function(t) {
            return null  != this._labels[t] ? this._labels[t] : -1
        }
        ,
        m._parseTimeOrLabel = function(e, i, r, n) {
            var o;
            if (n instanceof t && n.timeline === this)
                this.remove(n);
            else if (n && (n instanceof Array || n.push && s(n)))
                for (o = n.length; --o > -1; )
                    n[o] instanceof t && n[o].timeline === this && this.remove(n[o]);
            if ("string" == typeof i)
                return this._parseTimeOrLabel(i, r && "number" == typeof e && null  == this._labels[i] ? e - this.duration() : 0, r);
            if (i = i || 0,
            "string" != typeof e || !isNaN(e) && null  == this._labels[e])
                null  == e && (e = this.duration());
            else {
                if (o = e.indexOf("="),
                -1 === o)
                    return null  == this._labels[e] ? r ? this._labels[e] = this.duration() + i : i : this._labels[e] + i;
                i = parseInt(e.charAt(o - 1) + "1", 10) * Number(e.substr(o + 1)),
                e = o > 1 ? this._parseTimeOrLabel(e.substr(0, o - 1), 0, r) : this.duration()
            }
            return Number(e) + i
        }
        ,
        m.seek = function(t, e) {
            return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1)
        }
        ,
        m.stop = function() {
            return this.paused(!0)
        }
        ,
        m.gotoAndPlay = function(t, e) {
            return this.play(t, e)
        }
        ,
        m.gotoAndStop = function(t, e) {
            return this.pause(t, e)
        }
        ,
        m.render = function(t, e, i) {
            this._gc && this._enabled(!0, !1);
            var r, o, a, s, u, p = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, f = this._startTime, m = this._timeScale, g = this._paused;
            if (t >= p ? (this._totalTime = this._time = p,
            this._reversed || this._hasPausedChild() || (o = !0,
            s = "onComplete",
            0 === this._duration && (0 === t || 0 > this._rawPrevTime || this._rawPrevTime === n) && this._rawPrevTime !== t && this._first && (u = !0,
            this._rawPrevTime > n && (s = "onReverseComplete"))),
            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : n,
            t = p + 1e-4) : 1e-7 > t ? (this._totalTime = this._time = 0,
            (0 !== d || 0 === this._duration && this._rawPrevTime !== n && (this._rawPrevTime > 0 || 0 > t && this._rawPrevTime >= 0)) && (s = "onReverseComplete",
            o = this._reversed),
            0 > t ? (this._active = !1,
            this._rawPrevTime >= 0 && this._first && (u = !0),
            this._rawPrevTime = t) : (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : n,
            t = 0,
            this._initted || (u = !0))) : this._totalTime = this._time = this._rawPrevTime = t,
            this._time !== d && this._first || i || u) {
                if (this._initted || (this._initted = !0),
                this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0),
                0 === d && this.vars.onStart && 0 !== this._time && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || c)),
                this._time >= d)
                    for (r = this._first; r && (a = r._next,
                    !this._paused || g); )
                        (r._active || r._startTime <= this._time && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                        r = a;
                else
                    for (r = this._last; r && (a = r._prev,
                    !this._paused || g); )
                        (r._active || d >= r._startTime && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                        r = a;
                this._onUpdate && (e || (l.length && h(),
                this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || c))),
                s && (this._gc || (f === this._startTime || m !== this._timeScale) && (0 === this._time || p >= this.totalDuration()) && (o && (l.length && h(),
                this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                this._active = !1),
                !e && this.vars[s] && this.vars[s].apply(this.vars[s + "Scope"] || this, this.vars[s + "Params"] || c)))
            }
        }
        ,
        m._hasPausedChild = function() {
            for (var t = this._first; t; ) {
                if (t._paused || t instanceof r && t._hasPausedChild())
                    return !0;
                t = t._next
            }
            return !1
        }
        ,
        m.getChildren = function(t, e, r, n) {
            n = n || -9999999999;
            for (var o = [], a = this._first, s = 0; a; )
                n > a._startTime || (a instanceof i ? e !== !1 && (o[s++] = a) : (r !== !1 && (o[s++] = a),
                t !== !1 && (o = o.concat(a.getChildren(!0, e, r)),
                s = o.length))),
                a = a._next;
            return o
        }
        ,
        m.getTweensOf = function(t, e) {
            var r, n, o = this._gc, a = [], s = 0;
            for (o && this._enabled(!0, !0),
            r = i.getTweensOf(t),
            n = r.length; --n > -1; )
                (r[n].timeline === this || e && this._contains(r[n])) && (a[s++] = r[n]);
            return o && this._enabled(!1, !0),
            a
        }
        ,
        m._contains = function(t) {
            for (var e = t.timeline; e; ) {
                if (e === this)
                    return !0;
                e = e.timeline
            }
            return !1
        }
        ,
        m.shiftChildren = function(t, e, i) {
            i = i || 0;
            for (var r, n = this._first, o = this._labels; n; )
                n._startTime >= i && (n._startTime += t),
                n = n._next;
            if (e)
                for (r in o)
                    o[r] >= i && (o[r] += t);
            return this._uncache(!0)
        }
        ,
        m._kill = function(t, e) {
            if (!t && !e)
                return this._enabled(!1, !1);
            for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), r = i.length, n = !1; --r > -1; )
                i[r]._kill(t, e) && (n = !0);
            return n
        }
        ,
        m.clear = function(t) {
            var e = this.getChildren(!1, !0, !0)
              , i = e.length;
            for (this._time = this._totalTime = 0; --i > -1; )
                e[i]._enabled(!1, !1);
            return t !== !1 && (this._labels = {}),
            this._uncache(!0)
        }
        ,
        m.invalidate = function() {
            for (var t = this._first; t; )
                t.invalidate(),
                t = t._next;
            return this
        }
        ,
        m._enabled = function(t, i) {
            if (t === this._gc)
                for (var r = this._first; r; )
                    r._enabled(t, !0),
                    r = r._next;
            return e.prototype._enabled.call(this, t, i)
        }
        ,
        m.duration = function(t) {
            return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t),
            this) : (this._dirty && this.totalDuration(),
            this._duration)
        }
        ,
        m.totalDuration = function(t) {
            if (!arguments.length) {
                if (this._dirty) {
                    for (var e, i, r = 0, n = this._last, o = 999999999999; n; )
                        e = n._prev,
                        n._dirty && n.totalDuration(),
                        n._startTime > o && this._sortChildren && !n._paused ? this.add(n, n._startTime - n._delay) : o = n._startTime,
                        0 > n._startTime && !n._paused && (r -= n._startTime,
                        this._timeline.smoothChildTiming && (this._startTime += n._startTime / this._timeScale),
                        this.shiftChildren(-n._startTime, !1, -9999999999),
                        o = 0),
                        i = n._startTime + n._totalDuration / n._timeScale,
                        i > r && (r = i),
                        n = e;
                    this._duration = this._totalDuration = r,
                    this._dirty = !1
                }
                return this._totalDuration
            }
            return 0 !== this.totalDuration() && 0 !== t && this.timeScale(this._totalDuration / t),
            this
        }
        ,
        m.usesFrames = function() {
            for (var e = this._timeline; e._timeline; )
                e = e._timeline;
            return e === t._rootFramesTimeline
        }
        ,
        m.rawTime = function() {
            return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
        }
        ,
        r
    }
    , !0),
    _gsScope._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(t, e, i) {
        var r = function(e) {
            t.call(this, e),
            this._repeat = this.vars.repeat || 0,
            this._repeatDelay = this.vars.repeatDelay || 0,
            this._cycle = 0,
            this._yoyo = this.vars.yoyo === !0,
            this._dirty = !0
        }
          , n = 1e-10
          , o = []
          , a = e._internals
          , s = a.lazyTweens
          , l = a.lazyRender
          , h = new i(null ,null ,1,0)
          , c = r.prototype = new t;
        return c.constructor = r,
        c.kill()._gc = !1,
        r.version = "1.13.1",
        c.invalidate = function() {
            return this._yoyo = this.vars.yoyo === !0,
            this._repeat = this.vars.repeat || 0,
            this._repeatDelay = this.vars.repeatDelay || 0,
            this._uncache(!0),
            t.prototype.invalidate.call(this)
        }
        ,
        c.addCallback = function(t, i, r, n) {
            return this.add(e.delayedCall(0, t, r, n), i)
        }
        ,
        c.removeCallback = function(t, e) {
            if (t)
                if (null  == e)
                    this._kill(null , t);
                else
                    for (var i = this.getTweensOf(t, !1), r = i.length, n = this._parseTimeOrLabel(e); --r > -1; )
                        i[r]._startTime === n && i[r]._enabled(!1, !1);
            return this
        }
        ,
        c.tweenTo = function(t, i) {
            i = i || {};
            var r, n, a, s = {
                ease: h,
                overwrite: i.delay ? 2 : 1,
                useFrames: this.usesFrames(),
                immediateRender: !1
            };
            for (n in i)
                s[n] = i[n];
            return s.time = this._parseTimeOrLabel(t),
            r = Math.abs(Number(s.time) - this._time) / this._timeScale || .001,
            a = new e(this,r,s),
            s.onStart = function() {
                a.target.paused(!0),
                a.vars.time !== a.target.time() && r === a.duration() && a.duration(Math.abs(a.vars.time - a.target.time()) / a.target._timeScale),
                i.onStart && i.onStart.apply(i.onStartScope || a, i.onStartParams || o)
            }
            ,
            a
        }
        ,
        c.tweenFromTo = function(t, e, i) {
            i = i || {},
            t = this._parseTimeOrLabel(t),
            i.startAt = {
                onComplete: this.seek,
                onCompleteParams: [t],
                onCompleteScope: this
            },
            i.immediateRender = i.immediateRender !== !1;
            var r = this.tweenTo(e, i);
            return r.duration(Math.abs(r.vars.time - t) / this._timeScale || .001)
        }
        ,
        c.render = function(t, e, i) {
            this._gc && this._enabled(!0, !1);
            var r, a, h, c, u, p, d = this._dirty ? this.totalDuration() : this._totalDuration, f = this._duration, m = this._time, g = this._totalTime, E = this._startTime, y = this._timeScale, v = this._rawPrevTime, _ = this._paused, x = this._cycle;
            if (t >= d ? (this._locked || (this._totalTime = d,
            this._cycle = this._repeat),
            this._reversed || this._hasPausedChild() || (a = !0,
            c = "onComplete",
            0 === this._duration && (0 === t || 0 > v || v === n) && v !== t && this._first && (u = !0,
            v > n && (c = "onReverseComplete"))),
            this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : n,
            this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = f,
            t = f + 1e-4)) : 1e-7 > t ? (this._locked || (this._totalTime = this._cycle = 0),
            this._time = 0,
            (0 !== m || 0 === f && v !== n && (v > 0 || 0 > t && v >= 0) && !this._locked) && (c = "onReverseComplete",
            a = this._reversed),
            0 > t ? (this._active = !1,
            v >= 0 && this._first && (u = !0),
            this._rawPrevTime = t) : (this._rawPrevTime = f || !e || t || this._rawPrevTime === t ? t : n,
            t = 0,
            this._initted || (u = !0))) : (0 === f && 0 > v && (u = !0),
            this._time = this._rawPrevTime = t,
            this._locked || (this._totalTime = t,
            0 !== this._repeat && (p = f + this._repeatDelay,
            this._cycle = this._totalTime / p >> 0,
            0 !== this._cycle && this._cycle === this._totalTime / p && this._cycle--,
            this._time = this._totalTime - this._cycle * p,
            this._yoyo && 0 !== (1 & this._cycle) && (this._time = f - this._time),
            this._time > f ? (this._time = f,
            t = f + 1e-4) : 0 > this._time ? this._time = t = 0 : t = this._time))),
            this._cycle !== x && !this._locked) {
                var T = this._yoyo && 0 !== (1 & x)
                  , w = T === (this._yoyo && 0 !== (1 & this._cycle))
                  , b = this._totalTime
                  , R = this._cycle
                  , H = this._rawPrevTime
                  , S = this._time;
                if (this._totalTime = x * f,
                x > this._cycle ? T = !T : this._totalTime += f,
                this._time = m,
                this._rawPrevTime = 0 === f ? v - 1e-4 : v,
                this._cycle = x,
                this._locked = !0,
                m = T ? 0 : f,
                this.render(m, e, 0 === f),
                e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || o),
                w && (m = T ? f + 1e-4 : -1e-4,
                this.render(m, !0, !1)),
                this._locked = !1,
                this._paused && !_)
                    return;
                this._time = S,
                this._totalTime = b,
                this._cycle = R,
                this._rawPrevTime = H
            }
            if (!(this._time !== m && this._first || i || u))
                return void (g !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || o)));
            if (this._initted || (this._initted = !0),
            this._active || !this._paused && this._totalTime !== g && t > 0 && (this._active = !0),
            0 === g && this.vars.onStart && 0 !== this._totalTime && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || o)),
            this._time >= m)
                for (r = this._first; r && (h = r._next,
                !this._paused || _); )
                    (r._active || r._startTime <= this._time && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                    r = h;
            else
                for (r = this._last; r && (h = r._prev,
                !this._paused || _); )
                    (r._active || m >= r._startTime && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                    r = h;
            this._onUpdate && (e || (s.length && l(),
            this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || o))),
            c && (this._locked || this._gc || (E === this._startTime || y !== this._timeScale) && (0 === this._time || d >= this.totalDuration()) && (a && (s.length && l(),
            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
            this._active = !1),
            !e && this.vars[c] && this.vars[c].apply(this.vars[c + "Scope"] || this, this.vars[c + "Params"] || o)))
        }
        ,
        c.getActive = function(t, e, i) {
            null  == t && (t = !0),
            null  == e && (e = !0),
            null  == i && (i = !1);
            var r, n, o = [], a = this.getChildren(t, e, i), s = 0, l = a.length;
            for (r = 0; l > r; r++)
                n = a[r],
                n.isActive() && (o[s++] = n);
            return o
        }
        ,
        c.getLabelAfter = function(t) {
            t || 0 !== t && (t = this._time);
            var e, i = this.getLabelsArray(), r = i.length;
            for (e = 0; r > e; e++)
                if (i[e].time > t)
                    return i[e].name;
            return null 
        }
        ,
        c.getLabelBefore = function(t) {
            null  == t && (t = this._time);
            for (var e = this.getLabelsArray(), i = e.length; --i > -1; )
                if (t > e[i].time)
                    return e[i].name;
            return null 
        }
        ,
        c.getLabelsArray = function() {
            var t, e = [], i = 0;
            for (t in this._labels)
                e[i++] = {
                    time: this._labels[t],
                    name: t
                };
            return e.sort(function(t, e) {
                return t.time - e.time
            }
            ),
            e
        }
        ,
        c.progress = function(t) {
            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
        }
        ,
        c.totalProgress = function(t) {
            return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration()
        }
        ,
        c.totalDuration = function(e) {
            return arguments.length ? -1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (t.prototype.totalDuration.call(this),
            this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
            this._totalDuration)
        }
        ,
        c.time = function(t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(),
            t > this._duration && (t = this._duration),
            this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
            this.totalTime(t, e)) : this._time
        }
        ,
        c.repeat = function(t) {
            return arguments.length ? (this._repeat = t,
            this._uncache(!0)) : this._repeat
        }
        ,
        c.repeatDelay = function(t) {
            return arguments.length ? (this._repeatDelay = t,
            this._uncache(!0)) : this._repeatDelay
        }
        ,
        c.yoyo = function(t) {
            return arguments.length ? (this._yoyo = t,
            this) : this._yoyo
        }
        ,
        c.currentLabel = function(t) {
            return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
        }
        ,
        r
    }
    , !0),
    function() {
        var t = 180 / Math.PI
          , e = []
          , i = []
          , r = []
          , n = {}
          , o = function(t, e, i, r) {
            this.a = t,
            this.b = e,
            this.c = i,
            this.d = r,
            this.da = r - t,
            this.ca = i - t,
            this.ba = e - t
        }
          , a = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"
          , s = function(t, e, i, r) {
            var n = {
                a: t
            }
              , o = {}
              , a = {}
              , s = {
                c: r
            }
              , l = (t + e) / 2
              , h = (e + i) / 2
              , c = (i + r) / 2
              , u = (l + h) / 2
              , p = (h + c) / 2
              , d = (p - u) / 8;
            return n.b = l + (t - l) / 4,
            o.b = u + d,
            n.c = o.a = (n.b + o.b) / 2,
            o.c = a.a = (u + p) / 2,
            a.b = p - d,
            s.b = c + (r - c) / 4,
            a.c = s.a = (a.b + s.b) / 2,
            [n, o, a, s]
        }
          , l = function(t, n, o, a, l) {
            var h, c, u, p, d, f, m, g, E, y, v, _, x, T = t.length - 1, w = 0, b = t[0].a;
            for (h = 0; T > h; h++)
                d = t[w],
                c = d.a,
                u = d.d,
                p = t[w + 1].d,
                l ? (v = e[h],
                _ = i[h],
                x = .25 * (_ + v) * n / (a ? .5 : r[h] || .5),
                f = u - (u - c) * (a ? .5 * n : 0 !== v ? x / v : 0),
                m = u + (p - u) * (a ? .5 * n : 0 !== _ ? x / _ : 0),
                g = u - (f + ((m - f) * (3 * v / (v + _) + .5) / 4 || 0))) : (f = u - .5 * (u - c) * n,
                m = u + .5 * (p - u) * n,
                g = u - (f + m) / 2),
                f += g,
                m += g,
                d.c = E = f,
                d.b = 0 !== h ? b : b = d.a + .6 * (d.c - d.a),
                d.da = u - c,
                d.ca = E - c,
                d.ba = b - c,
                o ? (y = s(c, b, E, u),
                t.splice(w, 1, y[0], y[1], y[2], y[3]),
                w += 4) : w++,
                b = m;
            d = t[w],
            d.b = b,
            d.c = b + .4 * (d.d - b),
            d.da = d.d - d.a,
            d.ca = d.c - d.a,
            d.ba = b - d.a,
            o && (y = s(d.a, b, d.c, d.d),
            t.splice(w, 1, y[0], y[1], y[2], y[3]))
        }
          , h = function(t, r, n, a) {
            var s, l, h, c, u, p, d = [];
            if (a)
                for (t = [a].concat(t),
                l = t.length; --l > -1; )
                    "string" == typeof (p = t[l][r]) && "=" === p.charAt(1) && (t[l][r] = a[r] + Number(p.charAt(0) + p.substr(2)));
            if (s = t.length - 2,
            0 > s)
                return d[0] = new o(t[0][r],0,0,t[-1 > s ? 0 : 1][r]),
                d;
            for (l = 0; s > l; l++)
                h = t[l][r],
                c = t[l + 1][r],
                d[l] = new o(h,0,0,c),
                n && (u = t[l + 2][r],
                e[l] = (e[l] || 0) + (c - h) * (c - h),
                i[l] = (i[l] || 0) + (u - c) * (u - c));
            return d[l] = new o(t[l][r],0,0,t[l + 1][r]),
            d
        }
          , c = function(t, o, s, c, u, p) {
            var d, f, m, g, E, y, v, _, x = {}, T = [], w = p || t[0];
            u = "string" == typeof u ? "," + u + "," : a,
            null  == o && (o = 1);
            for (f in t[0])
                T.push(f);
            if (t.length > 1) {
                for (_ = t[t.length - 1],
                v = !0,
                d = T.length; --d > -1; )
                    if (f = T[d],
                    Math.abs(w[f] - _[f]) > .05) {
                        v = !1;
                        break
                    }
                v && (t = t.concat(),
                p && t.unshift(p),
                t.push(t[1]),
                p = t[t.length - 3])
            }
            for (e.length = i.length = r.length = 0,
            d = T.length; --d > -1; )
                f = T[d],
                n[f] = -1 !== u.indexOf("," + f + ","),
                x[f] = h(t, f, n[f], p);
            for (d = e.length; --d > -1; )
                e[d] = Math.sqrt(e[d]),
                i[d] = Math.sqrt(i[d]);
            if (!c) {
                for (d = T.length; --d > -1; )
                    if (n[f])
                        for (m = x[T[d]],
                        y = m.length - 1,
                        g = 0; y > g; g++)
                            E = m[g + 1].da / i[g] + m[g].da / e[g],
                            r[g] = (r[g] || 0) + E * E;
                for (d = r.length; --d > -1; )
                    r[d] = Math.sqrt(r[d])
            }
            for (d = T.length,
            g = s ? 4 : 1; --d > -1; )
                f = T[d],
                m = x[f],
                l(m, o, s, c, n[f]),
                v && (m.splice(0, g),
                m.splice(m.length - g, g));
            return x
        }
          , u = function(t, e, i) {
            e = e || "soft";
            var r, n, a, s, l, h, c, u, p, d, f, m = {}, g = "cubic" === e ? 3 : 2, E = "soft" === e, y = [];
            if (E && i && (t = [i].concat(t)),
            null  == t || g + 1 > t.length)
                throw "invalid Bezier data";
            for (p in t[0])
                y.push(p);
            for (h = y.length; --h > -1; ) {
                for (p = y[h],
                m[p] = l = [],
                d = 0,
                u = t.length,
                c = 0; u > c; c++)
                    r = null  == i ? t[c][p] : "string" == typeof (f = t[c][p]) && "=" === f.charAt(1) ? i[p] + Number(f.charAt(0) + f.substr(2)) : Number(f),
                    E && c > 1 && u - 1 > c && (l[d++] = (r + l[d - 2]) / 2),
                    l[d++] = r;
                for (u = d - g + 1,
                d = 0,
                c = 0; u > c; c += g)
                    r = l[c],
                    n = l[c + 1],
                    a = l[c + 2],
                    s = 2 === g ? 0 : l[c + 3],
                    l[d++] = f = 3 === g ? new o(r,n,a,s) : new o(r,(2 * n + r) / 3,(2 * n + a) / 3,a);
                l.length = d
            }
            return m
        }
          , p = function(t, e, i) {
            for (var r, n, o, a, s, l, h, c, u, p, d, f = 1 / i, m = t.length; --m > -1; )
                for (p = t[m],
                o = p.a,
                a = p.d - o,
                s = p.c - o,
                l = p.b - o,
                r = n = 0,
                c = 1; i >= c; c++)
                    h = f * c,
                    u = 1 - h,
                    r = n - (n = (h * h * a + 3 * u * (h * s + u * l)) * h),
                    d = m * i + c - 1,
                    e[d] = (e[d] || 0) + r * r
        }
          , d = function(t, e) {
            e = e >> 0 || 6;
            var i, r, n, o, a = [], s = [], l = 0, h = 0, c = e - 1, u = [], d = [];
            for (i in t)
                p(t[i], a, e);
            for (n = a.length,
            r = 0; n > r; r++)
                l += Math.sqrt(a[r]),
                o = r % e,
                d[o] = l,
                o === c && (h += l,
                o = r / e >> 0,
                u[o] = d,
                s[o] = h,
                l = 0,
                d = []);
            return {
                length: h,
                lengths: s,
                segments: u
            }
        }
          , f = _gsScope._gsDefine.plugin({
            propName: "bezier",
            priority: -1,
            version: "1.3.3",
            API: 2,
            global: !0,
            init: function(t, e, i) {
                this._target = t,
                e instanceof Array && (e = {
                    values: e
                }),
                this._func = {},
                this._round = {},
                this._props = [],
                this._timeRes = null  == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                var r, n, o, a, s, l = e.values || [], h = {}, p = l[0], f = e.autoRotate || i.vars.orientToBezier;
                this._autoRotate = f ? f instanceof Array ? f : [["x", "y", "rotation", f === !0 ? 0 : Number(f) || 0]] : null ;
                for (r in p)
                    this._props.push(r);
                for (o = this._props.length; --o > -1; )
                    r = this._props[o],
                    this._overwriteProps.push(r),
                    n = this._func[r] = "function" == typeof t[r],
                    h[r] = n ? t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]() : parseFloat(t[r]),
                    s || h[r] !== l[0][r] && (s = h);
                if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? c(l, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : u(l, e.type, h),
                this._segCount = this._beziers[r].length,
                this._timeRes) {
                    var m = d(this._beziers, this._timeRes);
                    this._length = m.length,
                    this._lengths = m.lengths,
                    this._segments = m.segments,
                    this._l1 = this._li = this._s1 = this._si = 0,
                    this._l2 = this._lengths[0],
                    this._curSeg = this._segments[0],
                    this._s2 = this._curSeg[0],
                    this._prec = 1 / this._curSeg.length
                }
                if (f = this._autoRotate)
                    for (this._initialRotations = [],
                    f[0] instanceof Array || (this._autoRotate = f = [f]),
                    o = f.length; --o > -1; ) {
                        for (a = 0; 3 > a; a++)
                            r = f[o][a],
                            this._func[r] = "function" == typeof t[r] ? t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)] : !1;
                        r = f[o][2],
                        this._initialRotations[o] = this._func[r] ? this._func[r].call(this._target) : this._target[r]
                    }
                return this._startRatio = i.vars.runBackwards ? 1 : 0,
                !0
            },
            set: function(e) {
                var i, r, n, o, a, s, l, h, c, u, p = this._segCount, d = this._func, f = this._target, m = e !== this._startRatio;
                if (this._timeRes) {
                    if (c = this._lengths,
                    u = this._curSeg,
                    e *= this._length,
                    n = this._li,
                    e > this._l2 && p - 1 > n) {
                        for (h = p - 1; h > n && e >= (this._l2 = c[++n]); )
                            ;
                        this._l1 = c[n - 1],
                        this._li = n,
                        this._curSeg = u = this._segments[n],
                        this._s2 = u[this._s1 = this._si = 0]
                    } else if (this._l1 > e && n > 0) {
                        for (; n > 0 && (this._l1 = c[--n]) >= e; )
                            ;
                        0 === n && this._l1 > e ? this._l1 = 0 : n++,
                        this._l2 = c[n],
                        this._li = n,
                        this._curSeg = u = this._segments[n],
                        this._s1 = u[(this._si = u.length - 1) - 1] || 0,
                        this._s2 = u[this._si]
                    }
                    if (i = n,
                    e -= this._l1,
                    n = this._si,
                    e > this._s2 && u.length - 1 > n) {
                        for (h = u.length - 1; h > n && e >= (this._s2 = u[++n]); )
                            ;
                        this._s1 = u[n - 1],
                        this._si = n
                    } else if (this._s1 > e && n > 0) {
                        for (; n > 0 && (this._s1 = u[--n]) >= e; )
                            ;
                        0 === n && this._s1 > e ? this._s1 = 0 : n++,
                        this._s2 = u[n],
                        this._si = n
                    }
                    s = (n + (e - this._s1) / (this._s2 - this._s1)) * this._prec
                } else
                    i = 0 > e ? 0 : e >= 1 ? p - 1 : p * e >> 0,
                    s = (e - i * (1 / p)) * p;
                for (r = 1 - s,
                n = this._props.length; --n > -1; )
                    o = this._props[n],
                    a = this._beziers[o][i],
                    l = (s * s * a.da + 3 * r * (s * a.ca + r * a.ba)) * s + a.a,
                    this._round[o] && (l = Math.round(l)),
                    d[o] ? f[o](l) : f[o] = l;
                if (this._autoRotate) {
                    var g, E, y, v, _, x, T, w = this._autoRotate;
                    for (n = w.length; --n > -1; )
                        o = w[n][2],
                        x = w[n][3] || 0,
                        T = w[n][4] === !0 ? 1 : t,
                        a = this._beziers[w[n][0]],
                        g = this._beziers[w[n][1]],
                        a && g && (a = a[i],
                        g = g[i],
                        E = a.a + (a.b - a.a) * s,
                        v = a.b + (a.c - a.b) * s,
                        E += (v - E) * s,
                        v += (a.c + (a.d - a.c) * s - v) * s,
                        y = g.a + (g.b - g.a) * s,
                        _ = g.b + (g.c - g.b) * s,
                        y += (_ - y) * s,
                        _ += (g.c + (g.d - g.c) * s - _) * s,
                        l = m ? Math.atan2(_ - y, v - E) * T + x : this._initialRotations[n],
                        d[o] ? f[o](l) : f[o] = l)
                }
            }
        })
          , m = f.prototype;
        f.bezierThrough = c,
        f.cubicToQuadratic = s,
        f._autoCSS = !0,
        f.quadraticToCubic = function(t, e, i) {
            return new o(t,(2 * e + t) / 3,(2 * e + i) / 3,i)
        }
        ,
        f._cssRegister = function() {
            var t = _gsScope._gsDefine.globals.CSSPlugin;
            if (t) {
                var e = t._internals
                  , i = e._parseToProxy
                  , r = e._setPluginRatio
                  , n = e.CSSPropTween;
                e._registerComplexSpecialProp("bezier", {
                    parser: function(t, e, o, a, s, l) {
                        e instanceof Array && (e = {
                            values: e
                        }),
                        l = new f;
                        var h, c, u, p = e.values, d = p.length - 1, m = [], g = {};
                        if (0 > d)
                            return s;
                        for (h = 0; d >= h; h++)
                            u = i(t, p[h], a, s, l, d !== h),
                            m[h] = u.end;
                        for (c in e)
                            g[c] = e[c];
                        return g.values = m,
                        s = new n(t,"bezier",0,0,u.pt,2),
                        s.data = u,
                        s.plugin = l,
                        s.setRatio = r,
                        0 === g.autoRotate && (g.autoRotate = !0),
                        !g.autoRotate || g.autoRotate instanceof Array || (h = g.autoRotate === !0 ? 0 : Number(g.autoRotate),
                        g.autoRotate = null  != u.end.left ? [["left", "top", "rotation", h, !1]] : null  != u.end.x ? [["x", "y", "rotation", h, !1]] : !1),
                        g.autoRotate && (a._transform || a._enableTransforms(!1),
                        u.autoRotate = a._target._gsTransform),
                        l._onInitTween(u.proxy, g, a._tween),
                        s
                    }
                })
            }
        }
        ,
        m._roundProps = function(t, e) {
            for (var i = this._overwriteProps, r = i.length; --r > -1; )
                (t[i[r]] || t.bezier || t.bezierThrough) && (this._round[i[r]] = e)
        }
        ,
        m._kill = function(t) {
            var e, i, r = this._props;
            for (e in this._beziers)
                if (e in t)
                    for (delete this._beziers[e],
                    delete this._func[e],
                    i = r.length; --i > -1; )
                        r[i] === e && r.splice(i, 1);
            return this._super._kill.call(this, t)
        }
    }
    (),
    _gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
        var i, r, n, o, a = function() {
            t.call(this, "css"),
            this._overwriteProps.length = 0,
            this.setRatio = a.prototype.setRatio
        }
        , s = {}, l = a.prototype = new t("css");
        l.constructor = a,
        a.version = "1.13.1",
        a.API = 2,
        a.defaultTransformPerspective = 0,
        a.defaultSkewType = "compensated",
        l = "px",
        a.suffixMap = {
            top: l,
            right: l,
            bottom: l,
            left: l,
            width: l,
            height: l,
            fontSize: l,
            padding: l,
            margin: l,
            perspective: l,
            lineHeight: ""
        };
        var h, c, u, p, d, f, m = /(?:\d|\-\d|\.\d|\-\.\d)+/g, g = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, E = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, y = /[^\d\-\.]/g, v = /(?:\d|\-|\+|=|#|\.)*/g, _ = /opacity *= *([^)]*)/i, x = /opacity:([^;]*)/i, T = /alpha\(opacity *=.+?\)/i, w = /^(rgb|hsl)/, b = /([A-Z])/g, R = /-([a-z])/gi, H = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, S = function(t, e) {
            return e.toUpperCase()
        }
        , M = /(?:Left|Right|Width)/i, C = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, A = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, P = /,(?=[^\)]*(?:\(|$))/gi, L = Math.PI / 180, D = 180 / Math.PI, k = {}, O = document, F = O.createElement("div"), N = O.createElement("img"), z = a._internals = {
            _specialProps: s
        }, V = navigator.userAgent, I = function() {
            var t, e = V.indexOf("Android"), i = O.createElement("div");
            return u = -1 !== V.indexOf("Safari") && -1 === V.indexOf("Chrome") && (-1 === e || Number(V.substr(e + 8, 1)) > 3),
            d = u && 6 > Number(V.substr(V.indexOf("Version/") + 8, 1)),
            p = -1 !== V.indexOf("Firefox"),
            /MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(V) && (f = parseFloat(RegExp.$1)),
            i.innerHTML = "<a style='top:1px;opacity:.55;'>a</a>",
            t = i.getElementsByTagName("a")[0],
            t ? /^0.55/.test(t.style.opacity) : !1
        }
        (), U = function(t) {
            return _.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
        }
        , B = function(t) {
            window.console && console.log(t)
        }
        , j = "", G = "", W = function(t, e) {
            e = e || F;
            var i, r, n = e.style;
            if (void 0 !== n[t])
                return t;
            for (t = t.charAt(0).toUpperCase() + t.substr(1),
            i = ["O", "Moz", "ms", "Ms", "Webkit"],
            r = 5; --r > -1 && void 0 === n[i[r] + t]; )
                ;
            return r >= 0 ? (G = 3 === r ? "ms" : i[r],
            j = "-" + G.toLowerCase() + "-",
            G + t) : null 
        }
        , X = O.defaultView ? O.defaultView.getComputedStyle : function() {}
        , q = a.getStyle = function(t, e, i, r, n) {
            var o;
            return I || "opacity" !== e ? (!r && t.style[e] ? o = t.style[e] : (i = i || X(t)) ? o = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(b, "-$1").toLowerCase()) : t.currentStyle && (o = t.currentStyle[e]),
            null  == n || o && "none" !== o && "auto" !== o && "auto auto" !== o ? o : n) : U(t)
        }
        , Y = z.convertToPixels = function(t, i, r, n, o) {
            if ("px" === n || !n)
                return r;
            if ("auto" === n || !r)
                return 0;
            var s, l, h, c = M.test(i), u = t, p = F.style, d = 0 > r;
            if (d && (r = -r),
            "%" === n && -1 !== i.indexOf("border"))
                s = r / 100 * (c ? t.clientWidth : t.clientHeight);
            else {
                if (p.cssText = "border:0 solid red;position:" + q(t, "position") + ";line-height:0;",
                "%" !== n && u.appendChild)
                    p[c ? "borderLeftWidth" : "borderTopWidth"] = r + n;
                else {
                    if (u = t.parentNode || O.body,
                    l = u._gsCache,
                    h = e.ticker.frame,
                    l && c && l.time === h)
                        return l.width * r / 100;
                    p[c ? "width" : "height"] = r + n
                }
                u.appendChild(F),
                s = parseFloat(F[c ? "offsetWidth" : "offsetHeight"]),
                u.removeChild(F),
                c && "%" === n && a.cacheWidths !== !1 && (l = u._gsCache = u._gsCache || {},
                l.time = h,
                l.width = 100 * (s / r)),
                0 !== s || o || (s = Y(t, i, r, n, !0))
            }
            return d ? -s : s
        }
        , $ = z.calculateOffset = function(t, e, i) {
            if ("absolute" !== q(t, "position", i))
                return 0;
            var r = "left" === e ? "Left" : "Top"
              , n = q(t, "margin" + r, i);
            return t["offset" + r] - (Y(t, e, parseFloat(n), n.replace(v, "")) || 0)
        }
        , Q = function(t, e) {
            var i, r, n = {};
            if (e = e || X(t, null ))
                if (i = e.length)
                    for (; --i > -1; )
                        n[e[i].replace(R, S)] = e.getPropertyValue(e[i]);
                else
                    for (i in e)
                        n[i] = e[i];
            else if (e = t.currentStyle || t.style)
                for (i in e)
                    "string" == typeof i && void 0 === n[i] && (n[i.replace(R, S)] = e[i]);
            return I || (n.opacity = U(t)),
            r = bt(t, e, !1),
            n.rotation = r.rotation,
            n.skewX = r.skewX,
            n.scaleX = r.scaleX,
            n.scaleY = r.scaleY,
            n.x = r.x,
            n.y = r.y,
            Tt && (n.z = r.z,
            n.rotationX = r.rotationX,
            n.rotationY = r.rotationY,
            n.scaleZ = r.scaleZ),
            n.filters && delete n.filters,
            n
        }
        , K = function(t, e, i, r, n) {
            var o, a, s, l = {}, h = t.style;
            for (a in i)
                "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (o = i[a]) || n && n[a]) && -1 === a.indexOf("Origin") && ("number" == typeof o || "string" == typeof o) && (l[a] = "auto" !== o || "left" !== a && "top" !== a ? "" !== o && "auto" !== o && "none" !== o || "string" != typeof e[a] || "" === e[a].replace(y, "") ? o : 0 : $(t, a),
                void 0 !== h[a] && (s = new ut(h,a,h[a],s)));
            if (r)
                for (a in r)
                    "className" !== a && (l[a] = r[a]);
            return {
                difs: l,
                firstMPT: s
            }
        }
        , Z = {
            width: ["Left", "Right"],
            height: ["Top", "Bottom"]
        }, J = ["marginLeft", "marginRight", "marginTop", "marginBottom"], tt = function(t, e, i) {
            var r = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
              , n = Z[e]
              , o = n.length;
            for (i = i || X(t, null ); --o > -1; )
                r -= parseFloat(q(t, "padding" + n[o], i, !0)) || 0,
                r -= parseFloat(q(t, "border" + n[o] + "Width", i, !0)) || 0;
            return r
        }
        , et = function(t, e) {
            (null  == t || "" === t || "auto" === t || "auto auto" === t) && (t = "0 0");
            var i = t.split(" ")
              , r = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : i[0]
              , n = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : i[1];
            return null  == n ? n = "0" : "center" === n && (n = "50%"),
            ("center" === r || isNaN(parseFloat(r)) && -1 === (r + "").indexOf("=")) && (r = "50%"),
            e && (e.oxp = -1 !== r.indexOf("%"),
            e.oyp = -1 !== n.indexOf("%"),
            e.oxr = "=" === r.charAt(1),
            e.oyr = "=" === n.charAt(1),
            e.ox = parseFloat(r.replace(y, "")),
            e.oy = parseFloat(n.replace(y, ""))),
            r + " " + n + (i.length > 2 ? " " + i[2] : "")
        }
        , it = function(t, e) {
            return "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e)
        }
        , rt = function(t, e) {
            return null  == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * Number(t.substr(2)) + e : parseFloat(t)
        }
        , nt = function(t, e, i, r) {
            var n, o, a, s, l = 1e-6;
            return null  == t ? s = e : "number" == typeof t ? s = t : (n = 360,
            o = t.split("_"),
            a = Number(o[0].replace(y, "")) * (-1 === t.indexOf("rad") ? 1 : D) - ("=" === t.charAt(1) ? 0 : e),
            o.length && (r && (r[i] = e + a),
            -1 !== t.indexOf("short") && (a %= n,
            a !== a % (n / 2) && (a = 0 > a ? a + n : a - n)),
            -1 !== t.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * n) % n - (0 | a / n) * n : -1 !== t.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * n) % n - (0 | a / n) * n)),
            s = e + a),
            l > s && s > -l && (s = 0),
            s
        }
        , ot = {
            aqua: [0, 255, 255],
            lime: [0, 255, 0],
            silver: [192, 192, 192],
            black: [0, 0, 0],
            maroon: [128, 0, 0],
            teal: [0, 128, 128],
            blue: [0, 0, 255],
            navy: [0, 0, 128],
            white: [255, 255, 255],
            fuchsia: [255, 0, 255],
            olive: [128, 128, 0],
            yellow: [255, 255, 0],
            orange: [255, 165, 0],
            gray: [128, 128, 128],
            purple: [128, 0, 128],
            green: [0, 128, 0],
            red: [255, 0, 0],
            pink: [255, 192, 203],
            cyan: [0, 255, 255],
            transparent: [255, 255, 255, 0]
        }, at = function(t, e, i) {
            return t = 0 > t ? t + 1 : t > 1 ? t - 1 : t,
            0 | 255 * (1 > 6 * t ? e + 6 * (i - e) * t : .5 > t ? i : 2 > 3 * t ? e + 6 * (i - e) * (2 / 3 - t) : e) + .5
        }
        , st = function(t) {
            var e, i, r, n, o, a;
            return t && "" !== t ? "number" == typeof t ? [t >> 16, 255 & t >> 8, 255 & t] : ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
            ot[t] ? ot[t] : "#" === t.charAt(0) ? (4 === t.length && (e = t.charAt(1),
            i = t.charAt(2),
            r = t.charAt(3),
            t = "#" + e + e + i + i + r + r),
            t = parseInt(t.substr(1), 16),
            [t >> 16, 255 & t >> 8, 255 & t]) : "hsl" === t.substr(0, 3) ? (t = t.match(m),
            n = Number(t[0]) % 360 / 360,
            o = Number(t[1]) / 100,
            a = Number(t[2]) / 100,
            i = .5 >= a ? a * (o + 1) : a + o - a * o,
            e = 2 * a - i,
            t.length > 3 && (t[3] = Number(t[3])),
            t[0] = at(n + 1 / 3, e, i),
            t[1] = at(n, e, i),
            t[2] = at(n - 1 / 3, e, i),
            t) : (t = t.match(m) || ot.transparent,
            t[0] = Number(t[0]),
            t[1] = Number(t[1]),
            t[2] = Number(t[2]),
            t.length > 3 && (t[3] = Number(t[3])),
            t)) : ot.black
        }
        , lt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
        for (l in ot)
            lt += "|" + l + "\\b";
        lt = RegExp(lt + ")", "gi");
        var ht = function(t, e, i, r) {
            if (null  == t)
                return function(t) {
                    return t
                }
                ;
            var n, o = e ? (t.match(lt) || [""])[0] : "", a = t.split(o).join("").match(E) || [], s = t.substr(0, t.indexOf(a[0])), l = ")" === t.charAt(t.length - 1) ? ")" : "", h = -1 !== t.indexOf(" ") ? " " : ",", c = a.length, u = c > 0 ? a[0].replace(m, "") : "";
            return c ? n = e ? function(t) {
                var e, p, d, f;
                if ("number" == typeof t)
                    t += u;
                else if (r && P.test(t)) {
                    for (f = t.replace(P, "|").split("|"),
                    d = 0; f.length > d; d++)
                        f[d] = n(f[d]);
                    return f.join(",")
                }
                if (e = (t.match(lt) || [o])[0],
                p = t.split(e).join("").match(E) || [],
                d = p.length,
                c > d--)
                    for (; c > ++d; )
                        p[d] = i ? p[0 | (d - 1) / 2] : a[d];
                return s + p.join(h) + h + e + l + (-1 !== t.indexOf("inset") ? " inset" : "")
            }
             : function(t) {
                var e, o, p;
                if ("number" == typeof t)
                    t += u;
                else if (r && P.test(t)) {
                    for (o = t.replace(P, "|").split("|"),
                    p = 0; o.length > p; p++)
                        o[p] = n(o[p]);
                    return o.join(",")
                }
                if (e = t.match(E) || [],
                p = e.length,
                c > p--)
                    for (; c > ++p; )
                        e[p] = i ? e[0 | (p - 1) / 2] : a[p];
                return s + e.join(h) + l
            }
             : function(t) {
                return t
            }
        }
          , ct = function(t) {
            return t = t.split(","),
            function(e, i, r, n, o, a, s) {
                var l, h = (i + "").split(" ");
                for (s = {},
                l = 0; 4 > l; l++)
                    s[t[l]] = h[l] = h[l] || h[(l - 1) / 2 >> 0];
                return n.parse(e, s, o, a)
            }
        }
          , ut = (z._setPluginRatio = function(t) {
            this.plugin.setRatio(t);
            for (var e, i, r, n, o = this.data, a = o.proxy, s = o.firstMPT, l = 1e-6; s; )
                e = a[s.v],
                s.r ? e = Math.round(e) : l > e && e > -l && (e = 0),
                s.t[s.p] = e,
                s = s._next;
            if (o.autoRotate && (o.autoRotate.rotation = a.rotation),
            1 === t)
                for (s = o.firstMPT; s; ) {
                    if (i = s.t,
                    i.type) {
                        if (1 === i.type) {
                            for (n = i.xs0 + i.s + i.xs1,
                            r = 1; i.l > r; r++)
                                n += i["xn" + r] + i["xs" + (r + 1)];
                            i.e = n
                        }
                    } else
                        i.e = i.s + i.xs0;
                    s = s._next
                }
        }
        ,
        function(t, e, i, r, n) {
            this.t = t,
            this.p = e,
            this.v = i,
            this.r = n,
            r && (r._prev = this,
            this._next = r)
        }
        )
          , pt = (z._parseToProxy = function(t, e, i, r, n, o) {
            var a, s, l, h, c, u = r, p = {}, d = {}, f = i._transform, m = k;
            for (i._transform = null ,
            k = e,
            r = c = i.parse(t, e, r, n),
            k = m,
            o && (i._transform = f,
            u && (u._prev = null ,
            u._prev && (u._prev._next = null ))); r && r !== u; ) {
                if (1 >= r.type && (s = r.p,
                d[s] = r.s + r.c,
                p[s] = r.s,
                o || (h = new ut(r,"s",s,h,r.r),
                r.c = 0),
                1 === r.type))
                    for (a = r.l; --a > 0; )
                        l = "xn" + a,
                        s = r.p + "_" + l,
                        d[s] = r.data[l],
                        p[s] = r[l],
                        o || (h = new ut(r,l,s,h,r.rxp[l]));
                r = r._next
            }
            return {
                proxy: p,
                end: d,
                firstMPT: h,
                pt: c
            }
        }
        ,
        z.CSSPropTween = function(t, e, r, n, a, s, l, h, c, u, p) {
            this.t = t,
            this.p = e,
            this.s = r,
            this.c = n,
            this.n = l || e,
            t instanceof pt || o.push(this.n),
            this.r = h,
            this.type = s || 0,
            c && (this.pr = c,
            i = !0),
            this.b = void 0 === u ? r : u,
            this.e = void 0 === p ? r + n : p,
            a && (this._next = a,
            a._prev = this)
        }
        )
          , dt = a.parseComplex = function(t, e, i, r, n, o, a, s, l, c) {
            i = i || o || "",
            a = new pt(t,e,0,0,a,c ? 2 : 1,null ,!1,s,i,r),
            r += "";
            var u, p, d, f, E, y, v, _, x, T, b, R, H = i.split(", ").join(",").split(" "), S = r.split(", ").join(",").split(" "), M = H.length, C = h !== !1;
            for ((-1 !== r.indexOf(",") || -1 !== i.indexOf(",")) && (H = H.join(" ").replace(P, ", ").split(" "),
            S = S.join(" ").replace(P, ", ").split(" "),
            M = H.length),
            M !== S.length && (H = (o || "").split(" "),
            M = H.length),
            a.plugin = l,
            a.setRatio = c,
            u = 0; M > u; u++)
                if (f = H[u],
                E = S[u],
                _ = parseFloat(f),
                _ || 0 === _)
                    a.appendXtra("", _, it(E, _), E.replace(g, ""), C && -1 !== E.indexOf("px"), !0);
                else if (n && ("#" === f.charAt(0) || ot[f] || w.test(f)))
                    R = "," === E.charAt(E.length - 1) ? ")," : ")",
                    f = st(f),
                    E = st(E),
                    x = f.length + E.length > 6,
                    x && !I && 0 === E[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent",
                    a.e = a.e.split(S[u]).join("transparent")) : (I || (x = !1),
                    a.appendXtra(x ? "rgba(" : "rgb(", f[0], E[0] - f[0], ",", !0, !0).appendXtra("", f[1], E[1] - f[1], ",", !0).appendXtra("", f[2], E[2] - f[2], x ? "," : R, !0),
                    x && (f = 4 > f.length ? 1 : f[3],
                    a.appendXtra("", f, (4 > E.length ? 1 : E[3]) - f, R, !1)));
                else if (y = f.match(m)) {
                    if (v = E.match(g),
                    !v || v.length !== y.length)
                        return a;
                    for (d = 0,
                    p = 0; y.length > p; p++)
                        b = y[p],
                        T = f.indexOf(b, d),
                        a.appendXtra(f.substr(d, T - d), Number(b), it(v[p], b), "", C && "px" === f.substr(T + b.length, 2), 0 === p),
                        d = T + b.length;
                    a["xs" + a.l] += f.substr(d)
                } else
                    a["xs" + a.l] += a.l ? " " + f : f;
            if (-1 !== r.indexOf("=") && a.data) {
                for (R = a.xs0 + a.data.s,
                u = 1; a.l > u; u++)
                    R += a["xs" + u] + a.data["xn" + u];
                a.e = R + a["xs" + u]
            }
            return a.l || (a.type = -1,
            a.xs0 = a.e),
            a.xfirst || a
        }
          , ft = 9;
        for (l = pt.prototype,
        l.l = l.pr = 0; --ft > 0; )
            l["xn" + ft] = 0,
            l["xs" + ft] = "";
        l.xs0 = "",
        l._next = l._prev = l.xfirst = l.data = l.plugin = l.setRatio = l.rxp = null ,
        l.appendXtra = function(t, e, i, r, n, o) {
            var a = this
              , s = a.l;
            return a["xs" + s] += o && s ? " " + t : t || "",
            i || 0 === s || a.plugin ? (a.l++,
            a.type = a.setRatio ? 2 : 1,
            a["xs" + a.l] = r || "",
            s > 0 ? (a.data["xn" + s] = e + i,
            a.rxp["xn" + s] = n,
            a["xn" + s] = e,
            a.plugin || (a.xfirst = new pt(a,"xn" + s,e,i,a.xfirst || a,0,a.n,n,a.pr),
            a.xfirst.xs0 = 0),
            a) : (a.data = {
                s: e + i
            },
            a.rxp = {},
            a.s = e,
            a.c = i,
            a.r = n,
            a)) : (a["xs" + s] += e + (r || ""),
            a)
        }
        ;
        var mt = function(t, e) {
            e = e || {},
            this.p = e.prefix ? W(t) || t : t,
            s[t] = s[this.p] = this,
            this.format = e.formatter || ht(e.defaultValue, e.color, e.collapsible, e.multi),
            e.parser && (this.parse = e.parser),
            this.clrs = e.color,
            this.multi = e.multi,
            this.keyword = e.keyword,
            this.dflt = e.defaultValue,
            this.pr = e.priority || 0
        }
          , gt = z._registerComplexSpecialProp = function(t, e, i) {
            "object" != typeof e && (e = {
                parser: i
            });
            var r, n, o = t.split(","), a = e.defaultValue;
            for (i = i || [a],
            r = 0; o.length > r; r++)
                e.prefix = 0 === r && e.prefix,
                e.defaultValue = i[r] || a,
                n = new mt(o[r],e)
        }
          , Et = function(t) {
            if (!s[t]) {
                var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                gt(t, {
                    parser: function(t, i, r, n, o, a, l) {
                        var h = (_gsScope.GreenSockGlobals || _gsScope).com.greensock.plugins[e];
                        return h ? (h._cssRegister(),
                        s[r].parse(t, i, r, n, o, a, l)) : (B("Error: " + e + " js file not loaded."),
                        o)
                    }
                })
            }
        }
        ;
        l = mt.prototype,
        l.parseComplex = function(t, e, i, r, n, o) {
            var a, s, l, h, c, u, p = this.keyword;
            if (this.multi && (P.test(i) || P.test(e) ? (s = e.replace(P, "|").split("|"),
            l = i.replace(P, "|").split("|")) : p && (s = [e],
            l = [i])),
            l) {
                for (h = l.length > s.length ? l.length : s.length,
                a = 0; h > a; a++)
                    e = s[a] = s[a] || this.dflt,
                    i = l[a] = l[a] || this.dflt,
                    p && (c = e.indexOf(p),
                    u = i.indexOf(p),
                    c !== u && (i = -1 === u ? l : s,
                    i[a] += " " + p));
                e = s.join(", "),
                i = l.join(", ")
            }
            return dt(t, this.p, e, i, this.clrs, this.dflt, r, this.pr, n, o)
        }
        ,
        l.parse = function(t, e, i, r, o, a) {
            return this.parseComplex(t.style, this.format(q(t, this.p, n, !1, this.dflt)), this.format(e), o, a)
        }
        ,
        a.registerSpecialProp = function(t, e, i) {
            gt(t, {
                parser: function(t, r, n, o, a, s) {
                    var l = new pt(t,n,0,0,a,2,n,!1,i);
                    return l.plugin = s,
                    l.setRatio = e(t, r, o._tween, n),
                    l
                },
                priority: i
            })
        }
        ;
        var yt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(",")
          , vt = W("transform")
          , _t = j + "transform"
          , xt = W("transformOrigin")
          , Tt = null  !== W("perspective")
          , wt = z.Transform = function() {
            this.skewY = 0
        }
          , bt = z.getTransform = function(t, e, i, r) {
            if (t._gsTransform && i && !r)
                return t._gsTransform;
            var n, o, s, l, h, c, u, p, d, f, m, g, E, y = i ? t._gsTransform || new wt : new wt, v = 0 > y.scaleX, _ = 2e-5, x = 1e5, T = 179.99, w = T * L, b = Tt ? parseFloat(q(t, xt, e, !1, "0 0 0").split(" ")[2]) || y.zOrigin || 0 : 0;
            if (vt ? n = q(t, _t, e, !0) : t.currentStyle && (n = t.currentStyle.filter.match(C),
            n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), y.x || 0, y.y || 0].join(",") : ""),
            n && "none" !== n && "matrix(1, 0, 0, 1, 0, 0)" !== n) {
                for (o = (n || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [],
                s = o.length; --s > -1; )
                    l = Number(o[s]),
                    o[s] = (h = l - (l |= 0)) ? (0 | h * x + (0 > h ? -.5 : .5)) / x + l : l;
                if (16 === o.length) {
                    var R = o[8]
                      , H = o[9]
                      , S = o[10]
                      , M = o[12]
                      , A = o[13]
                      , P = o[14];
                    if (y.zOrigin && (P = -y.zOrigin,
                    M = R * P - o[12],
                    A = H * P - o[13],
                    P = S * P + y.zOrigin - o[14]),
                    !i || r || null  == y.rotationX) {
                        var k, O, F, N, z, V, I, U = o[0], B = o[1], j = o[2], G = o[3], W = o[4], X = o[5], Y = o[6], $ = o[7], Q = o[11], K = Math.atan2(Y, S), Z = -w > K || K > w;
                        y.rotationX = K * D,
                        K && (N = Math.cos(-K),
                        z = Math.sin(-K),
                        k = W * N + R * z,
                        O = X * N + H * z,
                        F = Y * N + S * z,
                        R = W * -z + R * N,
                        H = X * -z + H * N,
                        S = Y * -z + S * N,
                        Q = $ * -z + Q * N,
                        W = k,
                        X = O,
                        Y = F),
                        K = Math.atan2(R, U),
                        y.rotationY = K * D,
                        K && (V = -w > K || K > w,
                        N = Math.cos(-K),
                        z = Math.sin(-K),
                        k = U * N - R * z,
                        O = B * N - H * z,
                        F = j * N - S * z,
                        H = B * z + H * N,
                        S = j * z + S * N,
                        Q = G * z + Q * N,
                        U = k,
                        B = O,
                        j = F),
                        K = Math.atan2(B, X),
                        y.rotation = K * D,
                        K && (I = -w > K || K > w,
                        N = Math.cos(-K),
                        z = Math.sin(-K),
                        U = U * N + W * z,
                        O = B * N + X * z,
                        X = B * -z + X * N,
                        Y = j * -z + Y * N,
                        B = O),
                        I && Z ? y.rotation = y.rotationX = 0 : I && V ? y.rotation = y.rotationY = 0 : V && Z && (y.rotationY = y.rotationX = 0),
                        y.scaleX = (0 | Math.sqrt(U * U + B * B) * x + .5) / x,
                        y.scaleY = (0 | Math.sqrt(X * X + H * H) * x + .5) / x,
                        y.scaleZ = (0 | Math.sqrt(Y * Y + S * S) * x + .5) / x,
                        y.skewX = 0,
                        y.perspective = Q ? 1 / (0 > Q ? -Q : Q) : 0,
                        y.x = M,
                        y.y = A,
                        y.z = P
                    }
                } else if (!(Tt && !r && o.length && y.x === o[4] && y.y === o[5] && (y.rotationX || y.rotationY) || void 0 !== y.x && "none" === q(t, "display", e))) {
                    var J = o.length >= 6
                      , tt = J ? o[0] : 1
                      , et = o[1] || 0
                      , it = o[2] || 0
                      , rt = J ? o[3] : 1;
                    y.x = o[4] || 0,
                    y.y = o[5] || 0,
                    c = Math.sqrt(tt * tt + et * et),
                    u = Math.sqrt(rt * rt + it * it),
                    p = tt || et ? Math.atan2(et, tt) * D : y.rotation || 0,
                    d = it || rt ? Math.atan2(it, rt) * D + p : y.skewX || 0,
                    f = c - Math.abs(y.scaleX || 0),
                    m = u - Math.abs(y.scaleY || 0),
                    Math.abs(d) > 90 && 270 > Math.abs(d) && (v ? (c *= -1,
                    d += 0 >= p ? 180 : -180,
                    p += 0 >= p ? 180 : -180) : (u *= -1,
                    d += 0 >= d ? 180 : -180)),
                    g = (p - y.rotation) % 180,
                    E = (d - y.skewX) % 180,
                    (void 0 === y.skewX || f > _ || -_ > f || m > _ || -_ > m || g > -T && T > g && !1 | g * x || E > -T && T > E && !1 | E * x) && (y.scaleX = c,
                    y.scaleY = u,
                    y.rotation = p,
                    y.skewX = d),
                    Tt && (y.rotationX = y.rotationY = y.z = 0,
                    y.perspective = parseFloat(a.defaultTransformPerspective) || 0,
                    y.scaleZ = 1)
                }
                y.zOrigin = b;
                for (s in y)
                    _ > y[s] && y[s] > -_ && (y[s] = 0)
            } else
                y = {
                    x: 0,
                    y: 0,
                    z: 0,
                    scaleX: 1,
                    scaleY: 1,
                    scaleZ: 1,
                    skewX: 0,
                    perspective: 0,
                    rotation: 0,
                    rotationX: 0,
                    rotationY: 0,
                    zOrigin: 0
                };
            return i && (t._gsTransform = y),
            y.xPercent = y.yPercent = 0,
            y
        }
          , Rt = function(t) {
            var e, i, r = this.data, n = -r.rotation * L, o = n + r.skewX * L, a = 1e5, s = (0 | Math.cos(n) * r.scaleX * a) / a, l = (0 | Math.sin(n) * r.scaleX * a) / a, h = (0 | Math.sin(o) * -r.scaleY * a) / a, c = (0 | Math.cos(o) * r.scaleY * a) / a, u = this.t.style, p = this.t.currentStyle;
            if (p) {
                i = l,
                l = -h,
                h = -i,
                e = p.filter,
                u.filter = "";
                var d, m, g = this.t.offsetWidth, E = this.t.offsetHeight, y = "absolute" !== p.position, x = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + l + ", M21=" + h + ", M22=" + c, T = r.x + g * r.xPercent / 100, w = r.y + E * r.yPercent / 100;
                if (null  != r.ox && (d = (r.oxp ? .01 * g * r.ox : r.ox) - g / 2,
                m = (r.oyp ? .01 * E * r.oy : r.oy) - E / 2,
                T += d - (d * s + m * l),
                w += m - (d * h + m * c)),
                y ? (d = g / 2,
                m = E / 2,
                x += ", Dx=" + (d - (d * s + m * l) + T) + ", Dy=" + (m - (d * h + m * c) + w) + ")") : x += ", sizingMethod='auto expand')",
                u.filter = -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? e.replace(A, x) : x + " " + e,
                (0 === t || 1 === t) && 1 === s && 0 === l && 0 === h && 1 === c && (y && -1 === x.indexOf("Dx=0, Dy=0") || _.test(e) && 100 !== parseFloat(RegExp.$1) || -1 === e.indexOf("gradient(" && e.indexOf("Alpha")) && u.removeAttribute("filter")),
                !y) {
                    var b, R, H, S = 8 > f ? 1 : -1;
                    for (d = r.ieOffsetX || 0,
                    m = r.ieOffsetY || 0,
                    r.ieOffsetX = Math.round((g - ((0 > s ? -s : s) * g + (0 > l ? -l : l) * E)) / 2 + T),
                    r.ieOffsetY = Math.round((E - ((0 > c ? -c : c) * E + (0 > h ? -h : h) * g)) / 2 + w),
                    ft = 0; 4 > ft; ft++)
                        R = J[ft],
                        b = p[R],
                        i = -1 !== b.indexOf("px") ? parseFloat(b) : Y(this.t, R, parseFloat(b), b.replace(v, "")) || 0,
                        H = i !== r[R] ? 2 > ft ? -r.ieOffsetX : -r.ieOffsetY : 2 > ft ? d - r.ieOffsetX : m - r.ieOffsetY,
                        u[R] = (r[R] = Math.round(i - H * (0 === ft || 2 === ft ? 1 : S))) + "px"
                }
            }
        }
          , Ht = z.set3DTransformRatio = function(t) {
            var e, i, r, n, o, a, s, l, h, c, u, d, f, m, g, E, y, v, _, x, T, w, b, R = this.data, H = this.t.style, S = R.rotation * L, M = R.scaleX, C = R.scaleY, A = R.scaleZ, P = R.x, D = R.y, k = R.z, O = R.perspective;
            if (!(1 !== t && 0 !== t || "auto" !== R.force3D || R.rotationY || R.rotationX || 1 !== A || O || k))
                return void St.call(this, t);
            if (p) {
                var F = 1e-4;
                F > M && M > -F && (M = A = 2e-5),
                F > C && C > -F && (C = A = 2e-5),
                !O || R.z || R.rotationX || R.rotationY || (O = 0)
            }
            if (S || R.skewX)
                v = Math.cos(S),
                _ = Math.sin(S),
                e = v,
                o = _,
                R.skewX && (S -= R.skewX * L,
                v = Math.cos(S),
                _ = Math.sin(S),
                "simple" === R.skewType && (x = Math.tan(R.skewX * L),
                x = Math.sqrt(1 + x * x),
                v *= x,
                _ *= x)),
                i = -_,
                a = v;
            else {
                if (!(R.rotationY || R.rotationX || 1 !== A || O))
                    return void (H[vt] = (R.xPercent || R.yPercent ? "translate(" + R.xPercent + "%," + R.yPercent + "%) translate3d(" : "translate3d(") + P + "px," + D + "px," + k + "px)" + (1 !== M || 1 !== C ? " scale(" + M + "," + C + ")" : ""));
                e = a = 1,
                i = o = 0
            }
            u = 1,
            r = n = s = l = h = c = d = f = m = 0,
            g = O ? -1 / O : 0,
            E = R.zOrigin,
            y = 1e5,
            S = R.rotationY * L,
            S && (v = Math.cos(S),
            _ = Math.sin(S),
            h = u * -_,
            f = g * -_,
            r = e * _,
            s = o * _,
            u *= v,
            g *= v,
            e *= v,
            o *= v),
            S = R.rotationX * L,
            S && (v = Math.cos(S),
            _ = Math.sin(S),
            x = i * v + r * _,
            T = a * v + s * _,
            w = c * v + u * _,
            b = m * v + g * _,
            r = i * -_ + r * v,
            s = a * -_ + s * v,
            u = c * -_ + u * v,
            g = m * -_ + g * v,
            i = x,
            a = T,
            c = w,
            m = b),
            1 !== A && (r *= A,
            s *= A,
            u *= A,
            g *= A),
            1 !== C && (i *= C,
            a *= C,
            c *= C,
            m *= C),
            1 !== M && (e *= M,
            o *= M,
            h *= M,
            f *= M),
            E && (d -= E,
            n = r * d,
            l = s * d,
            d = u * d + E),
            n = (x = (n += P) - (n |= 0)) ? (0 | x * y + (0 > x ? -.5 : .5)) / y + n : n,
            l = (x = (l += D) - (l |= 0)) ? (0 | x * y + (0 > x ? -.5 : .5)) / y + l : l,
            d = (x = (d += k) - (d |= 0)) ? (0 | x * y + (0 > x ? -.5 : .5)) / y + d : d,
            H[vt] = (R.xPercent || R.yPercent ? "translate(" + R.xPercent + "%," + R.yPercent + "%) matrix3d(" : "matrix3d(") + [(0 | e * y) / y, (0 | o * y) / y, (0 | h * y) / y, (0 | f * y) / y, (0 | i * y) / y, (0 | a * y) / y, (0 | c * y) / y, (0 | m * y) / y, (0 | r * y) / y, (0 | s * y) / y, (0 | u * y) / y, (0 | g * y) / y, n, l, d, O ? 1 + -d / O : 1].join(",") + ")"
        }
          , St = z.set2DTransformRatio = function(t) {
            var e, i, r, n, o, a = this.data, s = this.t, l = s.style, h = a.x, c = a.y;
            return a.rotationX || a.rotationY || a.z || a.force3D === !0 || "auto" === a.force3D && 1 !== t && 0 !== t ? (this.setRatio = Ht,
            void Ht.call(this, t)) : void (a.rotation || a.skewX ? (e = a.rotation * L,
            i = e - a.skewX * L,
            r = 1e5,
            n = a.scaleX * r,
            o = a.scaleY * r,
            l[vt] = (a.xPercent || a.yPercent ? "translate(" + a.xPercent + "%," + a.yPercent + "%) matrix(" : "matrix(") + (0 | Math.cos(e) * n) / r + "," + (0 | Math.sin(e) * n) / r + "," + (0 | Math.sin(i) * -o) / r + "," + (0 | Math.cos(i) * o) / r + "," + h + "," + c + ")") : l[vt] = (a.xPercent || a.yPercent ? "translate(" + a.xPercent + "%," + a.yPercent + "%) matrix(" : "matrix(") + a.scaleX + ",0,0," + a.scaleY + "," + h + "," + c + ")")
        }
        ;
        gt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent", {
            parser: function(t, e, i, r, o, s, l) {
                if (r._transform)
                    return o;
                var h, c, u, p, d, f, m, g = r._transform = bt(t, n, !0, l.parseTransform), E = t.style, y = 1e-6, v = yt.length, _ = l, x = {};
                if ("string" == typeof _.transform && vt)
                    u = F.style,
                    u[vt] = _.transform,
                    u.display = "block",
                    u.position = "absolute",
                    O.body.appendChild(F),
                    h = bt(F, null , !1),
                    O.body.removeChild(F);
                else if ("object" == typeof _) {
                    if (h = {
                        scaleX: rt(null  != _.scaleX ? _.scaleX : _.scale, g.scaleX),
                        scaleY: rt(null  != _.scaleY ? _.scaleY : _.scale, g.scaleY),
                        scaleZ: rt(_.scaleZ, g.scaleZ),
                        x: rt(_.x, g.x),
                        y: rt(_.y, g.y),
                        z: rt(_.z, g.z),
                        xPercent: rt(_.xPercent, g.xPercent),
                        yPercent: rt(_.yPercent, g.yPercent),
                        perspective: rt(_.transformPerspective, g.perspective)
                    },
                    m = _.directionalRotation,
                    null  != m)
                        if ("object" == typeof m)
                            for (u in m)
                                _[u] = m[u];
                        else
                            _.rotation = m;
                    "string" == typeof _.x && -1 !== _.x.indexOf("%") && (h.x = 0,
                    h.xPercent = rt(_.x, g.xPercent)),
                    "string" == typeof _.y && -1 !== _.y.indexOf("%") && (h.y = 0,
                    h.yPercent = rt(_.y, g.yPercent)),
                    h.rotation = nt("rotation" in _ ? _.rotation : "shortRotation" in _ ? _.shortRotation + "_short" : "rotationZ" in _ ? _.rotationZ : g.rotation, g.rotation, "rotation", x),
                    Tt && (h.rotationX = nt("rotationX" in _ ? _.rotationX : "shortRotationX" in _ ? _.shortRotationX + "_short" : g.rotationX || 0, g.rotationX, "rotationX", x),
                    h.rotationY = nt("rotationY" in _ ? _.rotationY : "shortRotationY" in _ ? _.shortRotationY + "_short" : g.rotationY || 0, g.rotationY, "rotationY", x)),
                    h.skewX = null  == _.skewX ? g.skewX : nt(_.skewX, g.skewX),
                    h.skewY = null  == _.skewY ? g.skewY : nt(_.skewY, g.skewY),
                    (c = h.skewY - g.skewY) && (h.skewX += c,
                    h.rotation += c)
                }
                for (Tt && null  != _.force3D && (g.force3D = _.force3D,
                f = !0),
                g.skewType = _.skewType || g.skewType || a.defaultSkewType,
                d = g.force3D || g.z || g.rotationX || g.rotationY || h.z || h.rotationX || h.rotationY || h.perspective,
                d || null  == _.scale || (h.scaleZ = 1); --v > -1; )
                    i = yt[v],
                    p = h[i] - g[i],
                    (p > y || -y > p || null  != k[i]) && (f = !0,
                    o = new pt(g,i,g[i],p,o),
                    i in x && (o.e = x[i]),
                    o.xs0 = 0,
                    o.plugin = s,
                    r._overwriteProps.push(o.n));
                return p = _.transformOrigin,
                (p || Tt && d && g.zOrigin) && (vt ? (f = !0,
                i = xt,
                p = (p || q(t, i, n, !1, "50% 50%")) + "",
                o = new pt(E,i,0,0,o,-1,"transformOrigin"),
                o.b = E[i],
                o.plugin = s,
                Tt ? (u = g.zOrigin,
                p = p.split(" "),
                g.zOrigin = (p.length > 2 && (0 === u || "0px" !== p[2]) ? parseFloat(p[2]) : u) || 0,
                o.xs0 = o.e = p[0] + " " + (p[1] || "50%") + " 0px",
                o = new pt(g,"zOrigin",0,0,o,-1,o.n),
                o.b = u,
                o.xs0 = o.e = g.zOrigin) : o.xs0 = o.e = p) : et(p + "", g)),
                f && (r._transformType = d || 3 === this._transformType ? 3 : 2),
                o
            },
            prefix: !0
        }),
        gt("boxShadow", {
            defaultValue: "0px 0px 0px 0px #999",
            prefix: !0,
            color: !0,
            multi: !0,
            keyword: "inset"
        }),
        gt("borderRadius", {
            defaultValue: "0px",
            parser: function(t, e, i, o, a) {
                e = this.format(e);
                var s, l, h, c, u, p, d, f, m, g, E, y, v, _, x, T, w = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], b = t.style;
                for (m = parseFloat(t.offsetWidth),
                g = parseFloat(t.offsetHeight),
                s = e.split(" "),
                l = 0; w.length > l; l++)
                    this.p.indexOf("border") && (w[l] = W(w[l])),
                    u = c = q(t, w[l], n, !1, "0px"),
                    -1 !== u.indexOf(" ") && (c = u.split(" "),
                    u = c[0],
                    c = c[1]),
                    p = h = s[l],
                    d = parseFloat(u),
                    y = u.substr((d + "").length),
                    v = "=" === p.charAt(1),
                    v ? (f = parseInt(p.charAt(0) + "1", 10),
                    p = p.substr(2),
                    f *= parseFloat(p),
                    E = p.substr((f + "").length - (0 > f ? 1 : 0)) || "") : (f = parseFloat(p),
                    E = p.substr((f + "").length)),
                    "" === E && (E = r[i] || y),
                    E !== y && (_ = Y(t, "borderLeft", d, y),
                    x = Y(t, "borderTop", d, y),
                    "%" === E ? (u = 100 * (_ / m) + "%",
                    c = 100 * (x / g) + "%") : "em" === E ? (T = Y(t, "borderLeft", 1, "em"),
                    u = _ / T + "em",
                    c = x / T + "em") : (u = _ + "px",
                    c = x + "px"),
                    v && (p = parseFloat(u) + f + E,
                    h = parseFloat(c) + f + E)),
                    a = dt(b, w[l], u + " " + c, p + " " + h, !1, "0px", a);
                return a
            },
            prefix: !0,
            formatter: ht("0px 0px 0px 0px", !1, !0)
        }),
        gt("backgroundPosition", {
            defaultValue: "0 0",
            parser: function(t, e, i, r, o, a) {
                var s, l, h, c, u, p, d = "background-position", m = n || X(t, null ), g = this.format((m ? f ? m.getPropertyValue(d + "-x") + " " + m.getPropertyValue(d + "-y") : m.getPropertyValue(d) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), E = this.format(e);
                if (-1 !== g.indexOf("%") != (-1 !== E.indexOf("%")) && (p = q(t, "backgroundImage").replace(H, ""),
                p && "none" !== p)) {
                    for (s = g.split(" "),
                    l = E.split(" "),
                    N.setAttribute("src", p),
                    h = 2; --h > -1; )
                        g = s[h],
                        c = -1 !== g.indexOf("%"),
                        c !== (-1 !== l[h].indexOf("%")) && (u = 0 === h ? t.offsetWidth - N.width : t.offsetHeight - N.height,
                        s[h] = c ? parseFloat(g) / 100 * u + "px" : 100 * (parseFloat(g) / u) + "%");
                    g = s.join(" ")
                }
                return this.parseComplex(t.style, g, E, o, a)
            },
            formatter: et
        }),
        gt("backgroundSize", {
            defaultValue: "0 0",
            formatter: et
        }),
        gt("perspective", {
            defaultValue: "0px",
            prefix: !0
        }),
        gt("perspectiveOrigin", {
            defaultValue: "50% 50%",
            prefix: !0
        }),
        gt("transformStyle", {
            prefix: !0
        }),
        gt("backfaceVisibility", {
            prefix: !0
        }),
        gt("userSelect", {
            prefix: !0
        }),
        gt("margin", {
            parser: ct("marginTop,marginRight,marginBottom,marginLeft")
        }),
        gt("padding", {
            parser: ct("paddingTop,paddingRight,paddingBottom,paddingLeft")
        }),
        gt("clip", {
            defaultValue: "rect(0px,0px,0px,0px)",
            parser: function(t, e, i, r, o, a) {
                var s, l, h;
                return 9 > f ? (l = t.currentStyle,
                h = 8 > f ? " " : ",",
                s = "rect(" + l.clipTop + h + l.clipRight + h + l.clipBottom + h + l.clipLeft + ")",
                e = this.format(e).split(",").join(h)) : (s = this.format(q(t, this.p, n, !1, this.dflt)),
                e = this.format(e)),
                this.parseComplex(t.style, s, e, o, a)
            }
        }),
        gt("textShadow", {
            defaultValue: "0px 0px 0px #999",
            color: !0,
            multi: !0
        }),
        gt("autoRound,strictUnits", {
            parser: function(t, e, i, r, n) {
                return n
            }
        }),
        gt("border", {
            defaultValue: "0px solid #000",
            parser: function(t, e, i, r, o, a) {
                return this.parseComplex(t.style, this.format(q(t, "borderTopWidth", n, !1, "0px") + " " + q(t, "borderTopStyle", n, !1, "solid") + " " + q(t, "borderTopColor", n, !1, "#000")), this.format(e), o, a)
            },
            color: !0,
            formatter: function(t) {
                var e = t.split(" ");
                return e[0] + " " + (e[1] || "solid") + " " + (t.match(lt) || ["#000"])[0]
            }
        }),
        gt("borderWidth", {
            parser: ct("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
        }),
        gt("float,cssFloat,styleFloat", {
            parser: function(t, e, i, r, n) {
                var o = t.style
                  , a = "cssFloat" in o ? "cssFloat" : "styleFloat";
                return new pt(o,a,0,0,n,-1,i,!1,0,o[a],e)
            }
        });
        var Mt = function(t) {
            var e, i = this.t, r = i.filter || q(this.data, "filter"), n = 0 | this.s + this.c * t;
            100 === n && (-1 === r.indexOf("atrix(") && -1 === r.indexOf("radient(") && -1 === r.indexOf("oader(") ? (i.removeAttribute("filter"),
            e = !q(this.data, "filter")) : (i.filter = r.replace(T, ""),
            e = !0)),
            e || (this.xn1 && (i.filter = r = r || "alpha(opacity=" + n + ")"),
            -1 === r.indexOf("pacity") ? 0 === n && this.xn1 || (i.filter = r + " alpha(opacity=" + n + ")") : i.filter = r.replace(_, "opacity=" + n))
        }
        ;
        gt("opacity,alpha,autoAlpha", {
            defaultValue: "1",
            parser: function(t, e, i, r, o, a) {
                var s = parseFloat(q(t, "opacity", n, !1, "1"))
                  , l = t.style
                  , h = "autoAlpha" === i;
                return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                h && 1 === s && "hidden" === q(t, "visibility", n) && 0 !== e && (s = 0),
                I ? o = new pt(l,"opacity",s,e - s,o) : (o = new pt(l,"opacity",100 * s,100 * (e - s),o),
                o.xn1 = h ? 1 : 0,
                l.zoom = 1,
                o.type = 2,
                o.b = "alpha(opacity=" + o.s + ")",
                o.e = "alpha(opacity=" + (o.s + o.c) + ")",
                o.data = t,
                o.plugin = a,
                o.setRatio = Mt),
                h && (o = new pt(l,"visibility",0,0,o,-1,null ,!1,0,0 !== s ? "inherit" : "hidden",0 === e ? "hidden" : "inherit"),
                o.xs0 = "inherit",
                r._overwriteProps.push(o.n),
                r._overwriteProps.push(i)),
                o
            }
        });
        var Ct = function(t, e) {
            e && (t.removeProperty ? ("ms" === e.substr(0, 2) && (e = "M" + e.substr(1)),
            t.removeProperty(e.replace(b, "-$1").toLowerCase())) : t.removeAttribute(e))
        }
          , At = function(t) {
            if (this.t._gsClassPT = this,
            1 === t || 0 === t) {
                this.t.setAttribute("class", 0 === t ? this.b : this.e);
                for (var e = this.data, i = this.t.style; e; )
                    e.v ? i[e.p] = e.v : Ct(i, e.p),
                    e = e._next;
                1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null )
            } else
                this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
        }
        ;
        gt("className", {
            parser: function(t, e, r, o, a, s, l) {
                var h, c, u, p, d, f = t.getAttribute("class") || "", m = t.style.cssText;
                if (a = o._classNamePT = new pt(t,r,0,0,a,2),
                a.setRatio = At,
                a.pr = -11,
                i = !0,
                a.b = f,
                c = Q(t, n),
                u = t._gsClassPT) {
                    for (p = {},
                    d = u.data; d; )
                        p[d.p] = 1,
                        d = d._next;
                    u.setRatio(1)
                }
                return t._gsClassPT = a,
                a.e = "=" !== e.charAt(1) ? e : f.replace(RegExp("\\s*\\b" + e.substr(2) + "\\b"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                o._tween._duration && (t.setAttribute("class", a.e),
                h = K(t, c, Q(t), l, p),
                t.setAttribute("class", f),
                a.data = h.firstMPT,
                t.style.cssText = m,
                a = a.xfirst = o.parse(t, h.difs, a, s)),
                a
            }
        });
        var Pt = function(t) {
            if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                var e, i, r, n, o = this.t.style, a = s.transform.parse;
                if ("all" === this.e)
                    o.cssText = "",
                    n = !0;
                else
                    for (e = this.e.split(","),
                    r = e.length; --r > -1; )
                        i = e[r],
                        s[i] && (s[i].parse === a ? n = !0 : i = "transformOrigin" === i ? xt : s[i].p),
                        Ct(o, i);
                n && (Ct(o, vt),
                this.t._gsTransform && delete this.t._gsTransform)
            }
        }
        ;
        for (gt("clearProps", {
            parser: function(t, e, r, n, o) {
                return o = new pt(t,r,0,0,o,2),
                o.setRatio = Pt,
                o.e = e,
                o.pr = -10,
                o.data = n._tween,
                i = !0,
                o
            }
        }),
        l = "bezier,throwProps,physicsProps,physics2D".split(","),
        ft = l.length; ft--; )
            Et(l[ft]);
        l = a.prototype,
        l._firstPT = null ,
        l._onInitTween = function(t, e, s) {
            if (!t.nodeType)
                return !1;
            this._target = t,
            this._tween = s,
            this._vars = e,
            h = e.autoRound,
            i = !1,
            r = e.suffixMap || a.suffixMap,
            n = X(t, ""),
            o = this._overwriteProps;
            var l, p, f, m, g, E, y, v, _, T = t.style;
            if (c && "" === T.zIndex && (l = q(t, "zIndex", n),
            ("auto" === l || "" === l) && this._addLazySet(T, "zIndex", 0)),
            "string" == typeof e && (m = T.cssText,
            l = Q(t, n),
            T.cssText = m + ";" + e,
            l = K(t, l, Q(t)).difs,
            !I && x.test(e) && (l.opacity = parseFloat(RegExp.$1)),
            e = l,
            T.cssText = m),
            this._firstPT = p = this.parse(t, e, null ),
            this._transformType) {
                for (_ = 3 === this._transformType,
                vt ? u && (c = !0,
                "" === T.zIndex && (y = q(t, "zIndex", n),
                ("auto" === y || "" === y) && this._addLazySet(T, "zIndex", 0)),
                d && this._addLazySet(T, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (_ ? "visible" : "hidden"))) : T.zoom = 1,
                f = p; f && f._next; )
                    f = f._next;
                v = new pt(t,"transform",0,0,null ,2),
                this._linkCSSP(v, null , f),
                v.setRatio = _ && Tt ? Ht : vt ? St : Rt,
                v.data = this._transform || bt(t, n, !0),
                o.pop()
            }
            if (i) {
                for (; p; ) {
                    for (E = p._next,
                    f = m; f && f.pr > p.pr; )
                        f = f._next;
                    (p._prev = f ? f._prev : g) ? p._prev._next = p : m = p,
                    (p._next = f) ? f._prev = p : g = p,
                    p = E
                }
                this._firstPT = m
            }
            return !0
        }
        ,
        l.parse = function(t, e, i, o) {
            var a, l, c, u, p, d, f, m, g, E, y = t.style;
            for (a in e)
                d = e[a],
                l = s[a],
                l ? i = l.parse(t, d, a, this, i, o, e) : (p = q(t, a, n) + "",
                g = "string" == typeof d,
                "color" === a || "fill" === a || "stroke" === a || -1 !== a.indexOf("Color") || g && w.test(d) ? (g || (d = st(d),
                d = (d.length > 3 ? "rgba(" : "rgb(") + d.join(",") + ")"),
                i = dt(y, a, p, d, !0, "transparent", i, 0, o)) : !g || -1 === d.indexOf(" ") && -1 === d.indexOf(",") ? (c = parseFloat(p),
                f = c || 0 === c ? p.substr((c + "").length) : "",
                ("" === p || "auto" === p) && ("width" === a || "height" === a ? (c = tt(t, a, n),
                f = "px") : "left" === a || "top" === a ? (c = $(t, a, n),
                f = "px") : (c = "opacity" !== a ? 0 : 1,
                f = "")),
                E = g && "=" === d.charAt(1),
                E ? (u = parseInt(d.charAt(0) + "1", 10),
                d = d.substr(2),
                u *= parseFloat(d),
                m = d.replace(v, "")) : (u = parseFloat(d),
                m = g ? d.substr((u + "").length) || "" : ""),
                "" === m && (m = a in r ? r[a] : f),
                d = u || 0 === u ? (E ? u + c : u) + m : e[a],
                f !== m && "" !== m && (u || 0 === u) && c && (c = Y(t, a, c, f),
                "%" === m ? (c /= Y(t, a, 100, "%") / 100,
                e.strictUnits !== !0 && (p = c + "%")) : "em" === m ? c /= Y(t, a, 1, "em") : "px" !== m && (u = Y(t, a, u, m),
                m = "px"),
                E && (u || 0 === u) && (d = u + c + m)),
                E && (u += c),
                !c && 0 !== c || !u && 0 !== u ? void 0 !== y[a] && (d || "NaN" != d + "" && null  != d) ? (i = new pt(y,a,u || c || 0,0,i,-1,a,!1,0,p,d),
                i.xs0 = "none" !== d || "display" !== a && -1 === a.indexOf("Style") ? d : p) : B("invalid " + a + " tween value: " + e[a]) : (i = new pt(y,a,c,u - c,i,0,a,h !== !1 && ("px" === m || "zIndex" === a),0,p,d),
                i.xs0 = m)) : i = dt(y, a, p, d, !0, null , i, 0, o)),
                o && i && !i.plugin && (i.plugin = o);
            return i
        }
        ,
        l.setRatio = function(t) {
            var e, i, r, n = this._firstPT, o = 1e-6;
            if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                    for (; n; ) {
                        if (e = n.c * t + n.s,
                        n.r ? e = Math.round(e) : o > e && e > -o && (e = 0),
                        n.type)
                            if (1 === n.type)
                                if (r = n.l,
                                2 === r)
                                    n.t[n.p] = n.xs0 + e + n.xs1 + n.xn1 + n.xs2;
                                else if (3 === r)
                                    n.t[n.p] = n.xs0 + e + n.xs1 + n.xn1 + n.xs2 + n.xn2 + n.xs3;
                                else if (4 === r)
                                    n.t[n.p] = n.xs0 + e + n.xs1 + n.xn1 + n.xs2 + n.xn2 + n.xs3 + n.xn3 + n.xs4;
                                else if (5 === r)
                                    n.t[n.p] = n.xs0 + e + n.xs1 + n.xn1 + n.xs2 + n.xn2 + n.xs3 + n.xn3 + n.xs4 + n.xn4 + n.xs5;
                                else {
                                    for (i = n.xs0 + e + n.xs1,
                                    r = 1; n.l > r; r++)
                                        i += n["xn" + r] + n["xs" + (r + 1)];
                                    n.t[n.p] = i
                                }
                            else
                                -1 === n.type ? n.t[n.p] = n.xs0 : n.setRatio && n.setRatio(t);
                        else
                            n.t[n.p] = e + n.xs0;
                        n = n._next
                    }
                else
                    for (; n; )
                        2 !== n.type ? n.t[n.p] = n.b : n.setRatio(t),
                        n = n._next;
            else
                for (; n; )
                    2 !== n.type ? n.t[n.p] = n.e : n.setRatio(t),
                    n = n._next
        }
        ,
        l._enableTransforms = function(t) {
            this._transformType = t || 3 === this._transformType ? 3 : 2,
            this._transform = this._transform || bt(this._target, n, !0)
        }
        ;
        var Lt = function() {
            this.t[this.p] = this.e,
            this.data._linkCSSP(this, this._next, null , !0)
        }
        ;
        l._addLazySet = function(t, e, i) {
            var r = this._firstPT = new pt(t,e,0,0,this._firstPT,2);
            r.e = i,
            r.setRatio = Lt,
            r.data = this
        }
        ,
        l._linkCSSP = function(t, e, i, r) {
            return t && (e && (e._prev = t),
            t._next && (t._next._prev = t._prev),
            t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
            r = !0),
            i ? i._next = t : r || null  !== this._firstPT || (this._firstPT = t),
            t._next = e,
            t._prev = i),
            t
        }
        ,
        l._kill = function(e) {
            var i, r, n, o = e;
            if (e.autoAlpha || e.alpha) {
                o = {};
                for (r in e)
                    o[r] = e[r];
                o.opacity = 1,
                o.autoAlpha && (o.visibility = 1)
            }
            return e.className && (i = this._classNamePT) && (n = i.xfirst,
            n && n._prev ? this._linkCSSP(n._prev, i._next, n._prev._prev) : n === this._firstPT && (this._firstPT = i._next),
            i._next && this._linkCSSP(i._next, i._next._next, n._prev),
            this._classNamePT = null ),
            t.prototype._kill.call(this, o)
        }
        ;
        var Dt = function(t, e, i) {
            var r, n, o, a;
            if (t.slice)
                for (n = t.length; --n > -1; )
                    Dt(t[n], e, i);
            else
                for (r = t.childNodes,
                n = r.length; --n > -1; )
                    o = r[n],
                    a = o.type,
                    o.style && (e.push(Q(o)),
                    i && i.push(o)),
                    1 !== a && 9 !== a && 11 !== a || !o.childNodes.length || Dt(o, e, i)
        }
        ;
        return a.cascadeTo = function(t, i, r) {
            var n, o, a, s = e.to(t, i, r), l = [s], h = [], c = [], u = [], p = e._internals.reservedProps;
            for (t = s._targets || s.target,
            Dt(t, h, u),
            s.render(i, !0),
            Dt(t, c),
            s.render(0, !0),
            s._enabled(!0),
            n = u.length; --n > -1; )
                if (o = K(u[n], h[n], c[n]),
                o.firstMPT) {
                    o = o.difs;
                    for (a in r)
                        p[a] && (o[a] = r[a]);
                    l.push(e.to(u[n], i, o))
                }
            return l
        }
        ,
        t.activate([a]),
        a
    }
    , !0),
    function() {
        var t = _gsScope._gsDefine.plugin({
            propName: "roundProps",
            priority: -1,
            API: 2,
            init: function(t, e, i) {
                return this._tween = i,
                !0
            }
        })
          , e = t.prototype;
        e._onInitAllProps = function() {
            for (var t, e, i, r = this._tween, n = r.vars.roundProps instanceof Array ? r.vars.roundProps : r.vars.roundProps.split(","), o = n.length, a = {}, s = r._propLookup.roundProps; --o > -1; )
                a[n[o]] = 1;
            for (o = n.length; --o > -1; )
                for (t = n[o],
                e = r._firstPT; e; )
                    i = e._next,
                    e.pg ? e.t._roundProps(a, !0) : e.n === t && (this._add(e.t, t, e.s, e.c),
                    i && (i._prev = e._prev),
                    e._prev ? e._prev._next = i : r._firstPT === e && (r._firstPT = i),
                    e._next = e._prev = null ,
                    r._propLookup[t] = s),
                    e = i;
            return !1
        }
        ,
        e._add = function(t, e, i, r) {
            this._addTween(t, e, i, i + r, e, !0),
            this._overwriteProps.push(e)
        }
    }
    (),
    _gsScope._gsDefine.plugin({
        propName: "attr",
        API: 2,
        version: "0.3.3",
        init: function(t, e) {
            var i, r, n;
            if ("function" != typeof t.setAttribute)
                return !1;
            this._target = t,
            this._proxy = {},
            this._start = {},
            this._end = {};
            for (i in e)
                this._start[i] = this._proxy[i] = r = t.getAttribute(i),
                n = this._addTween(this._proxy, i, parseFloat(r), e[i], i),
                this._end[i] = n ? n.s + n.c : e[i],
                this._overwriteProps.push(i);
            return !0
        },
        set: function(t) {
            this._super.setRatio.call(this, t);
            for (var e, i = this._overwriteProps, r = i.length, n = 1 === t ? this._end : t ? this._proxy : this._start; --r > -1; )
                e = i[r],
                this._target.setAttribute(e, n[e] + "")
        }
    }),
    _gsScope._gsDefine.plugin({
        propName: "directionalRotation",
        version: "0.2.1",
        API: 2,
        init: function(t, e) {
            "object" != typeof e && (e = {
                rotation: e
            }),
            this.finals = {};
            var i, r, n, o, a, s, l = e.useRadians === !0 ? 2 * Math.PI : 360, h = 1e-6;
            for (i in e)
                "useRadians" !== i && (s = (e[i] + "").split("_"),
                r = s[0],
                n = parseFloat("function" != typeof t[i] ? t[i] : t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]()),
                o = this.finals[i] = "string" == typeof r && "=" === r.charAt(1) ? n + parseInt(r.charAt(0) + "1", 10) * Number(r.substr(2)) : Number(r) || 0,
                a = o - n,
                s.length && (r = s.join("_"),
                -1 !== r.indexOf("short") && (a %= l,
                a !== a % (l / 2) && (a = 0 > a ? a + l : a - l)),
                -1 !== r.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * l) % l - (0 | a / l) * l : -1 !== r.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * l) % l - (0 | a / l) * l)),
                (a > h || -h > a) && (this._addTween(t, i, n, n + a, i),
                this._overwriteProps.push(i)));
            return !0
        },
        set: function(t) {
            var e;
            if (1 !== t)
                this._super.setRatio.call(this, t);
            else
                for (e = this._firstPT; e; )
                    e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p],
                    e = e._next
        }
    })._autoCSS = !0,
    _gsScope._gsDefine("easing.Back", ["easing.Ease"], function(t) {
        var e, i, r, n = _gsScope.GreenSockGlobals || _gsScope, o = n.com.greensock, a = 2 * Math.PI, s = Math.PI / 2, l = o._class, h = function(e, i) {
            var r = l("easing." + e, function() {}
            , !0)
              , n = r.prototype = new t;
            return n.constructor = r,
            n.getRatio = i,
            r
        }
        , c = t.register || function() {}
        , u = function(t, e, i, r) {
            var n = l("easing." + t, {
                easeOut: new e,
                easeIn: new i,
                easeInOut: new r
            }, !0);
            return c(n, t),
            n
        }
        , p = function(t, e, i) {
            this.t = t,
            this.v = e,
            i && (this.next = i,
            i.prev = this,
            this.c = i.v - e,
            this.gap = i.t - t)
        }
        , d = function(e, i) {
            var r = l("easing." + e, function(t) {
                this._p1 = t || 0 === t ? t : 1.70158,
                this._p2 = 1.525 * this._p1
            }
            , !0)
              , n = r.prototype = new t;
            return n.constructor = r,
            n.getRatio = i,
            n.config = function(t) {
                return new r(t)
            }
            ,
            r
        }
        , f = u("Back", d("BackOut", function(t) {
            return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
        }
        ), d("BackIn", function(t) {
            return t * t * ((this._p1 + 1) * t - this._p1)
        }
        ), d("BackInOut", function(t) {
            return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
        }
        )), m = l("easing.SlowMo", function(t, e, i) {
            e = e || 0 === e ? e : .7,
            null  == t ? t = .7 : t > 1 && (t = 1),
            this._p = 1 !== t ? e : 0,
            this._p1 = (1 - t) / 2,
            this._p2 = t,
            this._p3 = this._p1 + this._p2,
            this._calcEnd = i === !0
        }
        , !0), g = m.prototype = new t;
        return g.constructor = m,
        g.getRatio = function(t) {
            var e = t + (.5 - t) * this._p;
            return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
        }
        ,
        m.ease = new m(.7,.7),
        g.config = m.config = function(t, e, i) {
            return new m(t,e,i)
        }
        ,
        e = l("easing.SteppedEase", function(t) {
            t = t || 1,
            this._p1 = 1 / t,
            this._p2 = t + 1
        }
        , !0),
        g = e.prototype = new t,
        g.constructor = e,
        g.getRatio = function(t) {
            return 0 > t ? t = 0 : t >= 1 && (t = .999999999),
            (this._p2 * t >> 0) * this._p1
        }
        ,
        g.config = e.config = function(t) {
            return new e(t)
        }
        ,
        i = l("easing.RoughEase", function(e) {
            e = e || {};
            for (var i, r, n, o, a, s, l = e.taper || "none", h = [], c = 0, u = 0 | (e.points || 20), d = u, f = e.randomize !== !1, m = e.clamp === !0, g = e.template instanceof t ? e.template : null , E = "number" == typeof e.strength ? .4 * e.strength : .4; --d > -1; )
                i = f ? Math.random() : 1 / u * d,
                r = g ? g.getRatio(i) : i,
                "none" === l ? n = E : "out" === l ? (o = 1 - i,
                n = o * o * E) : "in" === l ? n = i * i * E : .5 > i ? (o = 2 * i,
                n = .5 * o * o * E) : (o = 2 * (1 - i),
                n = .5 * o * o * E),
                f ? r += Math.random() * n - .5 * n : d % 2 ? r += .5 * n : r -= .5 * n,
                m && (r > 1 ? r = 1 : 0 > r && (r = 0)),
                h[c++] = {
                    x: i,
                    y: r
                };
            for (h.sort(function(t, e) {
                return t.x - e.x
            }
            ),
            s = new p(1,1,null ),
            d = u; --d > -1; )
                a = h[d],
                s = new p(a.x,a.y,s);
            this._prev = new p(0,0,0 !== s.t ? s : s.next)
        }
        , !0),
        g = i.prototype = new t,
        g.constructor = i,
        g.getRatio = function(t) {
            var e = this._prev;
            if (t > e.t) {
                for (; e.next && t >= e.t; )
                    e = e.next;
                e = e.prev
            } else
                for (; e.prev && e.t >= t; )
                    e = e.prev;
            return this._prev = e,
            e.v + (t - e.t) / e.gap * e.c
        }
        ,
        g.config = function(t) {
            return new i(t)
        }
        ,
        i.ease = new i,
        u("Bounce", h("BounceOut", function(t) {
            return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }
        ), h("BounceIn", function(t) {
            return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
        }
        ), h("BounceInOut", function(t) {
            var e = .5 > t;
            return t = e ? 1 - 2 * t : 2 * t - 1,
            t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
            e ? .5 * (1 - t) : .5 * t + .5
        }
        )),
        u("Circ", h("CircOut", function(t) {
            return Math.sqrt(1 - (t -= 1) * t)
        }
        ), h("CircIn", function(t) {
            return -(Math.sqrt(1 - t * t) - 1)
        }
        ), h("CircInOut", function(t) {
            return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        }
        )),
        r = function(e, i, r) {
            var n = l("easing." + e, function(t, e) {
                this._p1 = t || 1,
                this._p2 = e || r,
                this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0)
            }
            , !0)
              , o = n.prototype = new t;
            return o.constructor = n,
            o.getRatio = i,
            o.config = function(t, e) {
                return new n(t,e)
            }
            ,
            n
        }
        ,
        u("Elastic", r("ElasticOut", function(t) {
            return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1
        }
        , .3), r("ElasticIn", function(t) {
            return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2))
        }
        , .3), r("ElasticInOut", function(t) {
            return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1
        }
        , .45)),
        u("Expo", h("ExpoOut", function(t) {
            return 1 - Math.pow(2, -10 * t)
        }
        ), h("ExpoIn", function(t) {
            return Math.pow(2, 10 * (t - 1)) - .001
        }
        ), h("ExpoInOut", function(t) {
            return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
        }
        )),
        u("Sine", h("SineOut", function(t) {
            return Math.sin(t * s)
        }
        ), h("SineIn", function(t) {
            return -Math.cos(t * s) + 1
        }
        ), h("SineInOut", function(t) {
            return -.5 * (Math.cos(Math.PI * t) - 1)
        }
        )),
        l("easing.EaseLookup", {
            find: function(e) {
                return t.map[e]
            }
        }, !0),
        c(n.SlowMo, "SlowMo", "ease,"),
        c(i, "RoughEase", "ease,"),
        c(e, "SteppedEase", "ease,"),
        f
    }
    , !0)
}
),
_gsScope._gsDefine && _gsScope._gsQueue.pop()(),
function(t, e) {
    "use strict";
    var i = t.GreenSockGlobals = t.GreenSockGlobals || t;
    if (!i.TweenLite) {
        var r, n, o, a, s, l = function(t) {
            var e, r = t.split("."), n = i;
            for (e = 0; r.length > e; e++)
                n[r[e]] = n = n[r[e]] || {};
            return n
        }
        , h = l("com.greensock"), c = 1e-10, u = function(t) {
            var e, i = [], r = t.length;
            for (e = 0; e !== r; i.push(t[e++]))
                ;
            return i
        }
        , p = function() {}
        , d = function() {
            var t = Object.prototype.toString
              , e = t.call([]);
            return function(i) {
                return null  != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
            }
        }
        (), f = {}, m = function(r, n, o, a) {
            this.sc = f[r] ? f[r].sc : [],
            f[r] = this,
            this.gsClass = null ,
            this.func = o;
            var s = [];
            this.check = function(h) {
                for (var c, u, p, d, g = n.length, E = g; --g > -1; )
                    (c = f[n[g]] || new m(n[g],[])).gsClass ? (s[g] = c.gsClass,
                    E--) : h && c.sc.push(this);
                if (0 === E && o)
                    for (u = ("com.greensock." + r).split("."),
                    p = u.pop(),
                    d = l(u.join("."))[p] = this.gsClass = o.apply(o, s),
                    a && (i[p] = d,
                    "function" == typeof define && define.amd ? define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + r.split(".").pop(), [], function() {
                        return d
                    }
                    ) : r === e && "undefined" != typeof module && module.exports && (module.exports = d)),
                    g = 0; this.sc.length > g; g++)
                        this.sc[g].check()
            }
            ,
            this.check(!0)
        }
        , g = t._gsDefine = function(t, e, i, r) {
            return new m(t,e,i,r)
        }
        , E = h._class = function(t, e, i) {
            return e = e || function() {}
            ,
            g(t, [], function() {
                return e
            }
            , i),
            e
        }
        ;
        g.globals = i;
        var y = [0, 0, 1, 1]
          , v = []
          , _ = E("easing.Ease", function(t, e, i, r) {
            this._func = t,
            this._type = i || 0,
            this._power = r || 0,
            this._params = e ? y.concat(e) : y
        }
        , !0)
          , x = _.map = {}
          , T = _.register = function(t, e, i, r) {
            for (var n, o, a, s, l = e.split(","), c = l.length, u = (i || "easeIn,easeOut,easeInOut").split(","); --c > -1; )
                for (o = l[c],
                n = r ? E("easing." + o, null , !0) : h.easing[o] || {},
                a = u.length; --a > -1; )
                    s = u[a],
                    x[o + "." + s] = x[s + o] = n[s] = t.getRatio ? t : t[s] || new t
        }
        ;
        for (o = _.prototype,
        o._calcEnd = !1,
        o.getRatio = function(t) {
            if (this._func)
                return this._params[0] = t,
                this._func.apply(null , this._params);
            var e = this._type
              , i = this._power
              , r = 1 === e ? 1 - t : 2 === e ? t : .5 > t ? 2 * t : 2 * (1 - t);
            return 1 === i ? r *= r : 2 === i ? r *= r * r : 3 === i ? r *= r * r * r : 4 === i && (r *= r * r * r * r),
            1 === e ? 1 - r : 2 === e ? r : .5 > t ? r / 2 : 1 - r / 2
        }
        ,
        r = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
        n = r.length; --n > -1; )
            o = r[n] + ",Power" + n,
            T(new _(null ,null ,1,n), o, "easeOut", !0),
            T(new _(null ,null ,2,n), o, "easeIn" + (0 === n ? ",easeNone" : "")),
            T(new _(null ,null ,3,n), o, "easeInOut");
        x.linear = h.easing.Linear.easeIn,
        x.swing = h.easing.Quad.easeInOut;
        var w = E("events.EventDispatcher", function(t) {
            this._listeners = {},
            this._eventTarget = t || this
        }
        );
        o = w.prototype,
        o.addEventListener = function(t, e, i, r, n) {
            n = n || 0;
            var o, l, h = this._listeners[t], c = 0;
            for (null  == h && (this._listeners[t] = h = []),
            l = h.length; --l > -1; )
                o = h[l],
                o.c === e && o.s === i ? h.splice(l, 1) : 0 === c && n > o.pr && (c = l + 1);
            h.splice(c, 0, {
                c: e,
                s: i,
                up: r,
                pr: n
            }),
            this !== a || s || a.wake()
        }
        ,
        o.removeEventListener = function(t, e) {
            var i, r = this._listeners[t];
            if (r)
                for (i = r.length; --i > -1; )
                    if (r[i].c === e)
                        return void r.splice(i, 1)
        }
        ,
        o.dispatchEvent = function(t) {
            var e, i, r, n = this._listeners[t];
            if (n)
                for (e = n.length,
                i = this._eventTarget; --e > -1; )
                    r = n[e],
                    r.up ? r.c.call(r.s || i, {
                        type: t,
                        target: i
                    }) : r.c.call(r.s || i)
        }
        ;
        var b = t.requestAnimationFrame
          , R = t.cancelAnimationFrame
          , H = Date.now || function() {
            return (new Date).getTime()
        }
          , S = H();
        for (r = ["ms", "moz", "webkit", "o"],
        n = r.length; --n > -1 && !b; )
            b = t[r[n] + "RequestAnimationFrame"],
            R = t[r[n] + "CancelAnimationFrame"] || t[r[n] + "CancelRequestAnimationFrame"];
        E("Ticker", function(t, e) {
            var i, r, n, o, l, h = this, u = H(), d = e !== !1 && b, f = 500, m = 33, g = function(t) {
                var e, a, s = H() - S;
                s > f && (u += s - m),
                S += s,
                h.time = (S - u) / 1e3,
                e = h.time - l,
                (!i || e > 0 || t === !0) && (h.frame++,
                l += e + (e >= o ? .004 : o - e),
                a = !0),
                t !== !0 && (n = r(g)),
                a && h.dispatchEvent("tick")
            }
            ;
            w.call(h),
            h.time = h.frame = 0,
            h.tick = function() {
                g(!0)
            }
            ,
            h.lagSmoothing = function(t, e) {
                f = t || 1 / c,
                m = Math.min(e, f, 0)
            }
            ,
            h.sleep = function() {
                null  != n && (d && R ? R(n) : clearTimeout(n),
                r = p,
                n = null ,
                h === a && (s = !1))
            }
            ,
            h.wake = function() {
                null  !== n ? h.sleep() : h.frame > 10 && (S = H() - f + 5),
                r = 0 === i ? p : d && b ? b : function(t) {
                    return setTimeout(t, 0 | 1e3 * (l - h.time) + 1)
                }
                ,
                h === a && (s = !0),
                g(2)
            }
            ,
            h.fps = function(t) {
                return arguments.length ? (i = t,
                o = 1 / (i || 60),
                l = this.time + o,
                void h.wake()) : i
            }
            ,
            h.useRAF = function(t) {
                return arguments.length ? (h.sleep(),
                d = t,
                void h.fps(i)) : d
            }
            ,
            h.fps(t),
            setTimeout(function() {
                d && (!n || 5 > h.frame) && h.useRAF(!1)
            }
            , 1500)
        }
        ),
        o = h.Ticker.prototype = new h.events.EventDispatcher,
        o.constructor = h.Ticker;
        var M = E("core.Animation", function(t, e) {
            if (this.vars = e = e || {},
            this._duration = this._totalDuration = t || 0,
            this._delay = Number(e.delay) || 0,
            this._timeScale = 1,
            this._active = e.immediateRender === !0,
            this.data = e.data,
            this._reversed = e.reversed === !0,
            j) {
                s || a.wake();
                var i = this.vars.useFrames ? B : j;
                i.add(this, i._time),
                this.vars.paused && this.paused(!0)
            }
        }
        );
        a = M.ticker = new h.Ticker,
        o = M.prototype,
        o._dirty = o._gc = o._initted = o._paused = !1,
        o._totalTime = o._time = 0,
        o._rawPrevTime = -1,
        o._next = o._last = o._onUpdate = o._timeline = o.timeline = null ,
        o._paused = !1;
        var C = function() {
            s && H() - S > 2e3 && a.wake(),
            setTimeout(C, 2e3)
        }
        ;
        C(),
        o.play = function(t, e) {
            return null  != t && this.seek(t, e),
            this.reversed(!1).paused(!1)
        }
        ,
        o.pause = function(t, e) {
            return null  != t && this.seek(t, e),
            this.paused(!0)
        }
        ,
        o.resume = function(t, e) {
            return null  != t && this.seek(t, e),
            this.paused(!1)
        }
        ,
        o.seek = function(t, e) {
            return this.totalTime(Number(t), e !== !1)
        }
        ,
        o.restart = function(t, e) {
            return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0)
        }
        ,
        o.reverse = function(t, e) {
            return null  != t && this.seek(t || this.totalDuration(), e),
            this.reversed(!0).paused(!1)
        }
        ,
        o.render = function() {}
        ,
        o.invalidate = function() {
            return this
        }
        ,
        o.isActive = function() {
            var t, e = this._timeline, i = this._startTime;
            return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && i + this.totalDuration() / this._timeScale > t
        }
        ,
        o._enabled = function(t, e) {
            return s || a.wake(),
            this._gc = !t,
            this._active = this.isActive(),
            e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
            !1
        }
        ,
        o._kill = function() {
            return this._enabled(!1, !1)
        }
        ,
        o.kill = function(t, e) {
            return this._kill(t, e),
            this
        }
        ,
        o._uncache = function(t) {
            for (var e = t ? this : this.timeline; e; )
                e._dirty = !0,
                e = e.timeline;
            return this
        }
        ,
        o._swapSelfInParams = function(t) {
            for (var e = t.length, i = t.concat(); --e > -1; )
                "{self}" === t[e] && (i[e] = this);
            return i
        }
        ,
        o.eventCallback = function(t, e, i, r) {
            if ("on" === (t || "").substr(0, 2)) {
                var n = this.vars;
                if (1 === arguments.length)
                    return n[t];
                null  == e ? delete n[t] : (n[t] = e,
                n[t + "Params"] = d(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i,
                n[t + "Scope"] = r),
                "onUpdate" === t && (this._onUpdate = e)
            }
            return this
        }
        ,
        o.delay = function(t) {
            return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
            this._delay = t,
            this) : this._delay
        }
        ,
        o.duration = function(t) {
            return arguments.length ? (this._duration = this._totalDuration = t,
            this._uncache(!0),
            this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
            this) : (this._dirty = !1,
            this._duration)
        }
        ,
        o.totalDuration = function(t) {
            return this._dirty = !1,
            arguments.length ? this.duration(t) : this._totalDuration
        }
        ,
        o.time = function(t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(),
            this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
        }
        ,
        o.totalTime = function(t, e, i) {
            if (s || a.wake(),
            !arguments.length)
                return this._totalTime;
            if (this._timeline) {
                if (0 > t && !i && (t += this.totalDuration()),
                this._timeline.smoothChildTiming) {
                    this._dirty && this.totalDuration();
                    var r = this._totalDuration
                      , n = this._timeline;
                    if (t > r && !i && (t = r),
                    this._startTime = (this._paused ? this._pauseTime : n._time) - (this._reversed ? r - t : t) / this._timeScale,
                    n._dirty || this._uncache(!1),
                    n._timeline)
                        for (; n._timeline; )
                            n._timeline._time !== (n._startTime + n._totalTime) / n._timeScale && n.totalTime(n._totalTime, !0),
                            n = n._timeline
                }
                this._gc && this._enabled(!0, !1),
                (this._totalTime !== t || 0 === this._duration) && (this.render(t, e, !1),
                k.length && G())
            }
            return this
        }
        ,
        o.progress = o.totalProgress = function(t, e) {
            return arguments.length ? this.totalTime(this.duration() * t, e) : this._time / this.duration()
        }
        ,
        o.startTime = function(t) {
            return arguments.length ? (t !== this._startTime && (this._startTime = t,
            this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
            this) : this._startTime
        }
        ,
        o.timeScale = function(t) {
            if (!arguments.length)
                return this._timeScale;
            if (t = t || c,
            this._timeline && this._timeline.smoothChildTiming) {
                var e = this._pauseTime
                  , i = e || 0 === e ? e : this._timeline.totalTime();
                this._startTime = i - (i - this._startTime) * this._timeScale / t
            }
            return this._timeScale = t,
            this._uncache(!1)
        }
        ,
        o.reversed = function(t) {
            return arguments.length ? (t != this._reversed && (this._reversed = t,
            this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
            this) : this._reversed
        }
        ,
        o.paused = function(t) {
            if (!arguments.length)
                return this._paused;
            if (t != this._paused && this._timeline) {
                s || t || a.wake();
                var e = this._timeline
                  , i = e.rawTime()
                  , r = i - this._pauseTime;
                !t && e.smoothChildTiming && (this._startTime += r,
                this._uncache(!1)),
                this._pauseTime = t ? i : null ,
                this._paused = t,
                this._active = this.isActive(),
                !t && 0 !== r && this._initted && this.duration() && this.render(e.smoothChildTiming ? this._totalTime : (i - this._startTime) / this._timeScale, !0, !0)
            }
            return this._gc && !t && this._enabled(!0, !1),
            this
        }
        ;
        var A = E("core.SimpleTimeline", function(t) {
            M.call(this, 0, t),
            this.autoRemoveChildren = this.smoothChildTiming = !0
        }
        );
        o = A.prototype = new M,
        o.constructor = A,
        o.kill()._gc = !1,
        o._first = o._last = null ,
        o._sortChildren = !1,
        o.add = o.insert = function(t, e) {
            var i, r;
            if (t._startTime = Number(e || 0) + t._delay,
            t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
            t.timeline && t.timeline._remove(t, !0),
            t.timeline = t._timeline = this,
            t._gc && t._enabled(!0, !0),
            i = this._last,
            this._sortChildren)
                for (r = t._startTime; i && i._startTime > r; )
                    i = i._prev;
            return i ? (t._next = i._next,
            i._next = t) : (t._next = this._first,
            this._first = t),
            t._next ? t._next._prev = t : this._last = t,
            t._prev = i,
            this._timeline && this._uncache(!0),
            this
        }
        ,
        o._remove = function(t, e) {
            return t.timeline === this && (e || t._enabled(!1, !0),
            t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
            t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
            t._next = t._prev = t.timeline = null ,
            this._timeline && this._uncache(!0)),
            this
        }
        ,
        o.render = function(t, e, i) {
            var r, n = this._first;
            for (this._totalTime = this._time = this._rawPrevTime = t; n; )
                r = n._next,
                (n._active || t >= n._startTime && !n._paused) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                n = r
        }
        ,
        o.rawTime = function() {
            return s || a.wake(),
            this._totalTime
        }
        ;
        var P = E("TweenLite", function(e, i, r) {
            if (M.call(this, i, r),
            this.render = P.prototype.render,
            null  == e)
                throw "Cannot tween a null target.";
            this.target = e = "string" != typeof e ? e : P.selector(e) || e;
            var n, o, a, s = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType), l = this.vars.overwrite;
            if (this._overwrite = l = null  == l ? U[P.defaultOverwrite] : "number" == typeof l ? l >> 0 : U[l],
            (s || e instanceof Array || e.push && d(e)) && "number" != typeof e[0])
                for (this._targets = a = u(e),
                this._propLookup = [],
                this._siblings = [],
                n = 0; a.length > n; n++)
                    o = a[n],
                    o ? "string" != typeof o ? o.length && o !== t && o[0] && (o[0] === t || o[0].nodeType && o[0].style && !o.nodeType) ? (a.splice(n--, 1),
                    this._targets = a = a.concat(u(o))) : (this._siblings[n] = W(o, this, !1),
                    1 === l && this._siblings[n].length > 1 && X(o, this, null , 1, this._siblings[n])) : (o = a[n--] = P.selector(o),
                    "string" == typeof o && a.splice(n + 1, 1)) : a.splice(n--, 1);
            else
                this._propLookup = {},
                this._siblings = W(e, this, !1),
                1 === l && this._siblings.length > 1 && X(e, this, null , 1, this._siblings);
            (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -c,
            this.render(-this._delay))
        }
        , !0)
          , L = function(e) {
            return e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType)
        }
          , D = function(t, e) {
            var i, r = {};
            for (i in t)
                I[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!N[i] || N[i] && N[i]._autoCSS) || (r[i] = t[i],
                delete t[i]);
            t.css = r
        }
        ;
        o = P.prototype = new M,
        o.constructor = P,
        o.kill()._gc = !1,
        o.ratio = 0,
        o._firstPT = o._targets = o._overwrittenProps = o._startAt = null ,
        o._notifyPluginsOfEnabled = o._lazy = !1,
        P.version = "1.13.1",
        P.defaultEase = o._ease = new _(null ,null ,1,1),
        P.defaultOverwrite = "auto",
        P.ticker = a,
        P.autoSleep = !0,
        P.lagSmoothing = function(t, e) {
            a.lagSmoothing(t, e)
        }
        ,
        P.selector = t.$ || t.jQuery || function(e) {
            var i = t.$ || t.jQuery;
            return i ? (P.selector = i,
            i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
        }
        ;
        var k = []
          , O = {}
          , F = P._internals = {
            isArray: d,
            isSelector: L,
            lazyTweens: k
        }
          , N = P._plugins = {}
          , z = F.tweenLookup = {}
          , V = 0
          , I = F.reservedProps = {
            ease: 1,
            delay: 1,
            overwrite: 1,
            onComplete: 1,
            onCompleteParams: 1,
            onCompleteScope: 1,
            useFrames: 1,
            runBackwards: 1,
            startAt: 1,
            onUpdate: 1,
            onUpdateParams: 1,
            onUpdateScope: 1,
            onStart: 1,
            onStartParams: 1,
            onStartScope: 1,
            onReverseComplete: 1,
            onReverseCompleteParams: 1,
            onReverseCompleteScope: 1,
            onRepeat: 1,
            onRepeatParams: 1,
            onRepeatScope: 1,
            easeParams: 1,
            yoyo: 1,
            immediateRender: 1,
            repeat: 1,
            repeatDelay: 1,
            data: 1,
            paused: 1,
            reversed: 1,
            autoCSS: 1,
            lazy: 1
        }
          , U = {
            none: 0,
            all: 1,
            auto: 2,
            concurrent: 3,
            allOnStart: 4,
            preexisting: 5,
            "true": 1,
            "false": 0
        }
          , B = M._rootFramesTimeline = new A
          , j = M._rootTimeline = new A
          , G = F.lazyRender = function() {
            var t = k.length;
            for (O = {}; --t > -1; )
                r = k[t],
                r && r._lazy !== !1 && (r.render(r._lazy, !1, !0),
                r._lazy = !1);
            k.length = 0
        }
        ;
        j._startTime = a.time,
        B._startTime = a.frame,
        j._active = B._active = !0,
        setTimeout(G, 1),
        M._updateRoot = P.render = function() {
            var t, e, i;
            if (k.length && G(),
            j.render((a.time - j._startTime) * j._timeScale, !1, !1),
            B.render((a.frame - B._startTime) * B._timeScale, !1, !1),
            k.length && G(),
            !(a.frame % 120)) {
                for (i in z) {
                    for (e = z[i].tweens,
                    t = e.length; --t > -1; )
                        e[t]._gc && e.splice(t, 1);
                    0 === e.length && delete z[i]
                }
                if (i = j._first,
                (!i || i._paused) && P.autoSleep && !B._first && 1 === a._listeners.tick.length) {
                    for (; i && i._paused; )
                        i = i._next;
                    i || a.sleep()
                }
            }
        }
        ,
        a.addEventListener("tick", M._updateRoot);
        var W = function(t, e, i) {
            var r, n, o = t._gsTweenID;
            if (z[o || (t._gsTweenID = o = "t" + V++)] || (z[o] = {
                target: t,
                tweens: []
            }),
            e && (r = z[o].tweens,
            r[n = r.length] = e,
            i))
                for (; --n > -1; )
                    r[n] === e && r.splice(n, 1);
            return z[o].tweens
        }
          , X = function(t, e, i, r, n) {
            var o, a, s, l;
            if (1 === r || r >= 4) {
                for (l = n.length,
                o = 0; l > o; o++)
                    if ((s = n[o]) !== e)
                        s._gc || s._enabled(!1, !1) && (a = !0);
                    else if (5 === r)
                        break;
                return a
            }
            var h, u = e._startTime + c, p = [], d = 0, f = 0 === e._duration;
            for (o = n.length; --o > -1; )
                (s = n[o]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (h = h || q(e, 0, f),
                0 === q(s, h, f) && (p[d++] = s)) : u >= s._startTime && s._startTime + s.totalDuration() / s._timeScale > u && ((f || !s._initted) && 2e-10 >= u - s._startTime || (p[d++] = s)));
            for (o = d; --o > -1; )
                s = p[o],
                2 === r && s._kill(i, t) && (a = !0),
                (2 !== r || !s._firstPT && s._initted) && s._enabled(!1, !1) && (a = !0);
            return a
        }
          , q = function(t, e, i) {
            for (var r = t._timeline, n = r._timeScale, o = t._startTime; r._timeline; ) {
                if (o += r._startTime,
                n *= r._timeScale,
                r._paused)
                    return -100;
                r = r._timeline
            }
            return o /= n,
            o > e ? o - e : i && o === e || !t._initted && 2 * c > o - e ? c : (o += t.totalDuration() / t._timeScale / n) > e + c ? 0 : o - e - c
        }
        ;
        o._init = function() {
            var t, e, i, r, n, o = this.vars, a = this._overwrittenProps, s = this._duration, l = !!o.immediateRender, h = o.ease;
            if (o.startAt) {
                this._startAt && (this._startAt.render(-1, !0),
                this._startAt.kill()),
                n = {};
                for (r in o.startAt)
                    n[r] = o.startAt[r];
                if (n.overwrite = !1,
                n.immediateRender = !0,
                n.lazy = l && o.lazy !== !1,
                n.startAt = n.delay = null ,
                this._startAt = P.to(this.target, 0, n),
                l)
                    if (this._time > 0)
                        this._startAt = null ;
                    else if (0 !== s)
                        return
            } else if (o.runBackwards && 0 !== s)
                if (this._startAt)
                    this._startAt.render(-1, !0),
                    this._startAt.kill(),
                    this._startAt = null ;
                else {
                    i = {};
                    for (r in o)
                        I[r] && "autoCSS" !== r || (i[r] = o[r]);
                    if (i.overwrite = 0,
                    i.data = "isFromStart",
                    i.lazy = l && o.lazy !== !1,
                    i.immediateRender = l,
                    this._startAt = P.to(this.target, 0, i),
                    l) {
                        if (0 === this._time)
                            return
                    } else
                        this._startAt._init(),
                        this._startAt._enabled(!1)
                }
            if (this._ease = h = h ? h instanceof _ ? h : "function" == typeof h ? new _(h,o.easeParams) : x[h] || P.defaultEase : P.defaultEase,
            o.easeParams instanceof Array && h.config && (this._ease = h.config.apply(h, o.easeParams)),
            this._easeType = this._ease._type,
            this._easePower = this._ease._power,
            this._firstPT = null ,
            this._targets)
                for (t = this._targets.length; --t > -1; )
                    this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], a ? a[t] : null ) && (e = !0);
            else
                e = this._initProps(this.target, this._propLookup, this._siblings, a);
            if (e && P._onPluginEvent("_onInitAllProps", this),
            a && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
            o.runBackwards)
                for (i = this._firstPT; i; )
                    i.s += i.c,
                    i.c = -i.c,
                    i = i._next;
            this._onUpdate = o.onUpdate,
            this._initted = !0
        }
        ,
        o._initProps = function(e, i, r, n) {
            var o, a, s, l, h, c;
            if (null  == e)
                return !1;
            O[e._gsTweenID] && G(),
            this.vars.css || e.style && e !== t && e.nodeType && N.css && this.vars.autoCSS !== !1 && D(this.vars, e);
            for (o in this.vars) {
                if (c = this.vars[o],
                I[o])
                    c && (c instanceof Array || c.push && d(c)) && -1 !== c.join("").indexOf("{self}") && (this.vars[o] = c = this._swapSelfInParams(c, this));
                else if (N[o] && (l = new N[o])._onInitTween(e, this.vars[o], this)) {
                    for (this._firstPT = h = {
                        _next: this._firstPT,
                        t: l,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: !0,
                        n: o,
                        pg: !0,
                        pr: l._priority
                    },
                    a = l._overwriteProps.length; --a > -1; )
                        i[l._overwriteProps[a]] = this._firstPT;
                    (l._priority || l._onInitAllProps) && (s = !0),
                    (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0)
                } else
                    this._firstPT = i[o] = h = {
                        _next: this._firstPT,
                        t: e,
                        p: o,
                        f: "function" == typeof e[o],
                        n: o,
                        pg: !1,
                        pr: 0
                    },
                    h.s = h.f ? e[o.indexOf("set") || "function" != typeof e["get" + o.substr(3)] ? o : "get" + o.substr(3)]() : parseFloat(e[o]),
                    h.c = "string" == typeof c && "=" === c.charAt(1) ? parseInt(c.charAt(0) + "1", 10) * Number(c.substr(2)) : Number(c) - h.s || 0;
                h && h._next && (h._next._prev = h)
            }
            return n && this._kill(n, e) ? this._initProps(e, i, r, n) : this._overwrite > 1 && this._firstPT && r.length > 1 && X(e, this, i, this._overwrite, r) ? (this._kill(i, e),
            this._initProps(e, i, r, n)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (O[e._gsTweenID] = !0),
            s)
        }
        ,
        o.render = function(t, e, i) {
            var r, n, o, a, s = this._time, l = this._duration, h = this._rawPrevTime;
            if (t >= l)
                this._totalTime = this._time = l,
                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                this._reversed || (r = !0,
                n = "onComplete"),
                0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                (0 === t || 0 > h || h === c) && h !== t && (i = !0,
                h > c && (n = "onReverseComplete")),
                this._rawPrevTime = a = !e || t || h === t ? t : c);
            else if (1e-7 > t)
                this._totalTime = this._time = 0,
                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                (0 !== s || 0 === l && h > 0 && h !== c) && (n = "onReverseComplete",
                r = this._reversed),
                0 > t ? (this._active = !1,
                0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (i = !0),
                this._rawPrevTime = a = !e || t || h === t ? t : c)) : this._initted || (i = !0);
            else if (this._totalTime = this._time = t,
            this._easeType) {
                var u = t / l
                  , p = this._easeType
                  , d = this._easePower;
                (1 === p || 3 === p && u >= .5) && (u = 1 - u),
                3 === p && (u *= 2),
                1 === d ? u *= u : 2 === d ? u *= u * u : 3 === d ? u *= u * u * u : 4 === d && (u *= u * u * u * u),
                this.ratio = 1 === p ? 1 - u : 2 === p ? u : .5 > t / l ? u / 2 : 1 - u / 2
            } else
                this.ratio = this._ease.getRatio(t / l);
            if (this._time !== s || i) {
                if (!this._initted) {
                    if (this._init(),
                    !this._initted || this._gc)
                        return;
                    if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                        return this._time = this._totalTime = s,
                        this._rawPrevTime = h,
                        k.push(this),
                        void (this._lazy = t);
                    this._time && !r ? this.ratio = this._ease.getRatio(this._time / l) : r && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                }
                for (this._lazy !== !1 && (this._lazy = !1),
                this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : n || (n = "_dummyGS")),
                this.vars.onStart && (0 !== this._time || 0 === l) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || v))),
                o = this._firstPT; o; )
                    o.f ? o.t[o.p](o.c * this.ratio + o.s) : o.t[o.p] = o.c * this.ratio + o.s,
                    o = o._next;
                this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i),
                e || (this._time !== s || r) && this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || v)),
                n && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i),
                r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                this._active = !1),
                !e && this.vars[n] && this.vars[n].apply(this.vars[n + "Scope"] || this, this.vars[n + "Params"] || v),
                0 === l && this._rawPrevTime === c && a !== c && (this._rawPrevTime = 0))
            }
        }
        ,
        o._kill = function(t, e) {
            if ("all" === t && (t = null ),
            null  == t && (null  == e || e === this.target))
                return this._lazy = !1,
                this._enabled(!1, !1);
            e = "string" != typeof e ? e || this._targets || this.target : P.selector(e) || e;
            var i, r, n, o, a, s, l, h;
            if ((d(e) || L(e)) && "number" != typeof e[0])
                for (i = e.length; --i > -1; )
                    this._kill(t, e[i]) && (s = !0);
            else {
                if (this._targets) {
                    for (i = this._targets.length; --i > -1; )
                        if (e === this._targets[i]) {
                            a = this._propLookup[i] || {},
                            this._overwrittenProps = this._overwrittenProps || [],
                            r = this._overwrittenProps[i] = t ? this._overwrittenProps[i] || {} : "all";
                            break
                        }
                } else {
                    if (e !== this.target)
                        return !1;
                    a = this._propLookup,
                    r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                }
                if (a) {
                    l = t || a,
                    h = t !== r && "all" !== r && t !== a && ("object" != typeof t || !t._tempKill);
                    for (n in l)
                        (o = a[n]) && (o.pg && o.t._kill(l) && (s = !0),
                        o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                        o._next && (o._next._prev = o._prev),
                        o._next = o._prev = null ),
                        delete a[n]),
                        h && (r[n] = 1);
                    !this._firstPT && this._initted && this._enabled(!1, !1)
                }
            }
            return s
        }
        ,
        o.invalidate = function() {
            return this._notifyPluginsOfEnabled && P._onPluginEvent("_onDisable", this),
            this._firstPT = null ,
            this._overwrittenProps = null ,
            this._onUpdate = null ,
            this._startAt = null ,
            this._initted = this._active = this._notifyPluginsOfEnabled = this._lazy = !1,
            this._propLookup = this._targets ? {} : [],
            this
        }
        ,
        o._enabled = function(t, e) {
            if (s || a.wake(),
            t && this._gc) {
                var i, r = this._targets;
                if (r)
                    for (i = r.length; --i > -1; )
                        this._siblings[i] = W(r[i], this, !0);
                else
                    this._siblings = W(this.target, this, !0)
            }
            return M.prototype._enabled.call(this, t, e),
            this._notifyPluginsOfEnabled && this._firstPT ? P._onPluginEvent(t ? "_onEnable" : "_onDisable", this) : !1
        }
        ,
        P.to = function(t, e, i) {
            return new P(t,e,i)
        }
        ,
        P.from = function(t, e, i) {
            return i.runBackwards = !0,
            i.immediateRender = 0 != i.immediateRender,
            new P(t,e,i)
        }
        ,
        P.fromTo = function(t, e, i, r) {
            return r.startAt = i,
            r.immediateRender = 0 != r.immediateRender && 0 != i.immediateRender,
            new P(t,e,r)
        }
        ,
        P.delayedCall = function(t, e, i, r, n) {
            return new P(e,0,{
                delay: t,
                onComplete: e,
                onCompleteParams: i,
                onCompleteScope: r,
                onReverseComplete: e,
                onReverseCompleteParams: i,
                onReverseCompleteScope: r,
                immediateRender: !1,
                useFrames: n,
                overwrite: 0
            })
        }
        ,
        P.set = function(t, e) {
            return new P(t,0,e)
        }
        ,
        P.getTweensOf = function(t, e) {
            if (null  == t)
                return [];
            t = "string" != typeof t ? t : P.selector(t) || t;
            var i, r, n, o;
            if ((d(t) || L(t)) && "number" != typeof t[0]) {
                for (i = t.length,
                r = []; --i > -1; )
                    r = r.concat(P.getTweensOf(t[i], e));
                for (i = r.length; --i > -1; )
                    for (o = r[i],
                    n = i; --n > -1; )
                        o === r[n] && r.splice(i, 1)
            } else
                for (r = W(t).concat(),
                i = r.length; --i > -1; )
                    (r[i]._gc || e && !r[i].isActive()) && r.splice(i, 1);
            return r
        }
        ,
        P.killTweensOf = P.killDelayedCallsTo = function(t, e, i) {
            "object" == typeof e && (i = e,
            e = !1);
            for (var r = P.getTweensOf(t, e), n = r.length; --n > -1; )
                r[n]._kill(i, t)
        }
        ;
        var Y = E("plugins.TweenPlugin", function(t, e) {
            this._overwriteProps = (t || "").split(","),
            this._propName = this._overwriteProps[0],
            this._priority = e || 0,
            this._super = Y.prototype
        }
        , !0);
        if (o = Y.prototype,
        Y.version = "1.10.1",
        Y.API = 2,
        o._firstPT = null ,
        o._addTween = function(t, e, i, r, n, o) {
            var a, s;
            return null  != r && (a = "number" == typeof r || "=" !== r.charAt(1) ? Number(r) - i : parseInt(r.charAt(0) + "1", 10) * Number(r.substr(2))) ? (this._firstPT = s = {
                _next: this._firstPT,
                t: t,
                p: e,
                s: i,
                c: a,
                f: "function" == typeof t[e],
                n: n || e,
                r: o
            },
            s._next && (s._next._prev = s),
            s) : void 0
        }
        ,
        o.setRatio = function(t) {
            for (var e, i = this._firstPT, r = 1e-6; i; )
                e = i.c * t + i.s,
                i.r ? e = Math.round(e) : r > e && e > -r && (e = 0),
                i.f ? i.t[i.p](e) : i.t[i.p] = e,
                i = i._next
        }
        ,
        o._kill = function(t) {
            var e, i = this._overwriteProps, r = this._firstPT;
            if (null  != t[this._propName])
                this._overwriteProps = [];
            else
                for (e = i.length; --e > -1; )
                    null  != t[i[e]] && i.splice(e, 1);
            for (; r; )
                null  != t[r.n] && (r._next && (r._next._prev = r._prev),
                r._prev ? (r._prev._next = r._next,
                r._prev = null ) : this._firstPT === r && (this._firstPT = r._next)),
                r = r._next;
            return !1
        }
        ,
        o._roundProps = function(t, e) {
            for (var i = this._firstPT; i; )
                (t[this._propName] || null  != i.n && t[i.n.split(this._propName + "_").join("")]) && (i.r = e),
                i = i._next
        }
        ,
        P._onPluginEvent = function(t, e) {
            var i, r, n, o, a, s = e._firstPT;
            if ("_onInitAllProps" === t) {
                for (; s; ) {
                    for (a = s._next,
                    r = n; r && r.pr > s.pr; )
                        r = r._next;
                    (s._prev = r ? r._prev : o) ? s._prev._next = s : n = s,
                    (s._next = r) ? r._prev = s : o = s,
                    s = a
                }
                s = e._firstPT = n
            }
            for (; s; )
                s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0),
                s = s._next;
            return i
        }
        ,
        Y.activate = function(t) {
            for (var e = t.length; --e > -1; )
                t[e].API === Y.API && (N[(new t[e])._propName] = t[e]);
            return !0
        }
        ,
        g.plugin = function(t) {
            if (!(t && t.propName && t.init && t.API))
                throw "illegal plugin definition.";
            var e, i = t.propName, r = t.priority || 0, n = t.overwriteProps, o = {
                init: "_onInitTween",
                set: "setRatio",
                kill: "_kill",
                round: "_roundProps",
                initAll: "_onInitAllProps"
            }, a = E("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function() {
                Y.call(this, i, r),
                this._overwriteProps = n || []
            }
            , t.global === !0), s = a.prototype = new Y(i);
            s.constructor = a,
            a.API = t.API;
            for (e in o)
                "function" == typeof t[e] && (s[o[e]] = t[e]);
            return a.version = t.version,
            Y.activate([a]),
            a
        }
        ,
        r = t._gsQueue) {
            for (n = 0; r.length > n; n++)
                r[n]();
            for (o in f)
                f[o].func || t.console.log("GSAP encountered missing dependency: com.greensock." + o)
        }
        s = !1
    }
}
("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
    "use strict";
    _gsScope._gsDefine("easing.Back", ["easing.Ease"], function(t) {
        var e, i, r, n = _gsScope.GreenSockGlobals || _gsScope, o = n.com.greensock, a = 2 * Math.PI, s = Math.PI / 2, l = o._class, h = function(e, i) {
            var r = l("easing." + e, function() {}
            , !0)
              , n = r.prototype = new t;
            return n.constructor = r,
            n.getRatio = i,
            r
        }
        , c = t.register || function() {}
        , u = function(t, e, i, r) {
            var n = l("easing." + t, {
                easeOut: new e,
                easeIn: new i,
                easeInOut: new r
            }, !0);
            return c(n, t),
            n
        }
        , p = function(t, e, i) {
            this.t = t,
            this.v = e,
            i && (this.next = i,
            i.prev = this,
            this.c = i.v - e,
            this.gap = i.t - t)
        }
        , d = function(e, i) {
            var r = l("easing." + e, function(t) {
                this._p1 = t || 0 === t ? t : 1.70158,
                this._p2 = 1.525 * this._p1
            }
            , !0)
              , n = r.prototype = new t;
            return n.constructor = r,
            n.getRatio = i,
            n.config = function(t) {
                return new r(t)
            }
            ,
            r
        }
        , f = u("Back", d("BackOut", function(t) {
            return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
        }
        ), d("BackIn", function(t) {
            return t * t * ((this._p1 + 1) * t - this._p1)
        }
        ), d("BackInOut", function(t) {
            return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
        }
        )), m = l("easing.SlowMo", function(t, e, i) {
            e = e || 0 === e ? e : .7,
            null  == t ? t = .7 : t > 1 && (t = 1),
            this._p = 1 !== t ? e : 0,
            this._p1 = (1 - t) / 2,
            this._p2 = t,
            this._p3 = this._p1 + this._p2,
            this._calcEnd = i === !0
        }
        , !0), g = m.prototype = new t;
        return g.constructor = m,
        g.getRatio = function(t) {
            var e = t + (.5 - t) * this._p;
            return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
        }
        ,
        m.ease = new m(.7,.7),
        g.config = m.config = function(t, e, i) {
            return new m(t,e,i)
        }
        ,
        e = l("easing.SteppedEase", function(t) {
            t = t || 1,
            this._p1 = 1 / t,
            this._p2 = t + 1
        }
        , !0),
        g = e.prototype = new t,
        g.constructor = e,
        g.getRatio = function(t) {
            return 0 > t ? t = 0 : t >= 1 && (t = .999999999),
            (this._p2 * t >> 0) * this._p1
        }
        ,
        g.config = e.config = function(t) {
            return new e(t)
        }
        ,
        i = l("easing.RoughEase", function(e) {
            e = e || {};
            for (var i, r, n, o, a, s, l = e.taper || "none", h = [], c = 0, u = 0 | (e.points || 20), d = u, f = e.randomize !== !1, m = e.clamp === !0, g = e.template instanceof t ? e.template : null , E = "number" == typeof e.strength ? .4 * e.strength : .4; --d > -1; )
                i = f ? Math.random() : 1 / u * d,
                r = g ? g.getRatio(i) : i,
                "none" === l ? n = E : "out" === l ? (o = 1 - i,
                n = o * o * E) : "in" === l ? n = i * i * E : .5 > i ? (o = 2 * i,
                n = .5 * o * o * E) : (o = 2 * (1 - i),
                n = .5 * o * o * E),
                f ? r += Math.random() * n - .5 * n : d % 2 ? r += .5 * n : r -= .5 * n,
                m && (r > 1 ? r = 1 : 0 > r && (r = 0)),
                h[c++] = {
                    x: i,
                    y: r
                };
            for (h.sort(function(t, e) {
                return t.x - e.x
            }
            ),
            s = new p(1,1,null ),
            d = u; --d > -1; )
                a = h[d],
                s = new p(a.x,a.y,s);
            this._prev = new p(0,0,0 !== s.t ? s : s.next)
        }
        , !0),
        g = i.prototype = new t,
        g.constructor = i,
        g.getRatio = function(t) {
            var e = this._prev;
            if (t > e.t) {
                for (; e.next && t >= e.t; )
                    e = e.next;
                e = e.prev
            } else
                for (; e.prev && e.t >= t; )
                    e = e.prev;
            return this._prev = e,
            e.v + (t - e.t) / e.gap * e.c
        }
        ,
        g.config = function(t) {
            return new i(t)
        }
        ,
        i.ease = new i,
        u("Bounce", h("BounceOut", function(t) {
            return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }
        ), h("BounceIn", function(t) {
            return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
        }
        ), h("BounceInOut", function(t) {
            var e = .5 > t;
            return t = e ? 1 - 2 * t : 2 * t - 1,
            t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
            e ? .5 * (1 - t) : .5 * t + .5
        }
        )),
        u("Circ", h("CircOut", function(t) {
            return Math.sqrt(1 - (t -= 1) * t)
        }
        ), h("CircIn", function(t) {
            return -(Math.sqrt(1 - t * t) - 1)
        }
        ), h("CircInOut", function(t) {
            return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        }
        )),
        r = function(e, i, r) {
            var n = l("easing." + e, function(t, e) {
                this._p1 = t || 1,
                this._p2 = e || r,
                this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0)
            }
            , !0)
              , o = n.prototype = new t;
            return o.constructor = n,
            o.getRatio = i,
            o.config = function(t, e) {
                return new n(t,e)
            }
            ,
            n
        }
        ,
        u("Elastic", r("ElasticOut", function(t) {
            return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1
        }
        , .3), r("ElasticIn", function(t) {
            return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2))
        }
        , .3), r("ElasticInOut", function(t) {
            return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1
        }
        , .45)),
        u("Expo", h("ExpoOut", function(t) {
            return 1 - Math.pow(2, -10 * t)
        }
        ), h("ExpoIn", function(t) {
            return Math.pow(2, 10 * (t - 1)) - .001
        }
        ), h("ExpoInOut", function(t) {
            return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
        }
        )),
        u("Sine", h("SineOut", function(t) {
            return Math.sin(t * s)
        }
        ), h("SineIn", function(t) {
            return -Math.cos(t * s) + 1
        }
        ), h("SineInOut", function(t) {
            return -.5 * (Math.cos(Math.PI * t) - 1)
        }
        )),
        l("easing.EaseLookup", {
            find: function(e) {
                return t.map[e]
            }
        }, !0),
        c(n.SlowMo, "SlowMo", "ease,"),
        c(i, "RoughEase", "ease,"),
        c(e, "SteppedEase", "ease,"),
        f
    }
    , !0)
}
),
_gsScope._gsDefine && _gsScope._gsQueue.pop()(),
function(t, e) {
    "function" == typeof define && define.amd ? define(e) : "object" == typeof exports ? module.exports = e() : t.SVG = e()
}
(this, function() {
    function t(t, e) {
        e = e || {
            bubbles: !1,
            cancelable: !1,
            detail: void 0
        };
        var i = document.createEvent("CustomEvent");
        return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail),
        i
    }
    function e(t) {
        return t.toLowerCase().replace(/-(.)/g, function(t, e) {
            return e.toUpperCase()
        }
        )
    }
    function i(t) {
        return 4 == t.length ? ["#", t.substring(1, 2), t.substring(1, 2), t.substring(2, 3), t.substring(2, 3), t.substring(3, 4), t.substring(3, 4)].join("") : t
    }
    function r(t) {
        var e = t.toString(16);
        return 1 == e.length ? "0" + e : e
    }
    function n(t, e, i) {
        return (null  == e || null  == i) && (null  == i ? i = t.height / t.width * e : null  == e && (e = t.width / t.height * i)),
        {
            width: e,
            height: i
        }
    }
    function o(t, e) {
        return "number" == typeof t.from ? t.from + (t.to - t.from) * e : t instanceof c.Color || t instanceof c.Number ? t.at(e) : 1 > e ? t.from : t.to
    }
    function a(t) {
        for (var e = 0, i = t.length, r = ""; i > e; e++)
            r += t[e][0],
            null  != t[e][1] && (r += t[e][1],
            null  != t[e][2] && (r += " ",
            r += t[e][2],
            null  != t[e][3] && (r += " ",
            r += t[e][3],
            r += " ",
            r += t[e][4],
            null  != t[e][5] && (r += " ",
            r += t[e][5],
            r += " ",
            r += t[e][6],
            null  != t[e][7] && (r += " ",
            r += t[e][7])))));
        return r + " "
    }
    function s(t) {
        t.x2 = t.x + t.width,
        t.y2 = t.y + t.height,
        t.cx = t.x + t.width / 2,
        t.cy = t.y + t.height / 2
    }
    function l(t) {
        if (t.matrix) {
            var e = t.matrix.replace(/\s/g, "").split(",");
            6 == e.length && (t.a = parseFloat(e[0]),
            t.b = parseFloat(e[1]),
            t.c = parseFloat(e[2]),
            t.d = parseFloat(e[3]),
            t.e = parseFloat(e[4]),
            t.f = parseFloat(e[5]))
        }
        return t
    }
    function h(t) {
        var e = t.toString().match(c.regex.reference);
        return e ? e[1] : void 0
    }
    var c = this.SVG = function(t) {
        return c.supported ? (t = new c.Doc(t),
        c.parser || c.prepare(t),
        t) : void 0
    }
    ;
    if (c.ns = "http://www.w3.org/2000/svg",
    c.xmlns = "http://www.w3.org/2000/xmlns/",
    c.xlink = "http://www.w3.org/1999/xlink",
    c.did = 1e3,
    c.eid = function(t) {
        return "Svgjs" + t.charAt(0).toUpperCase() + t.slice(1) + c.did++
    }
    ,
    c.create = function(t) {
        var e = document.createElementNS(this.ns, t);
        return e.setAttribute("id", this.eid(t)),
        e
    }
    ,
    c.extend = function() {
        var t, e, i, r;
        for (t = [].slice.call(arguments),
        e = t.pop(),
        r = t.length - 1; r >= 0; r--)
            if (t[r])
                for (i in e)
                    t[r].prototype[i] = e[i];
        c.Set && c.Set.inherit && c.Set.inherit()
    }
    ,
    c.prepare = function(t) {
        var e = document.getElementsByTagName("body")[0]
          , i = (e ? new c.Doc(e) : t.nested()).size(2, 0)
          , r = c.create("path");
        i.node.appendChild(r),
        c.parser = {
            body: e || t.parent,
            draw: i.style("opacity:0;position:fixed;left:100%;top:100%;overflow:hidden"),
            poly: i.polyline().node,
            path: r
        }
    }
    ,
    c.supported = function() {
        return !!document.createElementNS && !!document.createElementNS(c.ns, "svg").createSVGRect
    }
    (),
    !c.supported)
        return !1;
    c.get = function(t) {
        var e = document.getElementById(h(t) || t);
        return e ? e.instance : void 0
    }
    ,
    c.invent = function(t) {
        var e = "function" == typeof t.create ? t.create : function() {
            this.constructor.call(this, c.create(t.create))
        }
        ;
        return t.inherit && (e.prototype = new t.inherit),
        t.extend && c.extend(e, t.extend),
        t.construct && c.extend(t.parent || c.Container, t.construct),
        e
    }
    ,
    "function" != typeof t && (t.prototype = window.Event.prototype,
    window.CustomEvent = t),
    function(t) {
        for (var e = 0, i = ["moz", "webkit"], r = 0; r < i.length && !window.requestAnimationFrame; ++r)
            t.requestAnimationFrame = t[i[r] + "RequestAnimationFrame"],
            t.cancelAnimationFrame = t[i[r] + "CancelAnimationFrame"] || t[i[r] + "CancelRequestAnimationFrame"];
        t.requestAnimationFrame = t.requestAnimationFrame || function(i) {
            var r = (new Date).getTime()
              , n = Math.max(0, 16 - (r - e))
              , o = t.setTimeout(function() {
                i(r + n)
            }
            , n);
            return e = r + n,
            o
        }
        ,
        t.cancelAnimationFrame = t.cancelAnimationFrame || t.clearTimeout
    }
    (window),
    c.regex = {
        unit: /^(-?[\d\.]+)([a-z%]{0,2})$/,
        hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
        rgb: /rgb\((\d+),(\d+),(\d+)\)/,
        reference: /#([a-z0-9\-_]+)/i,
        isHex: /^#[a-f0-9]{3,6}$/i,
        isRgb: /^rgb\(/,
        isCss: /[^:]+:[^;]+;?/,
        isBlank: /^(\s+)?$/,
        isNumber: /^-?[\d\.]+$/,
        isPercent: /^-?[\d\.]+%$/,
        isImage: /\.(jpg|jpeg|png|gif)(\?[^=]+.*)?/i,
        isEvent: /^[\w]+:[\w]+$/
    },
    c.defaults = {
        matrix: "1 0 0 1 0 0",
        attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start"
        },
        trans: function() {
            return {
                x: 0,
                y: 0,
                scaleX: 1,
                scaleY: 1,
                rotation: 0,
                skewX: 0,
                skewY: 0,
                matrix: this.matrix,
                a: 1,
                b: 0,
                c: 0,
                d: 1,
                e: 0,
                f: 0
            }
        }
    },
    c.Color = function(t) {
        var e;
        this.r = 0,
        this.g = 0,
        this.b = 0,
        "string" == typeof t ? c.regex.isRgb.test(t) ? (e = c.regex.rgb.exec(t.replace(/\s/g, "")),
        this.r = parseInt(e[1]),
        this.g = parseInt(e[2]),
        this.b = parseInt(e[3])) : c.regex.isHex.test(t) && (e = c.regex.hex.exec(i(t)),
        this.r = parseInt(e[1], 16),
        this.g = parseInt(e[2], 16),
        this.b = parseInt(e[3], 16)) : "object" == typeof t && (this.r = t.r,
        this.g = t.g,
        this.b = t.b)
    }
    ,
    c.extend(c.Color, {
        toString: function() {
            return this.toHex()
        },
        toHex: function() {
            return "#" + r(this.r) + r(this.g) + r(this.b)
        },
        toRgb: function() {
            return "rgb(" + [this.r, this.g, this.b].join() + ")"
        },
        brightness: function() {
            return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
        },
        morph: function(t) {
            return this.destination = new c.Color(t),
            this
        },
        at: function(t) {
            return this.destination ? (t = 0 > t ? 0 : t > 1 ? 1 : t,
            new c.Color({
                r: ~~(this.r + (this.destination.r - this.r) * t),
                g: ~~(this.g + (this.destination.g - this.g) * t),
                b: ~~(this.b + (this.destination.b - this.b) * t)
            })) : this
        }
    }),
    c.Color.test = function(t) {
        return t += "",
        c.regex.isHex.test(t) || c.regex.isRgb.test(t)
    }
    ,
    c.Color.isRgb = function(t) {
        return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b
    }
    ,
    c.Color.isColor = function(t) {
        return c.Color.isRgb(t) || c.Color.test(t)
    }
    ,
    c.Array = function(t, e) {
        t = (t || []).valueOf(),
        0 == t.length && e && (t = e.valueOf()),
        this.value = this.parse(t)
    }
    ,
    c.extend(c.Array, {
        morph: function(t) {
            if (this.destination = this.parse(t),
            this.value.length != this.destination.length) {
                for (var e = this.value[this.value.length - 1], i = this.destination[this.destination.length - 1]; this.value.length > this.destination.length; )
                    this.destination.push(i);
                for (; this.value.length < this.destination.length; )
                    this.value.push(e)
            }
            return this
        },
        settle: function() {
            for (var t = 0, e = this.value.length, i = []; e > t; t++)
                -1 == i.indexOf(this.value[t]) && i.push(this.value[t]);
            return this.value = i
        },
        at: function(t) {
            if (!this.destination)
                return this;
            for (var e = 0, i = this.value.length, r = []; i > e; e++)
                r.push(this.value[e] + (this.destination[e] - this.value[e]) * t);
            return new c.Array(r)
        },
        toString: function() {
            return this.value.join(" ")
        },
        valueOf: function() {
            return this.value
        },
        parse: function(t) {
            return t = t.valueOf(),
            Array.isArray(t) ? t : this.split(t)
        },
        split: function(t) {
            return t.replace(/\s+/g, " ").replace(/^\s+|\s+$/g, "").split(" ")
        },
        reverse: function() {
            return this.value.reverse(),
            this
        }
    }),
    c.PointArray = function() {
        this.constructor.apply(this, arguments)
    }
    ,
    c.PointArray.prototype = new c.Array,
    c.extend(c.PointArray, {
        toString: function() {
            for (var t = 0, e = this.value.length, i = []; e > t; t++)
                i.push(this.value[t].join(","));
            return i.join(" ")
        },
        at: function(t) {
            if (!this.destination)
                return this;
            for (var e = 0, i = this.value.length, r = []; i > e; e++)
                r.push([this.value[e][0] + (this.destination[e][0] - this.value[e][0]) * t, this.value[e][1] + (this.destination[e][1] - this.value[e][1]) * t]);
            return new c.PointArray(r)
        },
        parse: function(t) {
            if (t = t.valueOf(),
            Array.isArray(t))
                return t;
            t = this.split(t);
            for (var e, i = 0, r = t.length, n = []; r > i; i++)
                e = t[i].split(","),
                n.push([parseFloat(e[0]), parseFloat(e[1])]);
            return n
        },
        move: function(t, e) {
            var i = this.bbox();
            if (t -= i.x,
            e -= i.y,
            !isNaN(t) && !isNaN(e))
                for (var r = this.value.length - 1; r >= 0; r--)
                    this.value[r] = [this.value[r][0] + t, this.value[r][1] + e];
            return this
        },
        size: function(t, e) {
            var i, r = this.bbox();
            for (i = this.value.length - 1; i >= 0; i--)
                this.value[i][0] = (this.value[i][0] - r.x) * t / r.width + r.x,
                this.value[i][1] = (this.value[i][1] - r.y) * e / r.height + r.y;
            return this
        },
        bbox: function() {
            return c.parser.poly.setAttribute("points", this.toString()),
            c.parser.poly.getBBox()
        }
    }),
    c.PathArray = function(t, e) {
        this.constructor.call(this, t, e)
    }
    ,
    c.PathArray.prototype = new c.Array,
    c.extend(c.PathArray, {
        toString: function() {
            return a(this.value)
        },
        move: function(t, e) {
            var i = this.bbox();
            if (t -= i.x,
            e -= i.y,
            !isNaN(t) && !isNaN(e))
                for (var r, n = this.value.length - 1; n >= 0; n--)
                    r = this.value[n][0],
                    "M" == r || "L" == r || "T" == r ? (this.value[n][1] += t,
                    this.value[n][2] += e) : "H" == r ? this.value[n][1] += t : "V" == r ? this.value[n][1] += e : "C" == r || "S" == r || "Q" == r ? (this.value[n][1] += t,
                    this.value[n][2] += e,
                    this.value[n][3] += t,
                    this.value[n][4] += e,
                    "C" == r && (this.value[n][5] += t,
                    this.value[n][6] += e)) : "A" == r && (this.value[n][6] += t,
                    this.value[n][7] += e);
            return this
        },
        size: function(t, e) {
            var i, r, n = this.bbox();
            for (i = this.value.length - 1; i >= 0; i--)
                r = this.value[i][0],
                "M" == r || "L" == r || "T" == r ? (this.value[i][1] = (this.value[i][1] - n.x) * t / n.width + n.x,
                this.value[i][2] = (this.value[i][2] - n.y) * e / n.height + n.y) : "H" == r ? this.value[i][1] = (this.value[i][1] - n.x) * t / n.width + n.x : "V" == r ? this.value[i][1] = (this.value[i][1] - n.y) * e / n.height + n.y : "C" == r || "S" == r || "Q" == r ? (this.value[i][1] = (this.value[i][1] - n.x) * t / n.width + n.x,
                this.value[i][2] = (this.value[i][2] - n.y) * e / n.height + n.y,
                this.value[i][3] = (this.value[i][3] - n.x) * t / n.width + n.x,
                this.value[i][4] = (this.value[i][4] - n.y) * e / n.height + n.y,
                "C" == r && (this.value[i][5] = (this.value[i][5] - n.x) * t / n.width + n.x,
                this.value[i][6] = (this.value[i][6] - n.y) * e / n.height + n.y)) : "A" == r && (this.value[i][1] = this.value[i][1] * t / n.width,
                this.value[i][2] = this.value[i][2] * e / n.height,
                this.value[i][6] = (this.value[i][6] - n.x) * t / n.width + n.x,
                this.value[i][7] = (this.value[i][7] - n.y) * e / n.height + n.y);
            return this
        },
        parse: function(t) {
            if (t instanceof c.PathArray)
                return t.valueOf();
            var e, i, r, n, o, s, l, h, u, p, d, f = 0, m = 0;
            for (c.parser.path.setAttribute("d", "string" == typeof t ? t : a(t)),
            d = c.parser.path.pathSegList,
            e = 0,
            i = d.numberOfItems; i > e; ++e)
                p = d.getItem(e),
                u = p.pathSegTypeAsLetter,
                "M" == u || "L" == u || "H" == u || "V" == u || "C" == u || "S" == u || "Q" == u || "T" == u || "A" == u ? ("x" in p && (f = p.x),
                "y" in p && (m = p.y)) : ("x1" in p && (o = f + p.x1),
                "x2" in p && (l = f + p.x2),
                "y1" in p && (s = m + p.y1),
                "y2" in p && (h = m + p.y2),
                "x" in p && (f += p.x),
                "y" in p && (m += p.y),
                "m" == u ? d.replaceItem(c.parser.path.createSVGPathSegMovetoAbs(f, m), e) : "l" == u ? d.replaceItem(c.parser.path.createSVGPathSegLinetoAbs(f, m), e) : "h" == u ? d.replaceItem(c.parser.path.createSVGPathSegLinetoHorizontalAbs(f), e) : "v" == u ? d.replaceItem(c.parser.path.createSVGPathSegLinetoVerticalAbs(m), e) : "c" == u ? d.replaceItem(c.parser.path.createSVGPathSegCurvetoCubicAbs(f, m, o, s, l, h), e) : "s" == u ? d.replaceItem(c.parser.path.createSVGPathSegCurvetoCubicSmoothAbs(f, m, l, h), e) : "q" == u ? d.replaceItem(c.parser.path.createSVGPathSegCurvetoQuadraticAbs(f, m, o, s), e) : "t" == u ? d.replaceItem(c.parser.path.createSVGPathSegCurvetoQuadraticSmoothAbs(f, m), e) : "a" == u ? d.replaceItem(c.parser.path.createSVGPathSegArcAbs(f, m, p.r1, p.r2, p.angle, p.largeArcFlag, p.sweepFlag), e) : ("z" == u || "Z" == u) && (f = r,
                m = n)),
                ("M" == u || "m" == u) && (r = f,
                n = m);
            for (t = [],
            d = c.parser.path.pathSegList,
            e = 0,
            i = d.numberOfItems; i > e; ++e)
                p = d.getItem(e),
                u = p.pathSegTypeAsLetter,
                f = [u],
                "M" == u || "L" == u || "T" == u ? f.push(p.x, p.y) : "H" == u ? f.push(p.x) : "V" == u ? f.push(p.y) : "C" == u ? f.push(p.x1, p.y1, p.x2, p.y2, p.x, p.y) : "S" == u ? f.push(p.x2, p.y2, p.x, p.y) : "Q" == u ? f.push(p.x1, p.y1, p.x, p.y) : "A" == u && f.push(p.r1, p.r2, p.angle, 0 | p.largeArcFlag, 0 | p.sweepFlag, p.x, p.y),
                t.push(f);
            return t
        },
        bbox: function() {
            return c.parser.path.setAttribute("d", this.toString()),
            c.parser.path.getBBox()
        }
    }),
    c.Number = function(t) {
        if (this.value = 0,
        this.unit = "",
        "number" == typeof t)
            this.value = isNaN(t) ? 0 : isFinite(t) ? t : 0 > t ? -3.4e38 : 3.4e38;
        else if ("string" == typeof t) {
            var e = t.match(c.regex.unit);
            e && (this.value = parseFloat(e[1]),
            "%" == e[2] ? this.value /= 100 : "s" == e[2] && (this.value *= 1e3),
            this.unit = e[2])
        } else
            t instanceof c.Number && (this.value = t.value,
            this.unit = t.unit)
    }
    ,
    c.extend(c.Number, {
        toString: function() {
            return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
        },
        valueOf: function() {
            return this.value
        },
        plus: function(t) {
            return this.value = this + new c.Number(t),
            this
        },
        minus: function(t) {
            return this.plus(-new c.Number(t))
        },
        times: function(t) {
            return this.value = this * new c.Number(t),
            this
        },
        divide: function(t) {
            return this.value = this / new c.Number(t),
            this
        },
        to: function(t) {
            return "string" == typeof t && (this.unit = t),
            this
        },
        morph: function(t) {
            return this.destination = new c.Number(t),
            this
        },
        at: function(t) {
            return this.destination ? new c.Number(this.destination).minus(this).times(t).plus(this) : this
        }
    }),
    c.ViewBox = function(t) {
        var e, i, r, n, o = 1, a = 1, s = t.bbox(), l = (t.attr("viewBox") || "").match(/-?[\d\.]+/g), h = t, u = t;
        for (r = new c.Number(t.width()),
        n = new c.Number(t.height()); "%" == r.unit; )
            o *= r.value,
            r = new c.Number(h instanceof c.Doc ? h.parent.offsetWidth : h.parent.width()),
            h = h.parent;
        for (; "%" == n.unit; )
            a *= n.value,
            n = new c.Number(u instanceof c.Doc ? u.parent.offsetHeight : u.parent.height()),
            u = u.parent;
        this.x = s.x,
        this.y = s.y,
        this.width = r * o,
        this.height = n * a,
        this.zoom = 1,
        l && (e = parseFloat(l[0]),
        i = parseFloat(l[1]),
        r = parseFloat(l[2]),
        n = parseFloat(l[3]),
        this.zoom = this.width / this.height > r / n ? this.height / n : this.width / r,
        this.x = e,
        this.y = i,
        this.width = r,
        this.height = n)
    }
    ,
    c.extend(c.ViewBox, {
        toString: function() {
            return this.x + " " + this.y + " " + this.width + " " + this.height
        }
    }),
    c.BBox = function(t) {
        var e;
        if (this.x = 0,
        this.y = 0,
        this.width = 0,
        this.height = 0,
        t) {
            try {
                e = t.node.getBBox()
            } catch (i) {
                e = {
                    x: t.node.clientLeft,
                    y: t.node.clientTop,
                    width: t.node.clientWidth,
                    height: t.node.clientHeight
                }
            }
            this.x = e.x + t.trans.x,
            this.y = e.y + t.trans.y,
            this.width = e.width * t.trans.scaleX,
            this.height = e.height * t.trans.scaleY
        }
        s(this)
    }
    ,
    c.extend(c.BBox, {
        merge: function(t) {
            var e = new c.BBox;
            return e.x = Math.min(this.x, t.x),
            e.y = Math.min(this.y, t.y),
            e.width = Math.max(this.x + this.width, t.x + t.width) - e.x,
            e.height = Math.max(this.y + this.height, t.y + t.height) - e.y,
            s(e),
            e
        }
    }),
    c.RBox = function(t) {
        var e, i, r = {};
        if (this.x = 0,
        this.y = 0,
        this.width = 0,
        this.height = 0,
        t) {
            for (e = t.doc().parent,
            i = t.doc().viewbox().zoom,
            r = t.node.getBoundingClientRect(),
            this.x = r.left,
            this.y = r.top,
            this.x -= e.offsetLeft,
            this.y -= e.offsetTop; e = e.offsetParent; )
                this.x -= e.offsetLeft,
                this.y -= e.offsetTop;
            for (e = t; e = e.parent; )
                "svg" == e.type && e.viewbox && (i *= e.viewbox().zoom,
                this.x -= e.x() || 0,
                this.y -= e.y() || 0)
        }
        this.x /= i,
        this.y /= i,
        this.width = r.width /= i,
        this.height = r.height /= i,
        this.x += "number" == typeof window.scrollX ? window.scrollX : window.pageXOffset,
        this.y += "number" == typeof window.scrollY ? window.scrollY : window.pageYOffset,
        s(this)
    }
    ,
    c.extend(c.RBox, {
        merge: function(t) {
            var e = new c.RBox;
            return e.x = Math.min(this.x, t.x),
            e.y = Math.min(this.y, t.y),
            e.width = Math.max(this.x + this.width, t.x + t.width) - e.x,
            e.height = Math.max(this.y + this.height, t.y + t.height) - e.y,
            s(e),
            e
        }
    }),
    c.Element = c.invent({
        create: function(t) {
            this._stroke = c.defaults.attrs.stroke,
            this.trans = c.defaults.trans(),
            (this.node = t) && (this.type = t.nodeName,
            this.node.instance = this)
        },
        extend: {
            x: function(t) {
                return null  != t && (t = new c.Number(t),
                t.value /= this.trans.scaleX),
                this.attr("x", t)
            },
            y: function(t) {
                return null  != t && (t = new c.Number(t),
                t.value /= this.trans.scaleY),
                this.attr("y", t)
            },
            cx: function(t) {
                return null  == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2)
            },
            cy: function(t) {
                return null  == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2)
            },
            move: function(t, e) {
                return this.x(t).y(e)
            },
            center: function(t, e) {
                return this.cx(t).cy(e)
            },
            width: function(t) {
                return this.attr("width", t)
            },
            height: function(t) {
                return this.attr("height", t)
            },
            size: function(t, e) {
                var i = n(this.bbox(), t, e);
                return this.width(new c.Number(i.width)).height(new c.Number(i.height))
            },
            clone: function() {
                var t, e, i = this.type;
                return t = "rect" == i || "ellipse" == i ? this.parent[i](0, 0) : "line" == i ? this.parent[i](0, 0, 0, 0) : "image" == i ? this.parent[i](this.src) : "text" == i ? this.parent[i](this.content) : "path" == i ? this.parent[i](this.attr("d")) : "polyline" == i || "polygon" == i ? this.parent[i](this.attr("points")) : "g" == i ? this.parent.group() : this.parent[i](),
                e = this.attr(),
                delete e.id,
                t.attr(e),
                t.trans = this.trans,
                t.transform({})
            },
            remove: function() {
                return this.parent && this.parent.removeElement(this),
                this
            },
            replace: function(t) {
                return this.after(t).remove(),
                t
            },
            addTo: function(t) {
                return t.put(this)
            },
            putIn: function(t) {
                return t.add(this)
            },
            doc: function(t) {
                return this._parent(t || c.Doc)
            },
            attr: function(t, e, i) {
                if (null  == t) {
                    for (t = {},
                    e = this.node.attributes,
                    i = e.length - 1; i >= 0; i--)
                        t[e[i].nodeName] = c.regex.isNumber.test(e[i].nodeValue) ? parseFloat(e[i].nodeValue) : e[i].nodeValue;
                    return t
                }
                if ("object" == typeof t)
                    for (e in t)
                        this.attr(e, t[e]);
                else if (null  === e)
                    this.node.removeAttribute(t);
                else {
                    if (null  == e)
                        return e = this.node.attributes[t],
                        null  == e ? c.defaults.attrs[t] : c.regex.isNumber.test(e.nodeValue) ? parseFloat(e.nodeValue) : e.nodeValue;
                    if ("style" == t)
                        return this.style(e);
                    "stroke-width" == t ? this.attr("stroke", parseFloat(e) > 0 ? this._stroke : null ) : "stroke" == t && (this._stroke = e),
                    ("fill" == t || "stroke" == t) && (c.regex.isImage.test(e) && (e = this.doc().defs().image(e, 0, 0)),
                    e instanceof c.Image && (e = this.doc().defs().pattern(0, 0, function() {
                        this.add(e)
                    }
                    ))),
                    "number" == typeof e ? e = new c.Number(e) : c.Color.isColor(e) ? e = new c.Color(e) : Array.isArray(e) && (e = new c.Array(e)),
                    "leading" == t ? this.leading && this.leading(e) : "string" == typeof i ? this.node.setAttributeNS(i, t, e.toString()) : this.node.setAttribute(t, e.toString()),
                    !this.rebuild || "font-size" != t && "x" != t || this.rebuild(t, e)
                }
                return this
            },
            transform: function(t, e) {
                if (0 == arguments.length)
                    return this.trans;
                if ("string" == typeof t) {
                    if (arguments.length < 2)
                        return this.trans[t];
                    var i = {};
                    return i[t] = e,
                    this.transform(i)
                }
                var i = [];
                t = l(t);
                for (e in t)
                    null  != t[e] && (this.trans[e] = t[e]);
                return this.trans.matrix = this.trans.a + " " + this.trans.b + " " + this.trans.c + " " + this.trans.d + " " + this.trans.e + " " + this.trans.f,
                t = this.trans,
                t.matrix != c.defaults.matrix && i.push("matrix(" + t.matrix + ")"),
                0 != t.rotation && i.push("rotate(" + t.rotation + " " + (null  == t.cx ? this.bbox().cx : t.cx) + " " + (null  == t.cy ? this.bbox().cy : t.cy) + ")"),
                (1 != t.scaleX || 1 != t.scaleY) && i.push("scale(" + t.scaleX + " " + t.scaleY + ")"),
                0 != t.skewX && i.push("skewX(" + t.skewX + ")"),
                0 != t.skewY && i.push("skewY(" + t.skewY + ")"),
                (0 != t.x || 0 != t.y) && i.push("translate(" + new c.Number(t.x / t.scaleX) + " " + new c.Number(t.y / t.scaleY) + ")"),
                0 == i.length ? this.node.removeAttribute("transform") : this.node.setAttribute("transform", i.join(" ")),
                this
            },
            style: function(t, i) {
                if (0 == arguments.length)
                    return this.node.style.cssText || "";
                if (arguments.length < 2)
                    if ("object" == typeof t)
                        for (i in t)
                            this.style(i, t[i]);
                    else {
                        if (!c.regex.isCss.test(t))
                            return this.node.style[e(t)];
                        t = t.split(";");
                        for (var r = 0; r < t.length; r++)
                            i = t[r].split(":"),
                            this.style(i[0].replace(/\s+/g, ""), i[1])
                    }
                else
                    this.node.style[e(t)] = null  === i || c.regex.isBlank.test(i) ? "" : i;
                return this
            },
            id: function(t) {
                return this.attr("id", t)
            },
            bbox: function() {
                return new c.BBox(this)
            },
            rbox: function() {
                return new c.RBox(this)
            },
            inside: function(t, e) {
                var i = this.bbox();
                return t > i.x && e > i.y && t < i.x + i.width && e < i.y + i.height
            },
            show: function() {
                return this.style("display", "")
            },
            hide: function() {
                return this.style("display", "none")
            },
            visible: function() {
                return "none" != this.style("display")
            },
            toString: function() {
                return this.attr("id")
            },
            classes: function() {
                var t = this.node.getAttribute("class");
                return null  === t ? [] : t.trim().split(/\s+/)
            },
            hasClass: function(t) {
                return -1 != this.classes().indexOf(t)
            },
            addClass: function(t) {
                var e;
                return this.hasClass(t) || (e = this.classes(),
                e.push(t),
                this.node.setAttribute("class", e.join(" "))),
                this
            },
            removeClass: function(t) {
                var e;
                return this.hasClass(t) && (e = this.classes().filter(function(e) {
                    return e != t
                }
                ),
                this.node.setAttribute("class", e.join(" "))),
                this
            },
            toggleClass: function(t) {
                return this.hasClass(t) ? this.removeClass(t) : this.addClass(t),
                this
            },
            reference: function(t) {
                return c.get(this.attr()[t])
            },
            _parent: function(t) {
                for (var e = this; null  != e && !(e instanceof t); )
                    e = e.parent;
                return e
            }
        }
    }),
    c.Parent = c.invent({
        create: function(t) {
            this.constructor.call(this, t)
        },
        inherit: c.Element,
        extend: {
            children: function() {
                return this._children || (this._children = [])
            },
            add: function(t, e) {
                return this.has(t) || (e = null  == e ? this.children().length : e,
                t.parent && t.parent.children().splice(t.parent.index(t), 1),
                this.children().splice(e, 0, t),
                this.node.insertBefore(t.node, this.node.childNodes[e] || null ),
                t.parent = this),
                this._defs && (this.node.removeChild(this._defs.node),
                this.node.appendChild(this._defs.node)),
                this
            },
            put: function(t, e) {
                return this.add(t, e),
                t
            },
            has: function(t) {
                return this.index(t) >= 0
            },
            index: function(t) {
                return this.children().indexOf(t)
            },
            get: function(t) {
                return this.children()[t]
            },
            first: function() {
                return this.children()[0]
            },
            last: function() {
                return this.children()[this.children().length - 1]
            },
            each: function(t, e) {
                var i, r, n = this.children();
                for (i = 0,
                r = n.length; r > i; i++)
                    n[i] instanceof c.Element && t.apply(n[i], [i, n]),
                    e && n[i] instanceof c.Container && n[i].each(t, e);
                return this
            },
            removeElement: function(t) {
                return this.children().splice(this.index(t), 1),
                this.node.removeChild(t.node),
                t.parent = null ,
                this
            },
            clear: function() {
                for (var t = this.children().length - 1; t >= 0; t--)
                    this.removeElement(this.children()[t]);
                return this._defs && this._defs.clear(),
                this
            },
            defs: function() {
                return this.doc().defs()
            }
        }
    }),
    c.Container = c.invent({
        create: function(t) {
            this.constructor.call(this, t)
        },
        inherit: c.Parent,
        extend: {
            viewbox: function(t) {
                return 0 == arguments.length ? new c.ViewBox(this) : (t = 1 == arguments.length ? [t.x, t.y, t.width, t.height] : [].slice.call(arguments),
                this.attr("viewBox", t))
            }
        }
    }),
    c.FX = c.invent({
        create: function(t) {
            this.target = t
        },
        extend: {
            animate: function(t, e, i) {
                var r, n, a, s, l = this.target, h = this;
                return "object" == typeof t && (i = t.delay,
                e = t.ease,
                t = t.duration),
                t = "=" == t ? t : null  == t ? 1e3 : new c.Number(t).valueOf(),
                e = e || "<>",
                h.to = function(t) {
                    var i;
                    if (t = 0 > t ? 0 : t > 1 ? 1 : t,
                    null  == r) {
                        r = [];
                        for (s in h.attrs)
                            r.push(s);
                        if (l.morphArray && (h._plot || r.indexOf("points") > -1)) {
                            var c, u = new l.morphArray(h._plot || h.attrs.points || l.array);
                            h._size && u.size(h._size.width.to, h._size.height.to),
                            c = u.bbox(),
                            h._x ? u.move(h._x.to, c.y) : h._cx && u.move(h._cx.to - c.width / 2, c.y),
                            c = u.bbox(),
                            h._y ? u.move(c.x, h._y.to) : h._cy && u.move(c.x, h._cy.to - c.height / 2),
                            delete h._x,
                            delete h._y,
                            delete h._cx,
                            delete h._cy,
                            delete h._size,
                            h._plot = l.array.morph(u)
                        }
                    }
                    if (null  == n) {
                        n = [];
                        for (s in h.trans)
                            n.push(s)
                    }
                    if (null  == a) {
                        a = [];
                        for (s in h.styles)
                            a.push(s)
                    }
                    for (t = "<>" == e ? -Math.cos(t * Math.PI) / 2 + .5 : ">" == e ? Math.sin(t * Math.PI / 2) : "<" == e ? -Math.cos(t * Math.PI / 2) + 1 : "-" == e ? t : "function" == typeof e ? e(t) : t,
                    h._plot ? l.plot(h._plot.at(t)) : (h._x ? l.x(h._x.at(t)) : h._cx && l.cx(h._cx.at(t)),
                    h._y ? l.y(h._y.at(t)) : h._cy && l.cy(h._cy.at(t)),
                    h._size && l.size(h._size.width.at(t), h._size.height.at(t))),
                    h._viewbox && l.viewbox(h._viewbox.x.at(t), h._viewbox.y.at(t), h._viewbox.width.at(t), h._viewbox.height.at(t)),
                    h._leading && l.leading(h._leading.at(t)),
                    i = r.length - 1; i >= 0; i--)
                        l.attr(r[i], o(h.attrs[r[i]], t));
                    for (i = n.length - 1; i >= 0; i--)
                        l.transform(n[i], o(h.trans[n[i]], t));
                    for (i = a.length - 1; i >= 0; i--)
                        l.style(a[i], o(h.styles[a[i]], t));
                    h._during && h._during.call(l, t, function(e, i) {
                        return o({
                            from: e,
                            to: i
                        }, t)
                    }
                    )
                }
                ,
                "number" == typeof t && (this.timeout = setTimeout(function() {
                    var r = (new Date).getTime();
                    h.situation = {
                        interval: 1e3 / 60,
                        start: r,
                        play: !0,
                        finish: r + t,
                        duration: t
                    },
                    h.render = function() {
                        if (h.situation.play === !0) {
                            var r = (new Date).getTime()
                              , n = r > h.situation.finish ? 1 : (r - h.situation.start) / t;
                            h.to(n),
                            r > h.situation.finish ? (h._plot && l.plot(new c.PointArray(h._plot.destination).settle()),
                            h._loop === !0 || "number" == typeof h._loop && h._loop > 1 ? ("number" == typeof h._loop && --h._loop,
                            h.animate(t, e, i)) : h._after ? h._after.apply(l, [h]) : h.stop()) : h.animationFrame = requestAnimationFrame(h.render);
                        } else
                            h.animationFrame = requestAnimationFrame(h.render)
                    }
                    ,
                    h.render()
                }
                , new c.Number(i).valueOf())),
                this
            },
            bbox: function() {
                return this.target.bbox()
            },
            attr: function(t, e) {
                if ("object" == typeof t)
                    for (var i in t)
                        this.attr(i, t[i]);
                else {
                    var r = this.target.attr(t);
                    this.attrs[t] = c.Color.isColor(r) ? new c.Color(r).morph(e) : c.regex.unit.test(r) ? new c.Number(r).morph(e) : {
                        from: r,
                        to: e
                    }
                }
                return this
            },
            transform: function(t, e) {
                if (1 == arguments.length) {
                    t = l(t),
                    delete t.matrix,
                    this.target.trans.cx = t.cx || null ,
                    this.target.trans.cy = t.cy || null ,
                    delete t.cx,
                    delete t.cy;
                    for (e in t)
                        this.trans[e] = {
                            from: this.target.trans[e],
                            to: t[e]
                        }
                } else {
                    var i = {};
                    i[t] = e,
                    this.transform(i)
                }
                return this
            },
            style: function(t, e) {
                if ("object" == typeof t)
                    for (var i in t)
                        this.style(i, t[i]);
                else
                    this.styles[t] = {
                        from: this.target.style(t),
                        to: e
                    };
                return this
            },
            x: function(t) {
                return this._x = new c.Number(this.target.x()).morph(t),
                this
            },
            y: function(t) {
                return this._y = new c.Number(this.target.y()).morph(t),
                this
            },
            cx: function(t) {
                return this._cx = new c.Number(this.target.cx()).morph(t),
                this
            },
            cy: function(t) {
                return this._cy = new c.Number(this.target.cy()).morph(t),
                this
            },
            move: function(t, e) {
                return this.x(t).y(e)
            },
            center: function(t, e) {
                return this.cx(t).cy(e)
            },
            size: function(t, e) {
                if (this.target instanceof c.Text)
                    this.attr("font-size", t);
                else {
                    var i = this.target.bbox();
                    this._size = {
                        width: new c.Number(i.width).morph(t),
                        height: new c.Number(i.height).morph(e)
                    }
                }
                return this
            },
            plot: function(t) {
                return this._plot = t,
                this
            },
            leading: function(t) {
                return this.target._leading && (this._leading = new c.Number(this.target._leading).morph(t)),
                this
            },
            viewbox: function(t, e, i, r) {
                if (this.target instanceof c.Container) {
                    var n = this.target.viewbox();
                    this._viewbox = {
                        x: new c.Number(n.x).morph(t),
                        y: new c.Number(n.y).morph(e),
                        width: new c.Number(n.width).morph(i),
                        height: new c.Number(n.height).morph(r)
                    }
                }
                return this
            },
            update: function(t) {
                return this.target instanceof c.Stop && (null  != t.opacity && this.attr("stop-opacity", t.opacity),
                null  != t.color && this.attr("stop-color", t.color),
                null  != t.offset && this.attr("offset", new c.Number(t.offset))),
                this
            },
            during: function(t) {
                return this._during = t,
                this
            },
            after: function(t) {
                return this._after = t,
                this
            },
            loop: function(t) {
                return this._loop = t || !0,
                this
            },
            stop: function(t) {
                return t === !0 ? (this.animate(0),
                this._after && this._after.apply(this.target, [this])) : (clearTimeout(this.timeout),
                cancelAnimationFrame(this.animationFrame),
                this.attrs = {},
                this.trans = {},
                this.styles = {},
                this.situation = {},
                delete this._x,
                delete this._y,
                delete this._cx,
                delete this._cy,
                delete this._size,
                delete this._plot,
                delete this._loop,
                delete this._after,
                delete this._during,
                delete this._leading,
                delete this._viewbox),
                this
            },
            pause: function() {
                return this.situation.play === !0 && (this.situation.play = !1,
                this.situation.pause = (new Date).getTime()),
                this
            },
            play: function() {
                if (this.situation.play === !1) {
                    var t = (new Date).getTime() - this.situation.pause;
                    this.situation.finish += t,
                    this.situation.start += t,
                    this.situation.play = !0
                }
                return this
            }
        },
        parent: c.Element,
        construct: {
            animate: function(t, e, i) {
                return (this.fx || (this.fx = new c.FX(this))).stop().animate(t, e, i)
            },
            stop: function(t) {
                return this.fx && this.fx.stop(t),
                this
            },
            pause: function() {
                return this.fx && this.fx.pause(),
                this
            },
            play: function() {
                return this.fx && this.fx.play(),
                this
            }
        }
    }),
    c.extend(c.Element, c.FX, {
        dx: function(t) {
            return this.x((this.target || this).x() + t)
        },
        dy: function(t) {
            return this.y((this.target || this).y() + t)
        },
        dmove: function(t, e) {
            return this.dx(t).dy(e)
        }
    }),
    ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(t) {
        c.Element.prototype[t] = function(e) {
            var i = this;
            return this.node["on" + t] = "function" == typeof e ? function() {
                return e.apply(i, arguments)
            }
             : null ,
            this
        }
    }
    ),
    c.listeners = [],
    c.handlerMap = [],
    c.registerEvent = function() {}
    ,
    c.on = function(t, e, i) {
        var r = i.bind(t.instance || t)
          , n = (c.handlerMap.indexOf(t) + 1 || c.handlerMap.push(t)) - 1
          , o = e.split(".")[0]
          , a = e.split(".")[1] || "*";
        c.listeners[n] = c.listeners[n] || {},
        c.listeners[n][o] = c.listeners[n][o] || {},
        c.listeners[n][o][a] = c.listeners[n][o][a] || {},
        c.listeners[n][o][a][i] = r,
        t.addEventListener(o, r, !1)
    }
    ,
    c.off = function(t, e, i) {
        var r = c.handlerMap.indexOf(t)
          , n = e && e.split(".")[0]
          , o = e && e.split(".")[1];
        if (-1 != r)
            if (i)
                c.listeners[r][n] && c.listeners[r][n][o || "*"] && (t.removeEventListener(n, c.listeners[r][n][o || "*"][i], !1),
                delete c.listeners[r][n][o || "*"][i]);
            else if (o) {
                if (c.listeners[r][n] && c.listeners[r][n][o]) {
                    for (i in c.listeners[r][n][o])
                        c.off(t, [n, o].join("."), i);
                    delete c.listeners[r][n][o]
                }
            } else if (n) {
                if (c.listeners[r][n]) {
                    for (namespace in c.listeners[r][n])
                        c.off(t, [n, namespace].join("."));
                    delete c.listeners[r][n]
                }
            } else {
                for (e in c.listeners[r])
                    c.off(t, e);
                delete c.listeners[r]
            }
    }
    ,
    c.extend(c.Element, {
        on: function(t, e) {
            return c.on(this.node, t, e),
            this
        },
        off: function(t, e) {
            return c.off(this.node, t, e),
            this
        },
        fire: function(e, i) {
            return this.node.dispatchEvent(new t(e,{
                detail: i
            })),
            this
        }
    }),
    c.Defs = c.invent({
        create: "defs",
        inherit: c.Container
    }),
    c.G = c.invent({
        create: "g",
        inherit: c.Container,
        extend: {
            x: function(t) {
                return null  == t ? this.trans.x : this.transform("x", t)
            },
            y: function(t) {
                return null  == t ? this.trans.y : this.transform("y", t)
            },
            cx: function(t) {
                return null  == t ? this.bbox().cx : this.x(t - this.bbox().width / 2)
            },
            cy: function(t) {
                return null  == t ? this.bbox().cy : this.y(t - this.bbox().height / 2)
            }
        },
        construct: {
            group: function() {
                return this.put(new c.G)
            }
        }
    }),
    c.extend(c.Element, {
        siblings: function() {
            return this.parent.children()
        },
        position: function() {
            return this.parent.index(this)
        },
        next: function() {
            return this.siblings()[this.position() + 1]
        },
        previous: function() {
            return this.siblings()[this.position() - 1]
        },
        forward: function() {
            var t = this.position();
            return this.parent.removeElement(this).put(this, t + 1)
        },
        backward: function() {
            var t = this.position();
            return t > 0 && this.parent.removeElement(this).add(this, t - 1),
            this
        },
        front: function() {
            return this.parent.removeElement(this).put(this)
        },
        back: function() {
            return this.position() > 0 && this.parent.removeElement(this).add(this, 0),
            this
        },
        before: function(t) {
            t.remove();
            var e = this.position();
            return this.parent.add(t, e),
            this
        },
        after: function(t) {
            t.remove();
            var e = this.position();
            return this.parent.add(t, e + 1),
            this
        }
    }),
    c.Mask = c.invent({
        create: function() {
            this.constructor.call(this, c.create("mask")),
            this.targets = []
        },
        inherit: c.Container,
        extend: {
            remove: function() {
                for (var t = this.targets.length - 1; t >= 0; t--)
                    this.targets[t] && this.targets[t].unmask();
                return delete this.targets,
                this.parent.removeElement(this),
                this
            }
        },
        construct: {
            mask: function() {
                return this.defs().put(new c.Mask)
            }
        }
    }),
    c.extend(c.Element, {
        maskWith: function(t) {
            return this.masker = t instanceof c.Mask ? t : this.parent.mask().add(t),
            this.masker.targets.push(this),
            this.attr("mask", 'url("#' + this.masker.attr("id") + '")')
        },
        unmask: function() {
            return delete this.masker,
            this.attr("mask", null )
        }
    }),
    c.Clip = c.invent({
        create: function() {
            this.constructor.call(this, c.create("clipPath")),
            this.targets = []
        },
        inherit: c.Container,
        extend: {
            remove: function() {
                for (var t = this.targets.length - 1; t >= 0; t--)
                    this.targets[t] && this.targets[t].unclip();
                return delete this.targets,
                this.parent.removeElement(this),
                this
            }
        },
        construct: {
            clip: function() {
                return this.defs().put(new c.Clip)
            }
        }
    }),
    c.extend(c.Element, {
        clipWith: function(t) {
            return this.clipper = t instanceof c.Clip ? t : this.parent.clip().add(t),
            this.clipper.targets.push(this),
            this.attr("clip-path", 'url("#' + this.clipper.attr("id") + '")')
        },
        unclip: function() {
            return delete this.clipper,
            this.attr("clip-path", null )
        }
    }),
    c.Gradient = c.invent({
        create: function(t) {
            this.constructor.call(this, c.create(t + "Gradient")),
            this.type = t
        },
        inherit: c.Container,
        extend: {
            from: function(t, e) {
                return this.attr("radial" == this.type ? {
                    fx: new c.Number(t),
                    fy: new c.Number(e)
                } : {
                    x1: new c.Number(t),
                    y1: new c.Number(e)
                })
            },
            to: function(t, e) {
                return this.attr("radial" == this.type ? {
                    cx: new c.Number(t),
                    cy: new c.Number(e)
                } : {
                    x2: new c.Number(t),
                    y2: new c.Number(e)
                })
            },
            radius: function(t) {
                return "radial" == this.type ? this.attr({
                    r: new c.Number(t)
                }) : this
            },
            at: function(t, e, i) {
                return this.put(new c.Stop).update(t, e, i)
            },
            update: function(t) {
                return this.clear(),
                "function" == typeof t && t.call(this, this),
                this
            },
            fill: function() {
                return "url(#" + this.id() + ")"
            },
            toString: function() {
                return this.fill()
            }
        },
        construct: {
            gradient: function(t, e) {
                return this.defs().gradient(t, e)
            }
        }
    }),
    c.extend(c.Defs, {
        gradient: function(t, e) {
            return this.put(new c.Gradient(t)).update(e)
        }
    }),
    c.Stop = c.invent({
        create: "stop",
        inherit: c.Element,
        extend: {
            update: function(t) {
                return ("number" == typeof t || t instanceof c.Number) && (t = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2]
                }),
                null  != t.opacity && this.attr("stop-opacity", t.opacity),
                null  != t.color && this.attr("stop-color", t.color),
                null  != t.offset && this.attr("offset", new c.Number(t.offset)),
                this
            }
        }
    }),
    c.Pattern = c.invent({
        create: "pattern",
        inherit: c.Container,
        extend: {
            fill: function() {
                return "url(#" + this.id() + ")"
            },
            update: function(t) {
                return this.clear(),
                "function" == typeof t && t.call(this, this),
                this
            },
            toString: function() {
                return this.fill()
            }
        },
        construct: {
            pattern: function(t, e, i) {
                return this.defs().pattern(t, e, i)
            }
        }
    }),
    c.extend(c.Defs, {
        pattern: function(t, e, i) {
            return this.put(new c.Pattern).update(i).attr({
                x: 0,
                y: 0,
                width: t,
                height: e,
                patternUnits: "userSpaceOnUse"
            })
        }
    }),
    c.Doc = c.invent({
        create: function(t) {
            this.parent = "string" == typeof t ? document.getElementById(t) : t,
            this.constructor.call(this, "svg" == this.parent.nodeName ? this.parent : c.create("svg")),
            this.attr({
                xmlns: c.ns,
                version: "1.1",
                width: "100%",
                height: "100%"
            }).attr("xmlns:xlink", c.xlink, c.xmlns),
            this._defs = new c.Defs,
            this._defs.parent = this,
            this.node.appendChild(this._defs.node),
            this.doSpof = !1,
            this.parent != this.node && this.stage()
        },
        inherit: c.Container,
        extend: {
            stage: function() {
                var t = this;
                return this.parent.appendChild(this.node),
                t.spof(),
                c.on(window, "resize", function() {
                    t.spof()
                }
                ),
                this
            },
            defs: function() {
                return this._defs
            },
            spof: function() {
                if (this.doSpof) {
                    var t = this.node.getScreenCTM();
                    t && this.style("left", -t.e % 1 + "px").style("top", -t.f % 1 + "px")
                }
                return this
            },
            fixSubPixelOffset: function() {
                return this.doSpof = !0,
                this
            },
            remove: function() {
                return this.parent && (this.parent.removeChild(this.node),
                this.parent = null ),
                this
            }
        }
    }),
    c.Shape = c.invent({
        create: function(t) {
            this.constructor.call(this, t)
        },
        inherit: c.Element
    }),
    c.Symbol = c.invent({
        create: "symbol",
        inherit: c.Container,
        construct: {
            symbol: function() {
                return this.defs().put(new c.Symbol)
            }
        }
    }),
    c.Use = c.invent({
        create: "use",
        inherit: c.Shape,
        extend: {
            element: function(t) {
                return this.target = t,
                this.attr("href", "#" + t, c.xlink)
            }
        },
        construct: {
            use: function(t) {
                return this.put(new c.Use).element(t)
            }
        }
    }),
    c.Rect = c.invent({
        create: "rect",
        inherit: c.Shape,
        construct: {
            rect: function(t, e) {
                return this.put((new c.Rect).size(t, e))
            }
        }
    }),
    c.Ellipse = c.invent({
        create: "ellipse",
        inherit: c.Shape,
        extend: {
            x: function(t) {
                return null  == t ? this.cx() - this.attr("rx") : this.cx(t + this.attr("rx"))
            },
            y: function(t) {
                return null  == t ? this.cy() - this.attr("ry") : this.cy(t + this.attr("ry"))
            },
            cx: function(t) {
                return null  == t ? this.attr("cx") : this.attr("cx", new c.Number(t).divide(this.trans.scaleX))
            },
            cy: function(t) {
                return null  == t ? this.attr("cy") : this.attr("cy", new c.Number(t).divide(this.trans.scaleY))
            },
            width: function(t) {
                return null  == t ? 2 * this.attr("rx") : this.attr("rx", new c.Number(t).divide(2))
            },
            height: function(t) {
                return null  == t ? 2 * this.attr("ry") : this.attr("ry", new c.Number(t).divide(2))
            },
            size: function(t, e) {
                var i = n(this.bbox(), t, e);
                return this.attr({
                    rx: new c.Number(i.width).divide(2),
                    ry: new c.Number(i.height).divide(2)
                })
            }
        },
        construct: {
            circle: function(t) {
                return this.ellipse(t, t)
            },
            ellipse: function(t, e) {
                return this.put(new c.Ellipse).size(t, e).move(0, 0)
            }
        }
    }),
    c.Line = c.invent({
        create: "line",
        inherit: c.Shape,
        extend: {
            x: function(t) {
                var e = this.bbox();
                return null  == t ? e.x : this.attr({
                    x1: this.attr("x1") - e.x + t,
                    x2: this.attr("x2") - e.x + t
                })
            },
            y: function(t) {
                var e = this.bbox();
                return null  == t ? e.y : this.attr({
                    y1: this.attr("y1") - e.y + t,
                    y2: this.attr("y2") - e.y + t
                })
            },
            cx: function(t) {
                var e = this.bbox().width / 2;
                return null  == t ? this.x() + e : this.x(t - e)
            },
            cy: function(t) {
                var e = this.bbox().height / 2;
                return null  == t ? this.y() + e : this.y(t - e)
            },
            width: function(t) {
                var e = this.bbox();
                return null  == t ? e.width : this.attr(this.attr("x1") < this.attr("x2") ? "x2" : "x1", e.x + t)
            },
            height: function(t) {
                var e = this.bbox();
                return null  == t ? e.height : this.attr(this.attr("y1") < this.attr("y2") ? "y2" : "y1", e.y + t)
            },
            size: function(t, e) {
                var i = n(this.bbox(), t, e);
                return this.width(i.width).height(i.height)
            },
            plot: function(t, e, i, r) {
                return this.attr({
                    x1: t,
                    y1: e,
                    x2: i,
                    y2: r
                })
            }
        },
        construct: {
            line: function(t, e, i, r) {
                return this.put((new c.Line).plot(t, e, i, r))
            }
        }
    }),
    c.Polyline = c.invent({
        create: "polyline",
        inherit: c.Shape,
        construct: {
            polyline: function(t) {
                return this.put(new c.Polyline).plot(t)
            }
        }
    }),
    c.Polygon = c.invent({
        create: "polygon",
        inherit: c.Shape,
        construct: {
            polygon: function(t) {
                return this.put(new c.Polygon).plot(t)
            }
        }
    }),
    c.extend(c.Polyline, c.Polygon, {
        morphArray: c.PointArray,
        plot: function(t) {
            return this.attr("points", this.array = new c.PointArray(t,[[0, 0]]))
        },
        move: function(t, e) {
            return this.attr("points", this.array.move(t, e))
        },
        x: function(t) {
            return null  == t ? this.bbox().x : this.move(t, this.bbox().y)
        },
        y: function(t) {
            return null  == t ? this.bbox().y : this.move(this.bbox().x, t)
        },
        width: function(t) {
            var e = this.bbox();
            return null  == t ? e.width : this.size(t, e.height)
        },
        height: function(t) {
            var e = this.bbox();
            return null  == t ? e.height : this.size(e.width, t)
        },
        size: function(t, e) {
            var i = n(this.bbox(), t, e);
            return this.attr("points", this.array.size(i.width, i.height))
        }
    }),
    c.Path = c.invent({
        create: "path",
        inherit: c.Shape,
        extend: {
            plot: function(t) {
                return this.attr("d", this.array = new c.PathArray(t,[["M", 0, 0]]))
            },
            move: function(t, e) {
                return this.attr("d", this.array.move(t, e))
            },
            x: function(t) {
                return null  == t ? this.bbox().x : this.move(t, this.bbox().y)
            },
            y: function(t) {
                return null  == t ? this.bbox().y : this.move(this.bbox().x, t)
            },
            size: function(t, e) {
                var i = n(this.bbox(), t, e);
                return this.attr("d", this.array.size(i.width, i.height))
            },
            width: function(t) {
                return null  == t ? this.bbox().width : this.size(t, this.bbox().height)
            },
            height: function(t) {
                return null  == t ? this.bbox().height : this.size(this.bbox().width, t)
            }
        },
        construct: {
            path: function(t) {
                return this.put(new c.Path).plot(t)
            }
        }
    }),
    c.Image = c.invent({
        create: "image",
        inherit: c.Shape,
        extend: {
            load: function(t) {
                if (!t)
                    return this;
                var e = this
                  , i = document.createElement("img");
                return i.onload = function() {
                    var r = e.doc(c.Pattern);
                    0 == e.width() && 0 == e.height() && e.size(i.width, i.height),
                    r && 0 == r.width() && 0 == r.height() && r.size(e.width(), e.height()),
                    "function" == typeof e._loaded && e._loaded.call(e, {
                        width: i.width,
                        height: i.height,
                        ratio: i.width / i.height,
                        url: t
                    })
                }
                ,
                this.attr("href", i.src = this.src = t, c.xlink)
            },
            loaded: function(t) {
                return this._loaded = t,
                this
            }
        },
        construct: {
            image: function(t, e, i) {
                return this.put(new c.Image).load(t).size(e || 0, i || e || 0)
            }
        }
    }),
    c.Text = c.invent({
        create: function() {
            this.constructor.call(this, c.create("text")),
            this._leading = new c.Number(1.3),
            this._rebuild = !0,
            this._build = !1,
            this.attr("font-family", c.defaults.attrs["font-family"])
        },
        inherit: c.Shape,
        extend: {
            x: function(t) {
                return null  == t ? this.attr("x") : (this.textPath || this.lines.each(function() {
                    this.newLined && this.x(t)
                }
                ),
                this.attr("x", t))
            },
            y: function(t) {
                var e = this.attr("y")
                  , i = "number" == typeof e ? e - this.bbox().y : 0;
                return null  == t ? "number" == typeof e ? e - i : e : this.attr("y", "number" == typeof t ? t + i : t)
            },
            cx: function(t) {
                return null  == t ? this.bbox().cx : this.x(t - this.bbox().width / 2)
            },
            cy: function(t) {
                return null  == t ? this.bbox().cy : this.y(t - this.bbox().height / 2)
            },
            text: function(t) {
                if ("undefined" == typeof t)
                    return this.content;
                if (this.clear().build(!0),
                "function" == typeof t)
                    t.call(this, this);
                else {
                    t = (this.content = t).split("\n");
                    for (var e = 0, i = t.length; i > e; e++)
                        this.tspan(t[e]).newLine()
                }
                return this.build(!1).rebuild()
            },
            size: function(t) {
                return this.attr("font-size", t).rebuild()
            },
            leading: function(t) {
                return null  == t ? this._leading : (this._leading = new c.Number(t),
                this.rebuild())
            },
            rebuild: function(t) {
                if ("boolean" == typeof t && (this._rebuild = t),
                this._rebuild) {
                    var e = this;
                    this.lines.each(function() {
                        this.newLined && (this.textPath || this.attr("x", e.attr("x")),
                        this.attr("dy", e._leading * new c.Number(e.attr("font-size"))))
                    }
                    ),
                    this.fire("rebuild")
                }
                return this
            },
            build: function(t) {
                return this._build = !!t,
                this
            }
        },
        construct: {
            text: function(t) {
                return this.put(new c.Text).text(t)
            },
            plain: function(t) {
                return this.put(new c.Text).plain(t)
            }
        }
    }),
    c.TSpan = c.invent({
        create: "tspan",
        inherit: c.Shape,
        extend: {
            text: function(t) {
                return "function" == typeof t ? t.call(this, this) : this.plain(t),
                this
            },
            dx: function(t) {
                return this.attr("dx", t)
            },
            dy: function(t) {
                return this.attr("dy", t)
            },
            newLine: function() {
                var t = this.doc(c.Text);
                return this.newLined = !0,
                this.dy(t._leading * t.attr("font-size")).attr("x", t.x())
            }
        }
    }),
    c.extend(c.Text, c.TSpan, {
        plain: function(t) {
            return this._build === !1 && this.clear(),
            this.node.appendChild(document.createTextNode(this.content = t)),
            this
        },
        tspan: function(t) {
            var e = (this.textPath || this).node
              , i = new c.TSpan;
            return this._build === !1 && this.clear(),
            e.appendChild(i.node),
            i.parent = this,
            this instanceof c.Text && this.lines.add(i),
            i.text(t)
        },
        clear: function() {
            for (var t = (this.textPath || this).node; t.hasChildNodes(); )
                t.removeChild(t.lastChild);
            return this instanceof c.Text && (delete this.lines,
            this.lines = new c.Set,
            this.content = ""),
            this
        },
        length: function() {
            return this.node.getComputedTextLength()
        }
    }),
    c.TextPath = c.invent({
        create: "textPath",
        inherit: c.Element,
        parent: c.Text,
        construct: {
            path: function(t) {
                for (this.textPath = new c.TextPath; this.node.hasChildNodes(); )
                    this.textPath.node.appendChild(this.node.firstChild);
                return this.node.appendChild(this.textPath.node),
                this.track = this.doc().defs().path(t),
                this.textPath.parent = this,
                this.textPath.attr("href", "#" + this.track, c.xlink),
                this
            },
            plot: function(t) {
                return this.track && this.track.plot(t),
                this
            }
        }
    }),
    c.Nested = c.invent({
        create: function() {
            this.constructor.call(this, c.create("svg")),
            this.style("overflow", "visible")
        },
        inherit: c.Container,
        construct: {
            nested: function() {
                return this.put(new c.Nested)
            }
        }
    }),
    c.A = c.invent({
        create: "a",
        inherit: c.Container,
        extend: {
            to: function(t) {
                return this.attr("href", t, c.xlink)
            },
            show: function(t) {
                return this.attr("show", t, c.xlink)
            },
            target: function(t) {
                return this.attr("target", t)
            }
        },
        construct: {
            link: function(t) {
                return this.put(new c.A).to(t)
            }
        }
    }),
    c.extend(c.Element, {
        linkTo: function(t) {
            var e = new c.A;
            return "function" == typeof t ? t.call(e, e) : e.to(t),
            this.parent.put(e).put(this)
        }
    }),
    c.Marker = c.invent({
        create: "marker",
        inherit: c.Container,
        extend: {
            width: function(t) {
                return this.attr("markerWidth", t)
            },
            height: function(t) {
                return this.attr("markerHeight", t)
            },
            ref: function(t, e) {
                return this.attr("refX", t).attr("refY", e)
            },
            update: function(t) {
                return this.clear(),
                "function" == typeof t && t.call(this, this),
                this
            },
            toString: function() {
                return "url(#" + this.id() + ")"
            }
        },
        construct: {
            marker: function(t, e, i) {
                return this.defs().marker(t, e, i)
            }
        }
    }),
    c.extend(c.Defs, {
        marker: function(t, e, i) {
            return this.put(new c.Marker).size(t, e).ref(t / 2, e / 2).viewbox(0, 0, t, e).attr("orient", "auto").update(i)
        }
    }),
    c.extend(c.Line, c.Polyline, c.Polygon, c.Path, {
        marker: function(t, e, i, r) {
            var n = ["marker"];
            return "all" != t && n.push(t),
            n = n.join("-"),
            t = arguments[1] instanceof c.Marker ? arguments[1] : this.doc().marker(e, i, r),
            this.attr(n, t)
        }
    });
    var u = {
        stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
        fill: ["color", "opacity", "rule"],
        prefix: function(t, e) {
            return "color" == e ? t : t + "-" + e
        }
    };
    return ["fill", "stroke"].forEach(function(t) {
        var e, i = {};
        i[t] = function(i) {
            if ("string" == typeof i || c.Color.isRgb(i) || i && "function" == typeof i.fill)
                this.attr(t, i);
            else
                for (e = u[t].length - 1; e >= 0; e--)
                    null  != i[u[t][e]] && this.attr(u.prefix(t, u[t][e]), i[u[t][e]]);
            return this
        }
        ,
        c.extend(c.Element, c.FX, i)
    }
    ),
    c.extend(c.Element, c.FX, {
        rotate: function(t, e, i) {
            return this.transform({
                rotation: t || 0,
                cx: e,
                cy: i
            })
        },
        skew: function(t, e) {
            return this.transform({
                skewX: t || 0,
                skewY: e || 0
            })
        },
        scale: function(t, e) {
            return this.transform({
                scaleX: t,
                scaleY: null  == e ? t : e
            })
        },
        translate: function(t, e) {
            return this.transform({
                x: t,
                y: e
            })
        },
        matrix: function(t) {
            return this.transform({
                matrix: t
            })
        },
        opacity: function(t) {
            return this.attr("opacity", t)
        }
    }),
    c.extend(c.Rect, c.Ellipse, c.FX, {
        radius: function(t, e) {
            return this.attr({
                rx: t,
                ry: e || t
            })
        }
    }),
    c.extend(c.Path, {
        length: function() {
            return this.node.getTotalLength()
        },
        pointAt: function(t) {
            return this.node.getPointAtLength(t)
        }
    }),
    c.extend(c.Parent, c.Text, c.FX, {
        font: function(t) {
            for (var e in t)
                "leading" == e ? this.leading(t[e]) : "anchor" == e ? this.attr("text-anchor", t[e]) : "size" == e || "family" == e || "weight" == e || "stretch" == e || "variant" == e || "style" == e ? this.attr("font-" + e, t[e]) : this.attr(e, t[e]);
            return this
        }
    }),
    c.Set = c.invent({
        create: function() {
            this.clear()
        },
        extend: {
            add: function() {
                var t, e, i = [].slice.call(arguments);
                for (t = 0,
                e = i.length; e > t; t++)
                    this.members.push(i[t]);
                return this
            },
            remove: function(t) {
                var e = this.index(t);
                return e > -1 && this.members.splice(e, 1),
                this
            },
            each: function(t) {
                for (var e = 0, i = this.members.length; i > e; e++)
                    t.apply(this.members[e], [e, this.members]);
                return this
            },
            clear: function() {
                return this.members = [],
                this
            },
            has: function(t) {
                return this.index(t) >= 0
            },
            index: function(t) {
                return this.members.indexOf(t)
            },
            get: function(t) {
                return this.members[t]
            },
            first: function() {
                return this.get(0)
            },
            last: function() {
                return this.get(this.members.length - 1)
            },
            valueOf: function() {
                return this.members
            },
            bbox: function() {
                var t = new c.BBox;
                if (0 == this.members.length)
                    return t;
                var e = this.members[0].rbox();
                return t.x = e.x,
                t.y = e.y,
                t.width = e.width,
                t.height = e.height,
                this.each(function() {
                    t = t.merge(this.rbox())
                }
                ),
                t
            }
        },
        construct: {
            set: function() {
                return new c.Set
            }
        }
    }),
    c.SetFX = c.invent({
        create: function(t) {
            this.set = t
        }
    }),
    c.Set.inherit = function() {
        var t, e = [];
        for (var t in c.Shape.prototype)
            "function" == typeof c.Shape.prototype[t] && "function" != typeof c.Set.prototype[t] && e.push(t);
        e.forEach(function(t) {
            c.Set.prototype[t] = function() {
                for (var e = 0, i = this.members.length; i > e; e++)
                    this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
                return "animate" == t ? this.fx || (this.fx = new c.SetFX(this)) : this
            }
        }
        ),
        e = [];
        for (var t in c.FX.prototype)
            "function" == typeof c.FX.prototype[t] && "function" != typeof c.SetFX.prototype[t] && e.push(t);
        e.forEach(function(t) {
            c.SetFX.prototype[t] = function() {
                for (var e = 0, i = this.set.members.length; i > e; e++)
                    this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
                return this
            }
        }
        )
    }
    ,
    c.extend(c.Element, {
        data: function(t, e, i) {
            if ("object" == typeof t)
                for (e in t)
                    this.data(e, t[e]);
            else if (arguments.length < 2)
                try {
                    return JSON.parse(this.attr("data-" + t))
                } catch (r) {
                    return this.attr("data-" + t)
                }
            else
                this.attr("data-" + t, null  === e ? null  : i === !0 || "string" == typeof e || "number" == typeof e ? e : JSON.stringify(e));
            return this
        }
    }),
    c.extend(c.Element, {
        remember: function(t, e) {
            if ("object" == typeof arguments[0])
                for (var e in t)
                    this.remember(e, t[e]);
            else {
                if (1 == arguments.length)
                    return this.memory()[t];
                this.memory()[t] = e
            }
            return this
        },
        forget: function() {
            if (0 == arguments.length)
                this._memory = {};
            else
                for (var t = arguments.length - 1; t >= 0; t--)
                    delete this.memory()[arguments[t]];
            return this
        },
        memory: function() {
            return this._memory || (this._memory = {})
        }
    }),
    c
}
),
function(t, e) {
    "use strict";
    "undefined" != typeof module && module.exports ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : t.buzz = e()
}
(this, function() {
    "use strict";
    var t = window.AudioContext || window.webkitAudioContext
      , e = {
        defaults: {
            autoplay: !1,
            duration: 5e3,
            formats: [],
            loop: !1,
            placeholder: "--",
            preload: "metadata",
            volume: 80,
            webAudioApi: !1,
            document: window.document
        },
        types: {
            mp3: "audio/mpeg",
            ogg: "audio/ogg",
            wav: "audio/wav",
            aac: "audio/aac",
            m4a: "audio/x-m4a"
        },
        sounds: [],
        el: document.createElement("audio"),
        getAudioContext: function() {
            if (void 0 === this.audioCtx)
                try {
                    this.audioCtx = t ? new t : null 
                } catch (e) {
                    this.audioCtx = null 
                }
            return this.audioCtx
        },
        sound: function(t, i) {
            function r(t) {
                for (var e = [], i = t.length - 1, r = 0; i >= r; r++)
                    e.push({
                        start: t.start(r),
                        end: t.end(r)
                    });
                return e
            }
            function n(t) {
                return t.split(".").pop()
            }
            i = i || {};
            var o = i.document || e.defaults.document
              , a = 0
              , s = []
              , l = {}
              , h = e.isSupported();
            if (this.load = function() {
                return h ? (this.sound.load(),
                this) : this
            }
            ,
            this.play = function() {
                return h ? (this.sound.play(),
                this) : this
            }
            ,
            this.togglePlay = function() {
                return h ? (this.sound.paused ? this.sound.play() : this.sound.pause(),
                this) : this
            }
            ,
            this.pause = function() {
                return h ? (this.sound.pause(),
                this) : this
            }
            ,
            this.isPaused = function() {
                return h ? this.sound.paused : null 
            }
            ,
            this.stop = function() {
                return h ? (this.setTime(0),
                this.sound.pause(),
                this) : this
            }
            ,
            this.isEnded = function() {
                return h ? this.sound.ended : null 
            }
            ,
            this.loop = function() {
                try {
                    if (!h)
                        return this;
                    this.sound.loop = "loop",
                    this.bind("ended.buzzloop", function() {
                        this.currentTime = 0,
                        this.play()
                    }
                    )
                } catch (t) {}
                return this
            }
            ,
            this.unloop = function() {
                return h ? (this.sound.removeAttribute("loop"),
                this.unbind("ended.buzzloop"),
                this) : this
            }
            ,
            this.mute = function() {
                return h ? (this.sound.muted = !0,
                this) : this
            }
            ,
            this.unmute = function() {
                return h ? (this.sound.muted = !1,
                this) : this
            }
            ,
            this.toggleMute = function() {
                return h ? (this.sound.muted = !this.sound.muted,
                this) : this
            }
            ,
            this.isMuted = function() {
                return h ? this.sound.muted : null 
            }
            ,
            this.setVolume = function(t) {
                return h ? (0 > t && (t = 0),
                t > 100 && (t = 100),
                this.volume = t,
                this.sound.volume = t / 100,
                this) : this
            }
            ,
            this.getVolume = function() {
                return h ? this.volume : this
            }
            ,
            this.increaseVolume = function(t) {
                return this.setVolume(this.volume + (t || 1))
            }
            ,
            this.decreaseVolume = function(t) {
                return this.setVolume(this.volume - (t || 1))
            }
            ,
            this.setTime = function(t) {
                try {
                    if (!h)
                        return this;
                    var e = !0;
                    this.whenReady(function() {
                        e === !0 && (e = !1,
                        isFinite(t) && (this.sound.currentTime = Number(t)))
                    }
                    )
                } catch (i) {}
                return this
            }
            ,
            this.getTime = function() {
                try {
                    if (!h)
                        return null ;
                    var t = Math.round(100 * this.sound.currentTime) / 100;
                    return isNaN(t) ? e.defaults.placeholder : t
                } catch (i) {}
                return 0
            }
            ,
            this.setPercent = function(t) {
                return h ? this.setTime(e.fromPercent(t, this.sound.duration)) : this
            }
            ,
            this.getPercent = function() {
                try {
                    if (!h)
                        return null ;
                    var t = Math.round(e.toPercent(this.sound.currentTime, this.sound.duration));
                    return isNaN(t) ? e.defaults.placeholder : t
                } catch (i) {}
                return 0
            }
            ,
            this.setSpeed = function(t) {
                return h ? (this.sound.playbackRate = t,
                this) : this
            }
            ,
            this.getSpeed = function() {
                return h ? this.sound.playbackRate : null 
            }
            ,
            this.getDuration = function() {
                if (!h)
                    return null ;
                var t = Math.round(100 * this.sound.duration) / 100;
                return isNaN(t) ? e.defaults.placeholder : t
            }
            ,
            this.getPlayed = function() {
                return h ? r(this.sound.played) : null 
            }
            ,
            this.getBuffered = function() {
                return h ? r(this.sound.buffered) : null 
            }
            ,
            this.getSeekable = function() {
                return h ? r(this.sound.seekable) : null 
            }
            ,
            this.getErrorCode = function() {
                return h && this.sound.error ? this.sound.error.code : 0
            }
            ,
            this.getErrorMessage = function() {
                if (!h)
                    return null ;
                switch (this.getErrorCode()) {
                case 1:
                    return "MEDIA_ERR_ABORTED";
                case 2:
                    return "MEDIA_ERR_NETWORK";
                case 3:
                    return "MEDIA_ERR_DECODE";
                case 4:
                    return "MEDIA_ERR_SRC_NOT_SUPPORTED";
                default:
                    return null 
                }
            }
            ,
            this.getStateCode = function() {
                return h ? this.sound.readyState : null 
            }
            ,
            this.getStateMessage = function() {
                if (!h)
                    return null ;
                switch (this.getStateCode()) {
                case 0:
                    return "HAVE_NOTHING";
                case 1:
                    return "HAVE_METADATA";
                case 2:
                    return "HAVE_CURRENT_DATA";
                case 3:
                    return "HAVE_FUTURE_DATA";
                case 4:
                    return "HAVE_ENOUGH_DATA";
                default:
                    return null 
                }
            }
            ,
            this.getNetworkStateCode = function() {
                return h ? this.sound.networkState : null 
            }
            ,
            this.getNetworkStateMessage = function() {
                if (!h)
                    return null ;
                switch (this.getNetworkStateCode()) {
                case 0:
                    return "NETWORK_EMPTY";
                case 1:
                    return "NETWORK_IDLE";
                case 2:
                    return "NETWORK_LOADING";
                case 3:
                    return "NETWORK_NO_SOURCE";
                default:
                    return null 
                }
            }
            ,
            this.set = function(t, e) {
                return h ? (this.sound[t] = e,
                this) : this
            }
            ,
            this.get = function(t) {
                return h ? t ? this.sound[t] : this.sound : null 
            }
            ,
            this.bind = function(t, e) {
                if (!h)
                    return this;
                t = t.split(" ");
                for (var i = this, r = function(t) {
                    e.call(i, t)
                }
                , n = 0; n < t.length; n++) {
                    var o = t[n]
                      , a = o;
                    o = a.split(".")[0],
                    s.push({
                        idx: a,
                        func: r
                    }),
                    this.sound.addEventListener(o, r, !0)
                }
                return this
            }
            ,
            this.unbind = function(t) {
                if (!h)
                    return this;
                t = t.split(" ");
                for (var e = 0; e < t.length; e++)
                    for (var i = t[e], r = i.split(".")[0], n = 0; n < s.length; n++) {
                        var o = s[n].idx.split(".");
                        (s[n].idx === i || o[1] && o[1] === i.replace(".", "")) && (this.sound.removeEventListener(r, s[n].func, !0),
                        s.splice(n, 1))
                    }
                return this
            }
            ,
            this.bindOnce = function(t, e) {
                if (!h)
                    return this;
                var i = this;
                return l[a++] = !1,
                this.bind(t + "." + a, function() {
                    l[a] || (l[a] = !0,
                    e.call(i)),
                    i.unbind(t + "." + a)
                }
                ),
                this
            }
            ,
            this.trigger = function(t, e) {
                if (!h)
                    return this;
                t = t.split(" ");
                for (var i = 0; i < t.length; i++)
                    for (var r = t[i], n = 0; n < s.length; n++) {
                        var a = s[n].idx.split(".");
                        if (s[n].idx === r || a[0] && a[0] === r.replace(".", "")) {
                            var l = o.createEvent("HTMLEvents");
                            l.initEvent(a[0], !1, !0),
                            l.originalEvent = e,
                            this.sound.dispatchEvent(l)
                        }
                    }
                return this
            }
            ,
            this.fadeTo = function(t, i, r) {
                function n() {
                    setTimeout(function() {
                        t > o && s.volume < t ? (s.setVolume(s.volume += 1),
                        n()) : o > t && s.volume > t ? (s.setVolume(s.volume -= 1),
                        n()) : r instanceof Function && r.apply(s)
                    }
                    , a)
                }
                if (!h)
                    return this;
                i instanceof Function ? (r = i,
                i = e.defaults.duration) : i = i || e.defaults.duration;
                var o = this.volume
                  , a = i / Math.abs(o - t)
                  , s = this;
                return this.play(),
                this.whenReady(function() {
                    n()
                }
                ),
                this
            }
            ,
            this.fadeIn = function(t, e) {
                return h ? this.setVolume(0).fadeTo(100, t, e) : this
            }
            ,
            this.fadeOut = function(t, e) {
                return h ? this.fadeTo(0, t, e) : this
            }
            ,
            this.fadeWith = function(t, e) {
                return h ? (this.fadeOut(e, function() {
                    this.stop()
                }
                ),
                t.play().fadeIn(e),
                this) : this
            }
            ,
            this.whenReady = function(t) {
                if (!h)
                    return null ;
                var e = this;
                0 === this.sound.readyState ? this.bind("canplay.buzzwhenready", function() {
                    t.call(e)
                }
                ) : t.call(e)
            }
            ,
            this.addSource = function(t) {
                var i = this
                  , r = o.createElement("source");
                return r.src = t,
                e.types[n(t)] && (r.type = e.types[n(t)]),
                this.sound.appendChild(r),
                r.addEventListener("error", function(t) {
                    i.sound.networkState = 3,
                    i.trigger("sourceerror", t)
                }
                ),
                r
            }
            ,
            h && t) {
                for (var c in e.defaults)
                    e.defaults.hasOwnProperty(c) && void 0 === i[c] && (i[c] = e.defaults[c]);
                if (this.sound = o.createElement("audio"),
                i.webAudioApi) {
                    var u = e.getAudioContext();
                    u && (this.source = u.createMediaElementSource(this.sound),
                    this.source.connect(u.destination))
                }
                if (t instanceof Array)
                    for (var p in t)
                        t.hasOwnProperty(p) && this.addSource(t[p]);
                else if (i.formats.length)
                    for (var d in i.formats)
                        i.formats.hasOwnProperty(d) && this.addSource(t + "." + i.formats[d]);
                else
                    this.addSource(t);
                i.loop && this.loop(),
                i.autoplay && (this.sound.autoplay = "autoplay"),
                i.preload === !0 ? this.sound.preload = "auto" : i.preload === !1 ? this.sound.preload = "none" : this.sound.preload = i.preload,
                this.setVolume(i.volume),
                e.sounds.push(this)
            }
        },
        group: function(t) {
            function e() {
                for (var e = i(null , arguments), r = e.shift(), n = 0; n < t.length; n++)
                    t[n][r].apply(t[n], e)
            }
            function i(t, e) {
                return t instanceof Array ? t : Array.prototype.slice.call(e)
            }
            t = i(t, arguments),
            this.getSounds = function() {
                return t
            }
            ,
            this.add = function(e) {
                e = i(e, arguments);
                for (var r = 0; r < e.length; r++)
                    t.push(e[r])
            }
            ,
            this.remove = function(e) {
                e = i(e, arguments);
                for (var r = 0; r < e.length; r++)
                    for (var n = 0; n < t.length; n++)
                        if (t[n] === e[r]) {
                            t.splice(n, 1);
                            break
                        }
            }
            ,
            this.load = function() {
                return e("load"),
                this
            }
            ,
            this.play = function() {
                return e("play"),
                this
            }
            ,
            this.togglePlay = function() {
                return e("togglePlay"),
                this
            }
            ,
            this.pause = function(t) {
                return e("pause", t),
                this
            }
            ,
            this.stop = function() {
                return e("stop"),
                this
            }
            ,
            this.mute = function() {
                return e("mute"),
                this
            }
            ,
            this.unmute = function() {
                return e("unmute"),
                this
            }
            ,
            this.toggleMute = function() {
                return e("toggleMute"),
                this
            }
            ,
            this.setVolume = function(t) {
                return e("setVolume", t),
                this
            }
            ,
            this.increaseVolume = function(t) {
                return e("increaseVolume", t),
                this
            }
            ,
            this.decreaseVolume = function(t) {
                return e("decreaseVolume", t),
                this
            }
            ,
            this.loop = function() {
                return e("loop"),
                this
            }
            ,
            this.unloop = function() {
                return e("unloop"),
                this
            }
            ,
            this.setSpeed = function(t) {
                return e("setSpeed", t),
                this
            }
            ,
            this.setTime = function(t) {
                return e("setTime", t),
                this
            }
            ,
            this.set = function(t, i) {
                return e("set", t, i),
                this
            }
            ,
            this.bind = function(t, i) {
                return e("bind", t, i),
                this
            }
            ,
            this.unbind = function(t) {
                return e("unbind", t),
                this
            }
            ,
            this.bindOnce = function(t, i) {
                return e("bindOnce", t, i),
                this
            }
            ,
            this.trigger = function(t) {
                return e("trigger", t),
                this
            }
            ,
            this.fade = function(t, i, r, n) {
                return e("fade", t, i, r, n),
                this
            }
            ,
            this.fadeIn = function(t, i) {
                return e("fadeIn", t, i),
                this
            }
            ,
            this.fadeOut = function(t, i) {
                return e("fadeOut", t, i),
                this
            }
        },
        all: function() {
            return new e.group(e.sounds)
        },
        isSupported: function() {
            return !!e.el.canPlayType
        },
        isOGGSupported: function() {
            return !!e.el.canPlayType && e.el.canPlayType('audio/ogg; codecs="vorbis"')
        },
        isWAVSupported: function() {
            return !!e.el.canPlayType && e.el.canPlayType('audio/wav; codecs="1"')
        },
        isMP3Supported: function() {
            return !!e.el.canPlayType && e.el.canPlayType("audio/mpeg;")
        },
        isAACSupported: function() {
            return !!e.el.canPlayType && (e.el.canPlayType("audio/x-m4a;") || e.el.canPlayType("audio/aac;"))
        },
        toTimer: function(t, e) {
            var i, r, n;
            return i = Math.floor(t / 3600),
            i = isNaN(i) ? "--" : i >= 10 ? i : "0" + i,
            r = Math.floor(e ? t / 60 % 60 : t / 60),
            r = isNaN(r) ? "--" : r >= 10 ? r : "0" + r,
            n = Math.floor(t % 60),
            n = isNaN(n) ? "--" : n >= 10 ? n : "0" + n,
            e ? i + ":" + r + ":" + n : r + ":" + n;
        },
        fromTimer: function(t) {
            var e = t.toString().split(":");
            return e && 3 === e.length && (t = 3600 * parseInt(e[0], 10) + 60 * parseInt(e[1], 10) + parseInt(e[2], 10)),
            e && 2 === e.length && (t = 60 * parseInt(e[0], 10) + parseInt(e[1], 10)),
            t
        },
        toPercent: function(t, e, i) {
            var r = Math.pow(10, i || 0);
            return Math.round(100 * t / e * r) / r
        },
        fromPercent: function(t, e, i) {
            var r = Math.pow(10, i || 0);
            return Math.round(e / 100 * t * r) / r
        }
    };
    return e
}
);
var THREE = {
    REVISION: "67"
};
self.console = self.console || {
    info: function() {},
    log: function() {},
    debug: function() {},
    warn: function() {},
    error: function() {}
},
function() {
    for (var t = 0, e = ["ms", "moz", "webkit", "o"], i = 0; i < e.length && !self.requestAnimationFrame; ++i)
        self.requestAnimationFrame = self[e[i] + "RequestAnimationFrame"],
        self.cancelAnimationFrame = self[e[i] + "CancelAnimationFrame"] || self[e[i] + "CancelRequestAnimationFrame"];
    void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function(e) {
        var i = Date.now()
          , r = Math.max(0, 16 - (i - t))
          , n = self.setTimeout(function() {
            e(i + r)
        }
        , r);
        return t = i + r,
        n
    }
    ),
    void 0 === self.cancelAnimationFrame && void 0 !== self.clearTimeout && (self.cancelAnimationFrame = function(t) {
        self.clearTimeout(t)
    }
    )
}
(),
THREE.CullFaceNone = 0,
THREE.CullFaceBack = 1,
THREE.CullFaceFront = 2,
THREE.CullFaceFrontBack = 3,
THREE.FrontFaceDirectionCW = 0,
THREE.FrontFaceDirectionCCW = 1,
THREE.BasicShadowMap = 0,
THREE.PCFShadowMap = 1,
THREE.PCFSoftShadowMap = 2,
THREE.FrontSide = 0,
THREE.BackSide = 1,
THREE.DoubleSide = 2,
THREE.NoShading = 0,
THREE.FlatShading = 1,
THREE.SmoothShading = 2,
THREE.NoColors = 0,
THREE.FaceColors = 1,
THREE.VertexColors = 2,
THREE.NoBlending = 0,
THREE.NormalBlending = 1,
THREE.AdditiveBlending = 2,
THREE.SubtractiveBlending = 3,
THREE.MultiplyBlending = 4,
THREE.CustomBlending = 5,
THREE.AddEquation = 100,
THREE.SubtractEquation = 101,
THREE.ReverseSubtractEquation = 102,
THREE.ZeroFactor = 200,
THREE.OneFactor = 201,
THREE.SrcColorFactor = 202,
THREE.OneMinusSrcColorFactor = 203,
THREE.SrcAlphaFactor = 204,
THREE.OneMinusSrcAlphaFactor = 205,
THREE.DstAlphaFactor = 206,
THREE.OneMinusDstAlphaFactor = 207,
THREE.DstColorFactor = 208,
THREE.OneMinusDstColorFactor = 209,
THREE.SrcAlphaSaturateFactor = 210,
THREE.MultiplyOperation = 0,
THREE.MixOperation = 1,
THREE.AddOperation = 2,
THREE.UVMapping = function() {}
,
THREE.CubeReflectionMapping = function() {}
,
THREE.CubeRefractionMapping = function() {}
,
THREE.SphericalReflectionMapping = function() {}
,
THREE.SphericalRefractionMapping = function() {}
,
THREE.RepeatWrapping = 1e3,
THREE.ClampToEdgeWrapping = 1001,
THREE.MirroredRepeatWrapping = 1002,
THREE.NearestFilter = 1003,
THREE.NearestMipMapNearestFilter = 1004,
THREE.NearestMipMapLinearFilter = 1005,
THREE.LinearFilter = 1006,
THREE.LinearMipMapNearestFilter = 1007,
THREE.LinearMipMapLinearFilter = 1008,
THREE.UnsignedByteType = 1009,
THREE.ByteType = 1010,
THREE.ShortType = 1011,
THREE.UnsignedShortType = 1012,
THREE.IntType = 1013,
THREE.UnsignedIntType = 1014,
THREE.FloatType = 1015,
THREE.UnsignedShort4444Type = 1016,
THREE.UnsignedShort5551Type = 1017,
THREE.UnsignedShort565Type = 1018,
THREE.AlphaFormat = 1019,
THREE.RGBFormat = 1020,
THREE.RGBAFormat = 1021,
THREE.LuminanceFormat = 1022,
THREE.LuminanceAlphaFormat = 1023,
THREE.RGB_S3TC_DXT1_Format = 2001,
THREE.RGBA_S3TC_DXT1_Format = 2002,
THREE.RGBA_S3TC_DXT3_Format = 2003,
THREE.RGBA_S3TC_DXT5_Format = 2004,
THREE.Color = function(t) {
    return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(t)
}
,
THREE.Color.prototype = {
    constructor: THREE.Color,
    r: 1,
    g: 1,
    b: 1,
    set: function(t) {
        return t instanceof THREE.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
        this
    },
    setHex: function(t) {
        return t = Math.floor(t),
        this.r = (t >> 16 & 255) / 255,
        this.g = (t >> 8 & 255) / 255,
        this.b = (255 & t) / 255,
        this
    },
    setRGB: function(t, e, i) {
        return this.r = t,
        this.g = e,
        this.b = i,
        this
    },
    setHSL: function(t, e, i) {
        if (0 === e)
            this.r = this.g = this.b = i;
        else {
            var r = function(t, e, i) {
                return 0 > i && (i += 1),
                i > 1 && (i -= 1),
                1 / 6 > i ? t + 6 * (e - t) * i : .5 > i ? e : 2 / 3 > i ? t + 6 * (e - t) * (2 / 3 - i) : t
            }
            ;
            e = .5 >= i ? i * (1 + e) : i + e - i * e,
            i = 2 * i - e,
            this.r = r(i, e, t + 1 / 3),
            this.g = r(i, e, t),
            this.b = r(i, e, t - 1 / 3)
        }
        return this
    },
    setStyle: function(t) {
        return /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t) ? (t = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t),
        this.r = Math.min(255, parseInt(t[1], 10)) / 255,
        this.g = Math.min(255, parseInt(t[2], 10)) / 255,
        this.b = Math.min(255, parseInt(t[3], 10)) / 255,
        this) : /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t) ? (t = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t),
        this.r = Math.min(100, parseInt(t[1], 10)) / 100,
        this.g = Math.min(100, parseInt(t[2], 10)) / 100,
        this.b = Math.min(100, parseInt(t[3], 10)) / 100,
        this) : /^\#([0-9a-f]{6})$/i.test(t) ? (t = /^\#([0-9a-f]{6})$/i.exec(t),
        this.setHex(parseInt(t[1], 16)),
        this) : /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t) ? (t = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t),
        this.setHex(parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3], 16)),
        this) : /^(\w+)$/i.test(t) ? (this.setHex(THREE.ColorKeywords[t]),
        this) : void 0
    },
    copy: function(t) {
        return this.r = t.r,
        this.g = t.g,
        this.b = t.b,
        this
    },
    copyGammaToLinear: function(t) {
        return this.r = t.r * t.r,
        this.g = t.g * t.g,
        this.b = t.b * t.b,
        this
    },
    copyLinearToGamma: function(t) {
        return this.r = Math.sqrt(t.r),
        this.g = Math.sqrt(t.g),
        this.b = Math.sqrt(t.b),
        this
    },
    convertGammaToLinear: function() {
        var t = this.r
          , e = this.g
          , i = this.b;
        return this.r = t * t,
        this.g = e * e,
        this.b = i * i,
        this
    },
    convertLinearToGamma: function() {
        return this.r = Math.sqrt(this.r),
        this.g = Math.sqrt(this.g),
        this.b = Math.sqrt(this.b),
        this
    },
    getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
    },
    getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    },
    getHSL: function(t) {
        t = t || {
            h: 0,
            s: 0,
            l: 0
        };
        var e, i = this.r, r = this.g, n = this.b, o = Math.max(i, r, n), a = Math.min(i, r, n), s = (a + o) / 2;
        if (a === o)
            a = e = 0;
        else {
            var l = o - a
              , a = .5 >= s ? l / (o + a) : l / (2 - o - a);
            switch (o) {
            case i:
                e = (r - n) / l + (n > r ? 6 : 0);
                break;
            case r:
                e = (n - i) / l + 2;
                break;
            case n:
                e = (i - r) / l + 4
            }
            e /= 6
        }
        return t.h = e,
        t.s = a,
        t.l = s,
        t
    },
    getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
    },
    offsetHSL: function(t, e, i) {
        var r = this.getHSL();
        return r.h += t,
        r.s += e,
        r.l += i,
        this.setHSL(r.h, r.s, r.l),
        this
    },
    add: function(t) {
        return this.r += t.r,
        this.g += t.g,
        this.b += t.b,
        this
    },
    addColors: function(t, e) {
        return this.r = t.r + e.r,
        this.g = t.g + e.g,
        this.b = t.b + e.b,
        this
    },
    addScalar: function(t) {
        return this.r += t,
        this.g += t,
        this.b += t,
        this
    },
    multiply: function(t) {
        return this.r *= t.r,
        this.g *= t.g,
        this.b *= t.b,
        this
    },
    multiplyScalar: function(t) {
        return this.r *= t,
        this.g *= t,
        this.b *= t,
        this
    },
    lerp: function(t, e) {
        return this.r += (t.r - this.r) * e,
        this.g += (t.g - this.g) * e,
        this.b += (t.b - this.b) * e,
        this
    },
    equals: function(t) {
        return t.r === this.r && t.g === this.g && t.b === this.b
    },
    fromArray: function(t) {
        return this.r = t[0],
        this.g = t[1],
        this.b = t[2],
        this
    },
    toArray: function() {
        return [this.r, this.g, this.b]
    },
    clone: function() {
        return (new THREE.Color).setRGB(this.r, this.g, this.b)
    }
},
THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
},
THREE.Quaternion = function(t, e, i, r) {
    this._x = t || 0,
    this._y = e || 0,
    this._z = i || 0,
    this._w = void 0 !== r ? r : 1
}
,
THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion,
    _x: 0,
    _y: 0,
    _z: 0,
    _w: 0,
    get x() {
        return this._x
    },
    set x(t) {
        this._x = t,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(t) {
        this._y = t,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(t) {
        this._z = t,
        this.onChangeCallback()
    },
    get w() {
        return this._w
    },
    set w(t) {
        this._w = t,
        this.onChangeCallback()
    },
    set: function(t, e, i, r) {
        return this._x = t,
        this._y = e,
        this._z = i,
        this._w = r,
        this.onChangeCallback(),
        this
    },
    copy: function(t) {
        return this._x = t._x,
        this._y = t._y,
        this._z = t._z,
        this._w = t._w,
        this.onChangeCallback(),
        this
    },
    setFromEuler: function(t, e) {
        if (!1 == t instanceof THREE.Euler)
            throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
        var i = Math.cos(t._x / 2)
          , r = Math.cos(t._y / 2)
          , n = Math.cos(t._z / 2)
          , o = Math.sin(t._x / 2)
          , a = Math.sin(t._y / 2)
          , s = Math.sin(t._z / 2);
        return "XYZ" === t.order ? (this._x = o * r * n + i * a * s,
        this._y = i * a * n - o * r * s,
        this._z = i * r * s + o * a * n,
        this._w = i * r * n - o * a * s) : "YXZ" === t.order ? (this._x = o * r * n + i * a * s,
        this._y = i * a * n - o * r * s,
        this._z = i * r * s - o * a * n,
        this._w = i * r * n + o * a * s) : "ZXY" === t.order ? (this._x = o * r * n - i * a * s,
        this._y = i * a * n + o * r * s,
        this._z = i * r * s + o * a * n,
        this._w = i * r * n - o * a * s) : "ZYX" === t.order ? (this._x = o * r * n - i * a * s,
        this._y = i * a * n + o * r * s,
        this._z = i * r * s - o * a * n,
        this._w = i * r * n + o * a * s) : "YZX" === t.order ? (this._x = o * r * n + i * a * s,
        this._y = i * a * n + o * r * s,
        this._z = i * r * s - o * a * n,
        this._w = i * r * n - o * a * s) : "XZY" === t.order && (this._x = o * r * n - i * a * s,
        this._y = i * a * n - o * r * s,
        this._z = i * r * s + o * a * n,
        this._w = i * r * n + o * a * s),
        !1 !== e && this.onChangeCallback(),
        this
    },
    setFromAxisAngle: function(t, e) {
        var i = e / 2
          , r = Math.sin(i);
        return this._x = t.x * r,
        this._y = t.y * r,
        this._z = t.z * r,
        this._w = Math.cos(i),
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(t) {
        var e = t.elements
          , i = e[0];
        t = e[4];
        var r = e[8]
          , n = e[1]
          , o = e[5]
          , a = e[9]
          , s = e[2]
          , l = e[6]
          , e = e[10]
          , h = i + o + e;
        return h > 0 ? (i = .5 / Math.sqrt(h + 1),
        this._w = .25 / i,
        this._x = (l - a) * i,
        this._y = (r - s) * i,
        this._z = (n - t) * i) : i > o && i > e ? (i = 2 * Math.sqrt(1 + i - o - e),
        this._w = (l - a) / i,
        this._x = .25 * i,
        this._y = (t + n) / i,
        this._z = (r + s) / i) : o > e ? (i = 2 * Math.sqrt(1 + o - i - e),
        this._w = (r - s) / i,
        this._x = (t + n) / i,
        this._y = .25 * i,
        this._z = (a + l) / i) : (i = 2 * Math.sqrt(1 + e - i - o),
        this._w = (n - t) / i,
        this._x = (r + s) / i,
        this._y = (a + l) / i,
        this._z = .25 * i),
        this.onChangeCallback(),
        this
    },
    setFromUnitVectors: function() {
        var t, e;
        return function(i, r) {
            return void 0 === t && (t = new THREE.Vector3),
            e = i.dot(r) + 1,
            1e-6 > e ? (e = 0,
            Math.abs(i.x) > Math.abs(i.z) ? t.set(-i.y, i.x, 0) : t.set(0, -i.z, i.y)) : t.crossVectors(i, r),
            this._x = t.x,
            this._y = t.y,
            this._z = t.z,
            this._w = e,
            this.normalize(),
            this
        }
    }
    (),
    inverse: function() {
        return this.conjugate().normalize(),
        this
    },
    conjugate: function() {
        return this._x *= -1,
        this._y *= -1,
        this._z *= -1,
        this.onChangeCallback(),
        this
    },
    lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    },
    length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    },
    normalize: function() {
        var t = this.length();
        return 0 === t ? (this._z = this._y = this._x = 0,
        this._w = 1) : (t = 1 / t,
        this._x *= t,
        this._y *= t,
        this._z *= t,
        this._w *= t),
        this.onChangeCallback(),
        this
    },
    multiply: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
        this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
    },
    multiplyQuaternions: function(t, e) {
        var i = t._x
          , r = t._y
          , n = t._z
          , o = t._w
          , a = e._x
          , s = e._y
          , l = e._z
          , h = e._w;
        return this._x = i * h + o * a + r * l - n * s,
        this._y = r * h + o * s + n * a - i * l,
        this._z = n * h + o * l + i * s - r * a,
        this._w = o * h - i * a - r * s - n * l,
        this.onChangeCallback(),
        this
    },
    multiplyVector3: function(t) {
        return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        t.applyQuaternion(this)
    },
    slerp: function(t, e) {
        var i = this._x
          , r = this._y
          , n = this._z
          , o = this._w
          , a = o * t._w + i * t._x + r * t._y + n * t._z;
        if (0 > a ? (this._w = -t._w,
        this._x = -t._x,
        this._y = -t._y,
        this._z = -t._z,
        a = -a) : this.copy(t),
        a >= 1)
            return this._w = o,
            this._x = i,
            this._y = r,
            this._z = n,
            this;
        var s = Math.acos(a)
          , l = Math.sqrt(1 - a * a);
        return .001 > Math.abs(l) ? (this._w = .5 * (o + this._w),
        this._x = .5 * (i + this._x),
        this._y = .5 * (r + this._y),
        this._z = .5 * (n + this._z),
        this) : (a = Math.sin((1 - e) * s) / l,
        s = Math.sin(e * s) / l,
        this._w = o * a + this._w * s,
        this._x = i * a + this._x * s,
        this._y = r * a + this._y * s,
        this._z = n * a + this._z * s,
        this.onChangeCallback(),
        this)
    },
    equals: function(t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
    },
    fromArray: function(t) {
        return this._x = t[0],
        this._y = t[1],
        this._z = t[2],
        this._w = t[3],
        this.onChangeCallback(),
        this
    },
    toArray: function() {
        return [this._x, this._y, this._z, this._w]
    },
    onChange: function(t) {
        return this.onChangeCallback = t,
        this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Quaternion(this._x,this._y,this._z,this._w)
    }
},
THREE.Quaternion.slerp = function(t, e, i, r) {
    return i.copy(t).slerp(e, r)
}
,
THREE.Vector2 = function(t, e) {
    this.x = t || 0,
    this.y = e || 0
}
,
THREE.Vector2.prototype = {
    constructor: THREE.Vector2,
    set: function(t, e) {
        return this.x = t,
        this.y = e,
        this
    },
    setX: function(t) {
        return this.x = t,
        this
    },
    setY: function(t) {
        return this.y = t,
        this
    },
    setComponent: function(t, e) {
        switch (t) {
        case 0:
            this.x = e;
            break;
        case 1:
            this.y = e;
            break;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    getComponent: function(t) {
        switch (t) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    copy: function(t) {
        return this.x = t.x,
        this.y = t.y,
        this
    },
    add: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(t, e)) : (this.x += t.x,
        this.y += t.y,
        this)
    },
    addVectors: function(t, e) {
        return this.x = t.x + e.x,
        this.y = t.y + e.y,
        this
    },
    addScalar: function(t) {
        return this.x += t,
        this.y += t,
        this
    },
    sub: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(t, e)) : (this.x -= t.x,
        this.y -= t.y,
        this)
    },
    subVectors: function(t, e) {
        return this.x = t.x - e.x,
        this.y = t.y - e.y,
        this
    },
    multiply: function(t) {
        return this.x *= t.x,
        this.y *= t.y,
        this
    },
    multiplyScalar: function(t) {
        return this.x *= t,
        this.y *= t,
        this
    },
    divide: function(t) {
        return this.x /= t.x,
        this.y /= t.y,
        this
    },
    divideScalar: function(t) {
        return 0 !== t ? (t = 1 / t,
        this.x *= t,
        this.y *= t) : this.y = this.x = 0,
        this
    },
    min: function(t) {
        return this.x > t.x && (this.x = t.x),
        this.y > t.y && (this.y = t.y),
        this
    },
    max: function(t) {
        return this.x < t.x && (this.x = t.x),
        this.y < t.y && (this.y = t.y),
        this
    },
    clamp: function(t, e) {
        return this.x < t.x ? this.x = t.x : this.x > e.x && (this.x = e.x),
        this.y < t.y ? this.y = t.y : this.y > e.y && (this.y = e.y),
        this
    },
    clampScalar: function() {
        var t, e;
        return function(i, r) {
            return void 0 === t && (t = new THREE.Vector2,
            e = new THREE.Vector2),
            t.set(i, i),
            e.set(r, r),
            this.clamp(t, e)
        }
    }
    (),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this
    },
    roundToZero: function() {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y),
        this
    },
    negate: function() {
        return this.multiplyScalar(-1)
    },
    dot: function(t) {
        return this.x * t.x + this.y * t.y
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    distanceTo: function(t) {
        return Math.sqrt(this.distanceToSquared(t))
    },
    distanceToSquared: function(t) {
        var e = this.x - t.x;
        return t = this.y - t.y,
        e * e + t * t
    },
    setLength: function(t) {
        var e = this.length();
        return 0 !== e && t !== e && this.multiplyScalar(t / e),
        this
    },
    lerp: function(t, e) {
        return this.x += (t.x - this.x) * e,
        this.y += (t.y - this.y) * e,
        this
    },
    equals: function(t) {
        return t.x === this.x && t.y === this.y
    },
    fromArray: function(t) {
        return this.x = t[0],
        this.y = t[1],
        this
    },
    toArray: function() {
        return [this.x, this.y]
    },
    clone: function() {
        return new THREE.Vector2(this.x,this.y)
    }
},
THREE.Vector3 = function(t, e, i) {
    this.x = t || 0,
    this.y = e || 0,
    this.z = i || 0
}
,
THREE.Vector3.prototype = {
    constructor: THREE.Vector3,
    set: function(t, e, i) {
        return this.x = t,
        this.y = e,
        this.z = i,
        this
    },
    setX: function(t) {
        return this.x = t,
        this
    },
    setY: function(t) {
        return this.y = t,
        this
    },
    setZ: function(t) {
        return this.z = t,
        this
    },
    setComponent: function(t, e) {
        switch (t) {
        case 0:
            this.x = e;
            break;
        case 1:
            this.y = e;
            break;
        case 2:
            this.z = e;
            break;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    getComponent: function(t) {
        switch (t) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    copy: function(t) {
        return this.x = t.x,
        this.y = t.y,
        this.z = t.z,
        this
    },
    add: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(t, e)) : (this.x += t.x,
        this.y += t.y,
        this.z += t.z,
        this)
    },
    addScalar: function(t) {
        return this.x += t,
        this.y += t,
        this.z += t,
        this
    },
    addVectors: function(t, e) {
        return this.x = t.x + e.x,
        this.y = t.y + e.y,
        this.z = t.z + e.z,
        this
    },
    sub: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(t, e)) : (this.x -= t.x,
        this.y -= t.y,
        this.z -= t.z,
        this)
    },
    subVectors: function(t, e) {
        return this.x = t.x - e.x,
        this.y = t.y - e.y,
        this.z = t.z - e.z,
        this
    },
    multiply: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
        this.multiplyVectors(t, e)) : (this.x *= t.x,
        this.y *= t.y,
        this.z *= t.z,
        this)
    },
    multiplyScalar: function(t) {
        return this.x *= t,
        this.y *= t,
        this.z *= t,
        this
    },
    multiplyVectors: function(t, e) {
        return this.x = t.x * e.x,
        this.y = t.y * e.y,
        this.z = t.z * e.z,
        this
    },
    applyEuler: function() {
        var t;
        return function(e) {
            return !1 == e instanceof THREE.Euler && console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),
            void 0 === t && (t = new THREE.Quaternion),
            this.applyQuaternion(t.setFromEuler(e)),
            this
        }
    }
    (),
    applyAxisAngle: function() {
        var t;
        return function(e, i) {
            return void 0 === t && (t = new THREE.Quaternion),
            this.applyQuaternion(t.setFromAxisAngle(e, i)),
            this
        }
    }
    (),
    applyMatrix3: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z;
        return t = t.elements,
        this.x = t[0] * e + t[3] * i + t[6] * r,
        this.y = t[1] * e + t[4] * i + t[7] * r,
        this.z = t[2] * e + t[5] * i + t[8] * r,
        this
    },
    applyMatrix4: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z;
        return t = t.elements,
        this.x = t[0] * e + t[4] * i + t[8] * r + t[12],
        this.y = t[1] * e + t[5] * i + t[9] * r + t[13],
        this.z = t[2] * e + t[6] * i + t[10] * r + t[14],
        this
    },
    applyProjection: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z;
        t = t.elements;
        var n = 1 / (t[3] * e + t[7] * i + t[11] * r + t[15]);
        return this.x = (t[0] * e + t[4] * i + t[8] * r + t[12]) * n,
        this.y = (t[1] * e + t[5] * i + t[9] * r + t[13]) * n,
        this.z = (t[2] * e + t[6] * i + t[10] * r + t[14]) * n,
        this
    },
    applyQuaternion: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z
          , n = t.x
          , o = t.y
          , a = t.z;
        t = t.w;
        var s = t * e + o * r - a * i
          , l = t * i + a * e - n * r
          , h = t * r + n * i - o * e
          , e = -n * e - o * i - a * r;
        return this.x = s * t + e * -n + l * -a - h * -o,
        this.y = l * t + e * -o + h * -n - s * -a,
        this.z = h * t + e * -a + s * -o - l * -n,
        this
    },
    transformDirection: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z;
        return t = t.elements,
        this.x = t[0] * e + t[4] * i + t[8] * r,
        this.y = t[1] * e + t[5] * i + t[9] * r,
        this.z = t[2] * e + t[6] * i + t[10] * r,
        this.normalize(),
        this
    },
    divide: function(t) {
        return this.x /= t.x,
        this.y /= t.y,
        this.z /= t.z,
        this
    },
    divideScalar: function(t) {
        return 0 !== t ? (t = 1 / t,
        this.x *= t,
        this.y *= t,
        this.z *= t) : this.z = this.y = this.x = 0,
        this
    },
    min: function(t) {
        return this.x > t.x && (this.x = t.x),
        this.y > t.y && (this.y = t.y),
        this.z > t.z && (this.z = t.z),
        this
    },
    max: function(t) {
        return this.x < t.x && (this.x = t.x),
        this.y < t.y && (this.y = t.y),
        this.z < t.z && (this.z = t.z),
        this
    },
    clamp: function(t, e) {
        return this.x < t.x ? this.x = t.x : this.x > e.x && (this.x = e.x),
        this.y < t.y ? this.y = t.y : this.y > e.y && (this.y = e.y),
        this.z < t.z ? this.z = t.z : this.z > e.z && (this.z = e.z),
        this
    },
    clampScalar: function() {
        var t, e;
        return function(i, r) {
            return void 0 === t && (t = new THREE.Vector3,
            e = new THREE.Vector3),
            t.set(i, i, i),
            e.set(r, r, r),
            this.clamp(t, e)
        }
    }
    (),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this
    },
    roundToZero: function() {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z),
        this
    },
    negate: function() {
        return this.multiplyScalar(-1)
    },
    dot: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(t) {
        var e = this.length();
        return 0 !== e && t !== e && this.multiplyScalar(t / e),
        this
    },
    lerp: function(t, e) {
        return this.x += (t.x - this.x) * e,
        this.y += (t.y - this.y) * e,
        this.z += (t.z - this.z) * e,
        this
    },
    cross: function(t, e) {
        if (void 0 !== e)
            return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(t, e);
        var i = this.x
          , r = this.y
          , n = this.z;
        return this.x = r * t.z - n * t.y,
        this.y = n * t.x - i * t.z,
        this.z = i * t.y - r * t.x,
        this
    },
    crossVectors: function(t, e) {
        var i = t.x
          , r = t.y
          , n = t.z
          , o = e.x
          , a = e.y
          , s = e.z;
        return this.x = r * s - n * a,
        this.y = n * o - i * s,
        this.z = i * a - r * o,
        this
    },
    projectOnVector: function() {
        var t, e;
        return function(i) {
            return void 0 === t && (t = new THREE.Vector3),
            t.copy(i).normalize(),
            e = this.dot(t),
            this.copy(t).multiplyScalar(e)
        }
    }
    (),
    projectOnPlane: function() {
        var t;
        return function(e) {
            return void 0 === t && (t = new THREE.Vector3),
            t.copy(this).projectOnVector(e),
            this.sub(t)
        }
    }
    (),
    reflect: function() {
        var t;
        return function(e) {
            return void 0 === t && (t = new THREE.Vector3),
            this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
        }
    }
    (),
    angleTo: function(t) {
        return t = this.dot(t) / (this.length() * t.length()),
        Math.acos(THREE.Math.clamp(t, -1, 1))
    },
    distanceTo: function(t) {
        return Math.sqrt(this.distanceToSquared(t))
    },
    distanceToSquared: function(t) {
        var e = this.x - t.x
          , i = this.y - t.y;
        return t = this.z - t.z,
        e * e + i * i + t * t
    },
    setEulerFromRotationMatrix: function(t, e) {
        console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")
    },
    setEulerFromQuaternion: function(t, e) {
        console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")
    },
    getPositionFromMatrix: function(t) {
        return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),
        this.setFromMatrixPosition(t)
    },
    getScaleFromMatrix: function(t) {
        return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),
        this.setFromMatrixScale(t)
    },
    getColumnFromMatrix: function(t, e) {
        return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),
        this.setFromMatrixColumn(t, e)
    },
    setFromMatrixPosition: function(t) {
        return this.x = t.elements[12],
        this.y = t.elements[13],
        this.z = t.elements[14],
        this
    },
    setFromMatrixScale: function(t) {
        var e = this.set(t.elements[0], t.elements[1], t.elements[2]).length()
          , i = this.set(t.elements[4], t.elements[5], t.elements[6]).length();
        return t = this.set(t.elements[8], t.elements[9], t.elements[10]).length(),
        this.x = e,
        this.y = i,
        this.z = t,
        this
    },
    setFromMatrixColumn: function(t, e) {
        var i = 4 * t
          , r = e.elements;
        return this.x = r[i],
        this.y = r[i + 1],
        this.z = r[i + 2],
        this
    },
    equals: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z
    },
    fromArray: function(t) {
        return this.x = t[0],
        this.y = t[1],
        this.z = t[2],
        this
    },
    toArray: function() {
        return [this.x, this.y, this.z]
    },
    clone: function() {
        return new THREE.Vector3(this.x,this.y,this.z)
    }
},
THREE.Vector4 = function(t, e, i, r) {
    this.x = t || 0,
    this.y = e || 0,
    this.z = i || 0,
    this.w = void 0 !== r ? r : 1
}
,
THREE.Vector4.prototype = {
    constructor: THREE.Vector4,
    set: function(t, e, i, r) {
        return this.x = t,
        this.y = e,
        this.z = i,
        this.w = r,
        this
    },
    setX: function(t) {
        return this.x = t,
        this
    },
    setY: function(t) {
        return this.y = t,
        this
    },
    setZ: function(t) {
        return this.z = t,
        this
    },
    setW: function(t) {
        return this.w = t,
        this
    },
    setComponent: function(t, e) {
        switch (t) {
        case 0:
            this.x = e;
            break;
        case 1:
            this.y = e;
            break;
        case 2:
            this.z = e;
            break;
        case 3:
            this.w = e;
            break;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    getComponent: function(t) {
        switch (t) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        case 3:
            return this.w;
        default:
            throw Error("index is out of range: " + t)
        }
    },
    copy: function(t) {
        return this.x = t.x,
        this.y = t.y,
        this.z = t.z,
        this.w = void 0 !== t.w ? t.w : 1,
        this
    },
    add: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(t, e)) : (this.x += t.x,
        this.y += t.y,
        this.z += t.z,
        this.w += t.w,
        this)
    },
    addScalar: function(t) {
        return this.x += t,
        this.y += t,
        this.z += t,
        this.w += t,
        this
    },
    addVectors: function(t, e) {
        return this.x = t.x + e.x,
        this.y = t.y + e.y,
        this.z = t.z + e.z,
        this.w = t.w + e.w,
        this
    },
    sub: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(t, e)) : (this.x -= t.x,
        this.y -= t.y,
        this.z -= t.z,
        this.w -= t.w,
        this)
    },
    subVectors: function(t, e) {
        return this.x = t.x - e.x,
        this.y = t.y - e.y,
        this.z = t.z - e.z,
        this.w = t.w - e.w,
        this
    },
    multiplyScalar: function(t) {
        return this.x *= t,
        this.y *= t,
        this.z *= t,
        this.w *= t,
        this
    },
    applyMatrix4: function(t) {
        var e = this.x
          , i = this.y
          , r = this.z
          , n = this.w;
        return t = t.elements,
        this.x = t[0] * e + t[4] * i + t[8] * r + t[12] * n,
        this.y = t[1] * e + t[5] * i + t[9] * r + t[13] * n,
        this.z = t[2] * e + t[6] * i + t[10] * r + t[14] * n,
        this.w = t[3] * e + t[7] * i + t[11] * r + t[15] * n,
        this
    },
    divideScalar: function(t) {
        return 0 !== t ? (t = 1 / t,
        this.x *= t,
        this.y *= t,
        this.z *= t,
        this.w *= t) : (this.z = this.y = this.x = 0,
        this.w = 1),
        this
    },
    setAxisAngleFromQuaternion: function(t) {
        this.w = 2 * Math.acos(t.w);
        var e = Math.sqrt(1 - t.w * t.w);
        return 1e-4 > e ? (this.x = 1,
        this.z = this.y = 0) : (this.x = t.x / e,
        this.y = t.y / e,
        this.z = t.z / e),
        this
    },
    setAxisAngleFromRotationMatrix: function(t) {
        var e, i, r;
        t = t.elements;
        var n = t[0];
        r = t[4];
        var o = t[8]
          , a = t[1]
          , s = t[5]
          , l = t[9];
        i = t[2],
        e = t[6];
        var h = t[10];
        return .01 > Math.abs(r - a) && .01 > Math.abs(o - i) && .01 > Math.abs(l - e) ? .1 > Math.abs(r + a) && .1 > Math.abs(o + i) && .1 > Math.abs(l + e) && .1 > Math.abs(n + s + h - 3) ? (this.set(1, 0, 0, 0),
        this) : (t = Math.PI,
        n = (n + 1) / 2,
        s = (s + 1) / 2,
        h = (h + 1) / 2,
        r = (r + a) / 4,
        o = (o + i) / 4,
        l = (l + e) / 4,
        n > s && n > h ? .01 > n ? (e = 0,
        r = i = .707106781) : (e = Math.sqrt(n),
        i = r / e,
        r = o / e) : s > h ? .01 > s ? (e = .707106781,
        i = 0,
        r = .707106781) : (i = Math.sqrt(s),
        e = r / i,
        r = l / i) : .01 > h ? (i = e = .707106781,
        r = 0) : (r = Math.sqrt(h),
        e = o / r,
        i = l / r),
        this.set(e, i, r, t),
        this) : (t = Math.sqrt((e - l) * (e - l) + (o - i) * (o - i) + (a - r) * (a - r)),
        .001 > Math.abs(t) && (t = 1),
        this.x = (e - l) / t,
        this.y = (o - i) / t,
        this.z = (a - r) / t,
        this.w = Math.acos((n + s + h - 1) / 2),
        this)
    },
    min: function(t) {
        return this.x > t.x && (this.x = t.x),
        this.y > t.y && (this.y = t.y),
        this.z > t.z && (this.z = t.z),
        this.w > t.w && (this.w = t.w),
        this
    },
    max: function(t) {
        return this.x < t.x && (this.x = t.x),
        this.y < t.y && (this.y = t.y),
        this.z < t.z && (this.z = t.z),
        this.w < t.w && (this.w = t.w),
        this
    },
    clamp: function(t, e) {
        return this.x < t.x ? this.x = t.x : this.x > e.x && (this.x = e.x),
        this.y < t.y ? this.y = t.y : this.y > e.y && (this.y = e.y),
        this.z < t.z ? this.z = t.z : this.z > e.z && (this.z = e.z),
        this.w < t.w ? this.w = t.w : this.w > e.w && (this.w = e.w),
        this
    },
    clampScalar: function() {
        var t, e;
        return function(i, r) {
            return void 0 === t && (t = new THREE.Vector4,
            e = new THREE.Vector4),
            t.set(i, i, i, i),
            e.set(r, r, r, r),
            this.clamp(t, e)
        }
    }
    (),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this.w = Math.floor(this.w),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this.w = Math.ceil(this.w),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this.w = Math.round(this.w),
        this
    },
    roundToZero: function() {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z),
        this.w = 0 > this.w ? Math.ceil(this.w) : Math.floor(this.w),
        this
    },
    negate: function() {
        return this.multiplyScalar(-1)
    },
    dot: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(t) {
        var e = this.length();
        return 0 !== e && t !== e && this.multiplyScalar(t / e),
        this
    },
    lerp: function(t, e) {
        return this.x += (t.x - this.x) * e,
        this.y += (t.y - this.y) * e,
        this.z += (t.z - this.z) * e,
        this.w += (t.w - this.w) * e,
        this
    },
    equals: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
    },
    fromArray: function(t) {
        return this.x = t[0],
        this.y = t[1],
        this.z = t[2],
        this.w = t[3],
        this
    },
    toArray: function() {
        return [this.x, this.y, this.z, this.w]
    },
    clone: function() {
        return new THREE.Vector4(this.x,this.y,this.z,this.w)
    }
},
THREE.Euler = function(t, e, i, r) {
    this._x = t || 0,
    this._y = e || 0,
    this._z = i || 0,
    this._order = r || THREE.Euler.DefaultOrder
}
,
THREE.Euler.RotationOrders = "XYZ YZX ZXY XZY YXZ ZYX".split(" "),
THREE.Euler.DefaultOrder = "XYZ",
THREE.Euler.prototype = {
    constructor: THREE.Euler,
    _x: 0,
    _y: 0,
    _z: 0,
    _order: THREE.Euler.DefaultOrder,
    get x() {
        return this._x
    },
    set x(t) {
        this._x = t,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(t) {
        this._y = t,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(t) {
        this._z = t,
        this.onChangeCallback()
    },
    get order() {
        return this._order
    },
    set order(t) {
        this._order = t,
        this.onChangeCallback()
    },
    set: function(t, e, i, r) {
        return this._x = t,
        this._y = e,
        this._z = i,
        this._order = r || this._order,
        this.onChangeCallback(),
        this
    },
    copy: function(t) {
        return this._x = t._x,
        this._y = t._y,
        this._z = t._z,
        this._order = t._order,
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(t, e) {
        var i = THREE.Math.clamp
          , r = t.elements
          , n = r[0]
          , o = r[4]
          , a = r[8]
          , s = r[1]
          , l = r[5]
          , h = r[9]
          , c = r[2]
          , u = r[6]
          , r = r[10];
        return e = e || this._order,
        "XYZ" === e ? (this._y = Math.asin(i(a, -1, 1)),
        .99999 > Math.abs(a) ? (this._x = Math.atan2(-h, r),
        this._z = Math.atan2(-o, n)) : (this._x = Math.atan2(u, l),
        this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-i(h, -1, 1)),
        .99999 > Math.abs(h) ? (this._y = Math.atan2(a, r),
        this._z = Math.atan2(s, l)) : (this._y = Math.atan2(-c, n),
        this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(i(u, -1, 1)),
        .99999 > Math.abs(u) ? (this._y = Math.atan2(-c, r),
        this._z = Math.atan2(-o, l)) : (this._y = 0,
        this._z = Math.atan2(s, n))) : "ZYX" === e ? (this._y = Math.asin(-i(c, -1, 1)),
        .99999 > Math.abs(c) ? (this._x = Math.atan2(u, r),
        this._z = Math.atan2(s, n)) : (this._x = 0,
        this._z = Math.atan2(-o, l))) : "YZX" === e ? (this._z = Math.asin(i(s, -1, 1)),
        .99999 > Math.abs(s) ? (this._x = Math.atan2(-h, l),
        this._y = Math.atan2(-c, n)) : (this._x = 0,
        this._y = Math.atan2(a, r))) : "XZY" === e ? (this._z = Math.asin(-i(o, -1, 1)),
        .99999 > Math.abs(o) ? (this._x = Math.atan2(u, l),
        this._y = Math.atan2(a, n)) : (this._x = Math.atan2(-h, r),
        this._y = 0)) : console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: " + e),
        this._order = e,
        this.onChangeCallback(),
        this
    },
    setFromQuaternion: function(t, e, i) {
        var r = THREE.Math.clamp
          , n = t.x * t.x
          , o = t.y * t.y
          , a = t.z * t.z
          , s = t.w * t.w;
        return e = e || this._order,
        "XYZ" === e ? (this._x = Math.atan2(2 * (t.x * t.w - t.y * t.z), s - n - o + a),
        this._y = Math.asin(r(2 * (t.x * t.z + t.y * t.w), -1, 1)),
        this._z = Math.atan2(2 * (t.z * t.w - t.x * t.y), s + n - o - a)) : "YXZ" === e ? (this._x = Math.asin(r(2 * (t.x * t.w - t.y * t.z), -1, 1)),
        this._y = Math.atan2(2 * (t.x * t.z + t.y * t.w), s - n - o + a),
        this._z = Math.atan2(2 * (t.x * t.y + t.z * t.w), s - n + o - a)) : "ZXY" === e ? (this._x = Math.asin(r(2 * (t.x * t.w + t.y * t.z), -1, 1)),
        this._y = Math.atan2(2 * (t.y * t.w - t.z * t.x), s - n - o + a),
        this._z = Math.atan2(2 * (t.z * t.w - t.x * t.y), s - n + o - a)) : "ZYX" === e ? (this._x = Math.atan2(2 * (t.x * t.w + t.z * t.y), s - n - o + a),
        this._y = Math.asin(r(2 * (t.y * t.w - t.x * t.z), -1, 1)),
        this._z = Math.atan2(2 * (t.x * t.y + t.z * t.w), s + n - o - a)) : "YZX" === e ? (this._x = Math.atan2(2 * (t.x * t.w - t.z * t.y), s - n + o - a),
        this._y = Math.atan2(2 * (t.y * t.w - t.x * t.z), s + n - o - a),
        this._z = Math.asin(r(2 * (t.x * t.y + t.z * t.w), -1, 1))) : "XZY" === e ? (this._x = Math.atan2(2 * (t.x * t.w + t.y * t.z), s - n + o - a),
        this._y = Math.atan2(2 * (t.x * t.z + t.y * t.w), s + n - o - a),
        this._z = Math.asin(r(2 * (t.z * t.w - t.x * t.y), -1, 1))) : console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: " + e),
        this._order = e,
        !1 !== i && this.onChangeCallback(),
        this
    },
    reorder: function() {
        var t = new THREE.Quaternion;
        return function(e) {
            t.setFromEuler(this),
            this.setFromQuaternion(t, e)
        }
    }
    (),
    equals: function(t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
    },
    fromArray: function(t) {
        return this._x = t[0],
        this._y = t[1],
        this._z = t[2],
        void 0 !== t[3] && (this._order = t[3]),
        this.onChangeCallback(),
        this
    },
    toArray: function() {
        return [this._x, this._y, this._z, this._order]
    },
    onChange: function(t) {
        return this.onChangeCallback = t,
        this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Euler(this._x,this._y,this._z,this._order)
    }
},
THREE.Line3 = function(t, e) {
    this.start = void 0 !== t ? t : new THREE.Vector3,
    this.end = void 0 !== e ? e : new THREE.Vector3
}
,
THREE.Line3.prototype = {
    constructor: THREE.Line3,
    set: function(t, e) {
        return this.start.copy(t),
        this.end.copy(e),
        this
    },
    copy: function(t) {
        return this.start.copy(t.start),
        this.end.copy(t.end),
        this
    },
    center: function(t) {
        return (t || new THREE.Vector3).addVectors(this.start, this.end).multiplyScalar(.5)
    },
    delta: function(t) {
        return (t || new THREE.Vector3).subVectors(this.end, this.start)
    },
    distanceSq: function() {
        return this.start.distanceToSquared(this.end)
    },
    distance: function() {
        return this.start.distanceTo(this.end)
    },
    at: function(t, e) {
        var i = e || new THREE.Vector3;
        return this.delta(i).multiplyScalar(t).add(this.start)
    },
    closestPointToPointParameter: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3;
        return function(i, r) {
            t.subVectors(i, this.start),
            e.subVectors(this.end, this.start);
            var n = e.dot(e)
              , n = e.dot(t) / n;
            return r && (n = THREE.Math.clamp(n, 0, 1)),
            n
        }
    }
    (),
    closestPointToPoint: function(t, e, i) {
        return t = this.closestPointToPointParameter(t, e),
        i = i || new THREE.Vector3,
        this.delta(i).multiplyScalar(t).add(this.start)
    },
    applyMatrix4: function(t) {
        return this.start.applyMatrix4(t),
        this.end.applyMatrix4(t),
        this
    },
    equals: function(t) {
        return t.start.equals(this.start) && t.end.equals(this.end)
    },
    clone: function() {
        return (new THREE.Line3).copy(this)
    }
},
THREE.Box2 = function(t, e) {
    this.min = void 0 !== t ? t : new THREE.Vector2(1 / 0,1 / 0),
    this.max = void 0 !== e ? e : new THREE.Vector2(-(1 / 0),-(1 / 0))
}
,
THREE.Box2.prototype = {
    constructor: THREE.Box2,
    set: function(t, e) {
        return this.min.copy(t),
        this.max.copy(e),
        this
    },
    setFromPoints: function(t) {
        if (0 < t.length) {
            var e = t[0];
            this.min.copy(e),
            this.max.copy(e);
            for (var i = 1, r = t.length; r > i; i++)
                e = t[i],
                e.x < this.min.x ? this.min.x = e.x : e.x > this.max.x && (this.max.x = e.x),
                e.y < this.min.y ? this.min.y = e.y : e.y > this.max.y && (this.max.y = e.y)
        } else
            this.makeEmpty();
        return this
    },
    setFromCenterAndSize: function() {
        var t = new THREE.Vector2;
        return function(e, i) {
            var r = t.copy(i).multiplyScalar(.5);
            return this.min.copy(e).sub(r),
            this.max.copy(e).add(r),
            this
        }
    }
    (),
    copy: function(t) {
        return this.min.copy(t.min),
        this.max.copy(t.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0,
        this.max.x = this.max.y = -(1 / 0),
        this
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y
    },
    center: function(t) {
        return (t || new THREE.Vector2).addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(t) {
        return (t || new THREE.Vector2).subVectors(this.max, this.min)
    },
    expandByPoint: function(t) {
        return this.min.min(t),
        this.max.max(t),
        this
    },
    expandByVector: function(t) {
        return this.min.sub(t),
        this.max.add(t),
        this
    },
    expandByScalar: function(t) {
        return this.min.addScalar(-t),
        this.max.addScalar(t),
        this
    },
    containsPoint: function(t) {
        return t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y ? !1 : !0
    },
    containsBox: function(t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y ? !0 : !1
    },
    getParameter: function(t, e) {
        return (e || new THREE.Vector2).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
    },
    isIntersectionBox: function(t) {
        return t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y ? !1 : !0
    },
    clampPoint: function(t, e) {
        return (e || new THREE.Vector2).copy(t).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var t = new THREE.Vector2;
        return function(e) {
            return t.copy(e).clamp(this.min, this.max).sub(e).length()
        }
    }
    (),
    intersect: function(t) {
        return this.min.max(t.min),
        this.max.min(t.max),
        this
    },
    union: function(t) {
        return this.min.min(t.min),
        this.max.max(t.max),
        this
    },
    translate: function(t) {
        return this.min.add(t),
        this.max.add(t),
        this
    },
    equals: function(t) {
        return t.min.equals(this.min) && t.max.equals(this.max)
    },
    clone: function() {
        return (new THREE.Box2).copy(this)
    }
},
THREE.Box3 = function(t, e) {
    this.min = void 0 !== t ? t : new THREE.Vector3(1 / 0,1 / 0,1 / 0),
    this.max = void 0 !== e ? e : new THREE.Vector3(-(1 / 0),-(1 / 0),-(1 / 0))
}
,
THREE.Box3.prototype = {
    constructor: THREE.Box3,
    set: function(t, e) {
        return this.min.copy(t),
        this.max.copy(e),
        this
    },
    addPoint: function(t) {
        return t.x < this.min.x ? this.min.x = t.x : t.x > this.max.x && (this.max.x = t.x),
        t.y < this.min.y ? this.min.y = t.y : t.y > this.max.y && (this.max.y = t.y),
        t.z < this.min.z ? this.min.z = t.z : t.z > this.max.z && (this.max.z = t.z),
        this
    },
    setFromPoints: function(t) {
        if (0 < t.length) {
            var e = t[0];
            this.min.copy(e),
            this.max.copy(e);
            for (var e = 1, i = t.length; i > e; e++)
                this.addPoint(t[e])
        } else
            this.makeEmpty();
        return this
    },
    setFromCenterAndSize: function() {
        var t = new THREE.Vector3;
        return function(e, i) {
            var r = t.copy(i).multiplyScalar(.5);
            return this.min.copy(e).sub(r),
            this.max.copy(e).add(r),
            this
        }
    }
    (),
    setFromObject: function() {
        var t = new THREE.Vector3;
        return function(e) {
            var i = this;
            return e.updateMatrixWorld(!0),
            this.makeEmpty(),
            e.traverse(function(e) {
                if (void 0 !== e.geometry && void 0 !== e.geometry.vertices)
                    for (var r = e.geometry.vertices, n = 0, o = r.length; o > n; n++)
                        t.copy(r[n]),
                        t.applyMatrix4(e.matrixWorld),
                        i.expandByPoint(t)
            }
            ),
            this
        }
    }
    (),
    copy: function(t) {
        return this.min.copy(t.min),
        this.max.copy(t.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0,
        this.max.x = this.max.y = this.max.z = -(1 / 0),
        this
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
    },
    center: function(t) {
        return (t || new THREE.Vector3).addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(t) {
        return (t || new THREE.Vector3).subVectors(this.max, this.min)
    },
    expandByPoint: function(t) {
        return this.min.min(t),
        this.max.max(t),
        this
    },
    expandByVector: function(t) {
        return this.min.sub(t),
        this.max.add(t),
        this
    },
    expandByScalar: function(t) {
        return this.min.addScalar(-t),
        this.max.addScalar(t),
        this
    },
    containsPoint: function(t) {
        return t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z ? !1 : !0
    },
    containsBox: function(t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z ? !0 : !1
    },
    getParameter: function(t, e) {
        return (e || new THREE.Vector3).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
    },
    isIntersectionBox: function(t) {
        return t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z ? !1 : !0
    },
    clampPoint: function(t, e) {
        return (e || new THREE.Vector3).copy(t).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var t = new THREE.Vector3;
        return function(e) {
            return t.copy(e).clamp(this.min, this.max).sub(e).length()
        }
    }
    (),
    getBoundingSphere: function() {
        var t = new THREE.Vector3;
        return function(e) {
            return e = e || new THREE.Sphere,
            e.center = this.center(),
            e.radius = .5 * this.size(t).length(),
            e
        }
    }
    (),
    intersect: function(t) {
        return this.min.max(t.min),
        this.max.min(t.max),
        this
    },
    union: function(t) {
        return this.min.min(t.min),
        this.max.max(t.max),
        this
    },
    applyMatrix4: function() {
        var t = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
        return function(e) {
            return t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
            t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
            t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
            t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
            t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
            t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
            t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
            t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
            this.makeEmpty(),
            this.setFromPoints(t),
            this
        }
    }
    (),
    translate: function(t) {
        return this.min.add(t),
        this.max.add(t),
        this
    },
    equals: function(t) {
        return t.min.equals(this.min) && t.max.equals(this.max)
    },
    clone: function() {
        return (new THREE.Box3).copy(this)
    }
},
THREE.Matrix3 = function(t, e, i, r, n, o, a, s, l) {
    var h = this.elements = new Float32Array(9);
    h[0] = void 0 !== t ? t : 1,
    h[3] = e || 0,
    h[6] = i || 0,
    h[1] = r || 0,
    h[4] = void 0 !== n ? n : 1,
    h[7] = o || 0,
    h[2] = a || 0,
    h[5] = s || 0,
    h[8] = void 0 !== l ? l : 1
}
,
THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3,
    set: function(t, e, i, r, n, o, a, s, l) {
        var h = this.elements;
        return h[0] = t,
        h[3] = e,
        h[6] = i,
        h[1] = r,
        h[4] = n,
        h[7] = o,
        h[2] = a,
        h[5] = s,
        h[8] = l,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
        this
    },
    copy: function(t) {
        return t = t.elements,
        this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]),
        this
    },
    multiplyVector3: function(t) {
        return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
        t.applyMatrix3(this)
    },
    multiplyVector3Array: function(t) {
        return console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(t)
    },
    applyToVector3Array: function() {
        var t = new THREE.Vector3;
        return function(e, i, r) {
            void 0 === i && (i = 0),
            void 0 === r && (r = e.length);
            for (var n = 0; r > n; n += 3,
            i += 3)
                t.x = e[i],
                t.y = e[i + 1],
                t.z = e[i + 2],
                t.applyMatrix3(this),
                e[i] = t.x,
                e[i + 1] = t.y,
                e[i + 2] = t.z;
            return e
        }
    }
    (),
    multiplyScalar: function(t) {
        var e = this.elements;
        return e[0] *= t,
        e[3] *= t,
        e[6] *= t,
        e[1] *= t,
        e[4] *= t,
        e[7] *= t,
        e[2] *= t,
        e[5] *= t,
        e[8] *= t,
        this
    },
    determinant: function() {
        var t = this.elements
          , e = t[0]
          , i = t[1]
          , r = t[2]
          , n = t[3]
          , o = t[4]
          , a = t[5]
          , s = t[6]
          , l = t[7]
          , t = t[8];
        return e * o * t - e * a * l - i * n * t + i * a * s + r * n * l - r * o * s
    },
    getInverse: function(t, e) {
        var i = t.elements
          , r = this.elements;
        if (r[0] = i[10] * i[5] - i[6] * i[9],
        r[1] = -i[10] * i[1] + i[2] * i[9],
        r[2] = i[6] * i[1] - i[2] * i[5],
        r[3] = -i[10] * i[4] + i[6] * i[8],
        r[4] = i[10] * i[0] - i[2] * i[8],
        r[5] = -i[6] * i[0] + i[2] * i[4],
        r[6] = i[9] * i[4] - i[5] * i[8],
        r[7] = -i[9] * i[0] + i[1] * i[8],
        r[8] = i[5] * i[0] - i[1] * i[4],
        i = i[0] * r[0] + i[1] * r[3] + i[2] * r[6],
        0 === i) {
            if (e)
                throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");
            return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),
            this.identity(),
            this
        }
        return this.multiplyScalar(1 / i),
        this
    },
    transpose: function() {
        var t, e = this.elements;
        return t = e[1],
        e[1] = e[3],
        e[3] = t,
        t = e[2],
        e[2] = e[6],
        e[6] = t,
        t = e[5],
        e[5] = e[7],
        e[7] = t,
        this
    },
    flattenToArrayOffset: function(t, e) {
        var i = this.elements;
        return t[e] = i[0],
        t[e + 1] = i[1],
        t[e + 2] = i[2],
        t[e + 3] = i[3],
        t[e + 4] = i[4],
        t[e + 5] = i[5],
        t[e + 6] = i[6],
        t[e + 7] = i[7],
        t[e + 8] = i[8],
        t
    },
    getNormalMatrix: function(t) {
        return this.getInverse(t).transpose(),
        this
    },
    transposeIntoArray: function(t) {
        var e = this.elements;
        return t[0] = e[0],
        t[1] = e[3],
        t[2] = e[6],
        t[3] = e[1],
        t[4] = e[4],
        t[5] = e[7],
        t[6] = e[2],
        t[7] = e[5],
        t[8] = e[8],
        this
    },
    fromArray: function(t) {
        return this.elements.set(t),
        this
    },
    toArray: function() {
        var t = this.elements;
        return [t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8]]
    },
    clone: function() {
        var t = this.elements;
        return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])
    }
},
THREE.Matrix4 = function(t, e, i, r, n, o, a, s, l, h, c, u, p, d, f, m) {
    var g = this.elements = new Float32Array(16);
    g[0] = void 0 !== t ? t : 1,
    g[4] = e || 0,
    g[8] = i || 0,
    g[12] = r || 0,
    g[1] = n || 0,
    g[5] = void 0 !== o ? o : 1,
    g[9] = a || 0,
    g[13] = s || 0,
    g[2] = l || 0,
    g[6] = h || 0,
    g[10] = void 0 !== c ? c : 1,
    g[14] = u || 0,
    g[3] = p || 0,
    g[7] = d || 0,
    g[11] = f || 0,
    g[15] = void 0 !== m ? m : 1
}
,
THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4,
    set: function(t, e, i, r, n, o, a, s, l, h, c, u, p, d, f, m) {
        var g = this.elements;
        return g[0] = t,
        g[4] = e,
        g[8] = i,
        g[12] = r,
        g[1] = n,
        g[5] = o,
        g[9] = a,
        g[13] = s,
        g[2] = l,
        g[6] = h,
        g[10] = c,
        g[14] = u,
        g[3] = p,
        g[7] = d,
        g[11] = f,
        g[15] = m,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    copy: function(t) {
        return this.elements.set(t.elements),
        this
    },
    extractPosition: function(t) {
        return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),
        this.copyPosition(t)
    },
    copyPosition: function(t) {
        var e = this.elements;
        return t = t.elements,
        e[12] = t[12],
        e[13] = t[13],
        e[14] = t[14],
        this
    },
    extractRotation: function() {
        var t = new THREE.Vector3;
        return function(e) {
            var i = this.elements;
            e = e.elements;
            var r = 1 / t.set(e[0], e[1], e[2]).length()
              , n = 1 / t.set(e[4], e[5], e[6]).length()
              , o = 1 / t.set(e[8], e[9], e[10]).length();
            return i[0] = e[0] * r,
            i[1] = e[1] * r,
            i[2] = e[2] * r,
            i[4] = e[4] * n,
            i[5] = e[5] * n,
            i[6] = e[6] * n,
            i[8] = e[8] * o,
            i[9] = e[9] * o,
            i[10] = e[10] * o,
            this
        }
    }
    (),
    makeRotationFromEuler: function(t) {
        !1 == t instanceof THREE.Euler && console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
        var e = this.elements
          , i = t.x
          , r = t.y
          , n = t.z
          , o = Math.cos(i)
          , i = Math.sin(i)
          , a = Math.cos(r)
          , r = Math.sin(r)
          , s = Math.cos(n)
          , n = Math.sin(n);
        if ("XYZ" === t.order) {
            t = o * s;
            var l = o * n
              , h = i * s
              , c = i * n;
            e[0] = a * s,
            e[4] = -a * n,
            e[8] = r,
            e[1] = l + h * r,
            e[5] = t - c * r,
            e[9] = -i * a,
            e[2] = c - t * r,
            e[6] = h + l * r,
            e[10] = o * a
        } else
            "YXZ" === t.order ? (t = a * s,
            l = a * n,
            h = r * s,
            c = r * n,
            e[0] = t + c * i,
            e[4] = h * i - l,
            e[8] = o * r,
            e[1] = o * n,
            e[5] = o * s,
            e[9] = -i,
            e[2] = l * i - h,
            e[6] = c + t * i,
            e[10] = o * a) : "ZXY" === t.order ? (t = a * s,
            l = a * n,
            h = r * s,
            c = r * n,
            e[0] = t - c * i,
            e[4] = -o * n,
            e[8] = h + l * i,
            e[1] = l + h * i,
            e[5] = o * s,
            e[9] = c - t * i,
            e[2] = -o * r,
            e[6] = i,
            e[10] = o * a) : "ZYX" === t.order ? (t = o * s,
            l = o * n,
            h = i * s,
            c = i * n,
            e[0] = a * s,
            e[4] = h * r - l,
            e[8] = t * r + c,
            e[1] = a * n,
            e[5] = c * r + t,
            e[9] = l * r - h,
            e[2] = -r,
            e[6] = i * a,
            e[10] = o * a) : "YZX" === t.order ? (t = o * a,
            l = o * r,
            h = i * a,
            c = i * r,
            e[0] = a * s,
            e[4] = c - t * n,
            e[8] = h * n + l,
            e[1] = n,
            e[5] = o * s,
            e[9] = -i * s,
            e[2] = -r * s,
            e[6] = l * n + h,
            e[10] = t - c * n) : "XZY" === t.order && (t = o * a,
            l = o * r,
            h = i * a,
            c = i * r,
            e[0] = a * s,
            e[4] = -n,
            e[8] = r * s,
            e[1] = t * n + c,
            e[5] = o * s,
            e[9] = l * n - h,
            e[2] = h * n - l,
            e[6] = i * s,
            e[10] = c * n + t);
        return e[3] = 0,
        e[7] = 0,
        e[11] = 0,
        e[12] = 0,
        e[13] = 0,
        e[14] = 0,
        e[15] = 1,
        this
    },
    setRotationFromQuaternion: function(t) {
        return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),
        this.makeRotationFromQuaternion(t)
    },
    makeRotationFromQuaternion: function(t) {
        var e = this.elements
          , i = t.x
          , r = t.y
          , n = t.z
          , o = t.w
          , a = i + i
          , s = r + r
          , l = n + n;
        t = i * a;
        var h = i * s
          , i = i * l
          , c = r * s
          , r = r * l
          , n = n * l
          , a = o * a
          , s = o * s
          , o = o * l;
        return e[0] = 1 - (c + n),
        e[4] = h - o,
        e[8] = i + s,
        e[1] = h + o,
        e[5] = 1 - (t + n),
        e[9] = r - a,
        e[2] = i - s,
        e[6] = r + a,
        e[10] = 1 - (t + c),
        e[3] = 0,
        e[7] = 0,
        e[11] = 0,
        e[12] = 0,
        e[13] = 0,
        e[14] = 0,
        e[15] = 1,
        this
    },
    lookAt: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3
          , i = new THREE.Vector3;
        return function(r, n, o) {
            var a = this.elements;
            return i.subVectors(r, n).normalize(),
            0 === i.length() && (i.z = 1),
            t.crossVectors(o, i).normalize(),
            0 === t.length() && (i.x += 1e-4,
            t.crossVectors(o, i).normalize()),
            e.crossVectors(i, t),
            a[0] = t.x,
            a[4] = e.x,
            a[8] = i.x,
            a[1] = t.y,
            a[5] = e.y,
            a[9] = i.y,
            a[2] = t.z,
            a[6] = e.z,
            a[10] = i.z,
            this
        }
    }
    (),
    multiply: function(t, e) {
        return void 0 !== e ? (console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
        this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
    },
    multiplyMatrices: function(t, e) {
        var i = t.elements
          , r = e.elements
          , n = this.elements
          , o = i[0]
          , a = i[4]
          , s = i[8]
          , l = i[12]
          , h = i[1]
          , c = i[5]
          , u = i[9]
          , p = i[13]
          , d = i[2]
          , f = i[6]
          , m = i[10]
          , g = i[14]
          , E = i[3]
          , y = i[7]
          , v = i[11]
          , i = i[15]
          , _ = r[0]
          , x = r[4]
          , T = r[8]
          , w = r[12]
          , b = r[1]
          , R = r[5]
          , H = r[9]
          , S = r[13]
          , M = r[2]
          , C = r[6]
          , A = r[10]
          , P = r[14]
          , L = r[3]
          , D = r[7]
          , k = r[11]
          , r = r[15];
        return n[0] = o * _ + a * b + s * M + l * L,
        n[4] = o * x + a * R + s * C + l * D,
        n[8] = o * T + a * H + s * A + l * k,
        n[12] = o * w + a * S + s * P + l * r,
        n[1] = h * _ + c * b + u * M + p * L,
        n[5] = h * x + c * R + u * C + p * D,
        n[9] = h * T + c * H + u * A + p * k,
        n[13] = h * w + c * S + u * P + p * r,
        n[2] = d * _ + f * b + m * M + g * L,
        n[6] = d * x + f * R + m * C + g * D,
        n[10] = d * T + f * H + m * A + g * k,
        n[14] = d * w + f * S + m * P + g * r,
        n[3] = E * _ + y * b + v * M + i * L,
        n[7] = E * x + y * R + v * C + i * D,
        n[11] = E * T + y * H + v * A + i * k,
        n[15] = E * w + y * S + v * P + i * r,
        this
    },
    multiplyToArray: function(t, e, i) {
        var r = this.elements;
        return this.multiplyMatrices(t, e),
        i[0] = r[0],
        i[1] = r[1],
        i[2] = r[2],
        i[3] = r[3],
        i[4] = r[4],
        i[5] = r[5],
        i[6] = r[6],
        i[7] = r[7],
        i[8] = r[8],
        i[9] = r[9],
        i[10] = r[10],
        i[11] = r[11],
        i[12] = r[12],
        i[13] = r[13],
        i[14] = r[14],
        i[15] = r[15],
        this
    },
    multiplyScalar: function(t) {
        var e = this.elements;
        return e[0] *= t,
        e[4] *= t,
        e[8] *= t,
        e[12] *= t,
        e[1] *= t,
        e[5] *= t,
        e[9] *= t,
        e[13] *= t,
        e[2] *= t,
        e[6] *= t,
        e[10] *= t,
        e[14] *= t,
        e[3] *= t,
        e[7] *= t,
        e[11] *= t,
        e[15] *= t,
        this
    },
    multiplyVector3: function(t) {
        return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),
        t.applyProjection(this)
    },
    multiplyVector4: function(t) {
        return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        t.applyMatrix4(this)
    },
    multiplyVector3Array: function(t) {
        return console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(t)
    },
    applyToVector3Array: function() {
        var t = new THREE.Vector3;
        return function(e, i, r) {
            void 0 === i && (i = 0),
            void 0 === r && (r = e.length);
            for (var n = 0; r > n; n += 3,
            i += 3)
                t.x = e[i],
                t.y = e[i + 1],
                t.z = e[i + 2],
                t.applyMatrix4(this),
                e[i] = t.x,
                e[i + 1] = t.y,
                e[i + 2] = t.z;
            return e
        }
    }
    (),
    rotateAxis: function(t) {
        console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
        t.transformDirection(this)
    },
    crossVector: function(t) {
        return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        t.applyMatrix4(this)
    },
    determinant: function() {
        var t = this.elements
          , e = t[0]
          , i = t[4]
          , r = t[8]
          , n = t[12]
          , o = t[1]
          , a = t[5]
          , s = t[9]
          , l = t[13]
          , h = t[2]
          , c = t[6]
          , u = t[10]
          , p = t[14];
        return t[3] * (+n * s * c - r * l * c - n * a * u + i * l * u + r * a * p - i * s * p) + t[7] * (+e * s * p - e * l * u + n * o * u - r * o * p + r * l * h - n * s * h) + t[11] * (+e * l * c - e * a * p - n * o * c + i * o * p + n * a * h - i * l * h) + t[15] * (-r * a * h - e * s * c + e * a * u + r * o * c - i * o * u + i * s * h)
    },
    transpose: function() {
        var t, e = this.elements;
        return t = e[1],
        e[1] = e[4],
        e[4] = t,
        t = e[2],
        e[2] = e[8],
        e[8] = t,
        t = e[6],
        e[6] = e[9],
        e[9] = t,
        t = e[3],
        e[3] = e[12],
        e[12] = t,
        t = e[7],
        e[7] = e[13],
        e[13] = t,
        t = e[11],
        e[11] = e[14],
        e[14] = t,
        this
    },
    flattenToArrayOffset: function(t, e) {
        var i = this.elements;
        return t[e] = i[0],
        t[e + 1] = i[1],
        t[e + 2] = i[2],
        t[e + 3] = i[3],
        t[e + 4] = i[4],
        t[e + 5] = i[5],
        t[e + 6] = i[6],
        t[e + 7] = i[7],
        t[e + 8] = i[8],
        t[e + 9] = i[9],
        t[e + 10] = i[10],
        t[e + 11] = i[11],
        t[e + 12] = i[12],
        t[e + 13] = i[13],
        t[e + 14] = i[14],
        t[e + 15] = i[15],
        t
    },
    getPosition: function() {
        var t = new THREE.Vector3;
        return function() {
            console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
            var e = this.elements;
            return t.set(e[12], e[13], e[14])
        }
    }
    (),
    setPosition: function(t) {
        var e = this.elements;
        return e[12] = t.x,
        e[13] = t.y,
        e[14] = t.z,
        this
    },
    getInverse: function(t, e) {
        var i = this.elements
          , r = t.elements
          , n = r[0]
          , o = r[4]
          , a = r[8]
          , s = r[12]
          , l = r[1]
          , h = r[5]
          , c = r[9]
          , u = r[13]
          , p = r[2]
          , d = r[6]
          , f = r[10]
          , m = r[14]
          , g = r[3]
          , E = r[7]
          , y = r[11]
          , r = r[15];
        if (i[0] = c * m * E - u * f * E + u * d * y - h * m * y - c * d * r + h * f * r,
        i[4] = s * f * E - a * m * E - s * d * y + o * m * y + a * d * r - o * f * r,
        i[8] = a * u * E - s * c * E + s * h * y - o * u * y - a * h * r + o * c * r,
        i[12] = s * c * d - a * u * d - s * h * f + o * u * f + a * h * m - o * c * m,
        i[1] = u * f * g - c * m * g - u * p * y + l * m * y + c * p * r - l * f * r,
        i[5] = a * m * g - s * f * g + s * p * y - n * m * y - a * p * r + n * f * r,
        i[9] = s * c * g - a * u * g - s * l * y + n * u * y + a * l * r - n * c * r,
        i[13] = a * u * p - s * c * p + s * l * f - n * u * f - a * l * m + n * c * m,
        i[2] = h * m * g - u * d * g + u * p * E - l * m * E - h * p * r + l * d * r,
        i[6] = s * d * g - o * m * g - s * p * E + n * m * E + o * p * r - n * d * r,
        i[10] = o * u * g - s * h * g + s * l * E - n * u * E - o * l * r + n * h * r,
        i[14] = s * h * p - o * u * p - s * l * d + n * u * d + o * l * m - n * h * m,
        i[3] = c * d * g - h * f * g - c * p * E + l * f * E + h * p * y - l * d * y,
        i[7] = o * f * g - a * d * g + a * p * E - n * f * E - o * p * y + n * d * y,
        i[11] = a * h * g - o * c * g - a * l * E + n * c * E + o * l * y - n * h * y,
        i[15] = o * c * p - a * h * p + a * l * d - n * c * d - o * l * f + n * h * f,
        i = n * i[0] + l * i[4] + p * i[8] + g * i[12],
        0 == i) {
            if (e)
                throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
            return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),
            this.identity(),
            this
        }
        return this.multiplyScalar(1 / i),
        this
    },
    translate: function(t) {
        console.warn("DEPRECATED: Matrix4's .translate() has been removed.")
    },
    rotateX: function(t) {
        console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")
    },
    rotateY: function(t) {
        console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")
    },
    rotateZ: function(t) {
        console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")
    },
    rotateByAxis: function(t, e) {
        console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")
    },
    scale: function(t) {
        var e = this.elements
          , i = t.x
          , r = t.y;
        return t = t.z,
        e[0] *= i,
        e[4] *= r,
        e[8] *= t,
        e[1] *= i,
        e[5] *= r,
        e[9] *= t,
        e[2] *= i,
        e[6] *= r,
        e[10] *= t,
        e[3] *= i,
        e[7] *= r,
        e[11] *= t,
        this
    },
    getMaxScaleOnAxis: function() {
        var t = this.elements;
        return Math.sqrt(Math.max(t[0] * t[0] + t[1] * t[1] + t[2] * t[2], Math.max(t[4] * t[4] + t[5] * t[5] + t[6] * t[6], t[8] * t[8] + t[9] * t[9] + t[10] * t[10])))
    },
    makeTranslation: function(t, e, i) {
        return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1),
        this
    },
    makeRotationX: function(t) {
        var e = Math.cos(t);
        return t = Math.sin(t),
        this.set(1, 0, 0, 0, 0, e, -t, 0, 0, t, e, 0, 0, 0, 0, 1),
        this
    },
    makeRotationY: function(t) {
        var e = Math.cos(t);
        return t = Math.sin(t),
        this.set(e, 0, t, 0, 0, 1, 0, 0, -t, 0, e, 0, 0, 0, 0, 1),
        this
    },
    makeRotationZ: function(t) {
        var e = Math.cos(t);
        return t = Math.sin(t),
        this.set(e, -t, 0, 0, t, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    makeRotationAxis: function(t, e) {
        var i = Math.cos(e)
          , r = Math.sin(e)
          , n = 1 - i
          , o = t.x
          , a = t.y
          , s = t.z
          , l = n * o
          , h = n * a;
        return this.set(l * o + i, l * a - r * s, l * s + r * a, 0, l * a + r * s, h * a + i, h * s - r * o, 0, l * s - r * a, h * s + r * o, n * s * s + i, 0, 0, 0, 0, 1),
        this
    },
    makeScale: function(t, e, i) {
        return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1),
        this
    },
    compose: function(t, e, i) {
        return this.makeRotationFromQuaternion(e),
        this.scale(i),
        this.setPosition(t),
        this
    },
    decompose: function() {
        var t = new THREE.Vector3
          , e = new THREE.Matrix4;
        return function(i, r, n) {
            var o = this.elements
              , a = t.set(o[0], o[1], o[2]).length()
              , s = t.set(o[4], o[5], o[6]).length()
              , l = t.set(o[8], o[9], o[10]).length();
            0 > this.determinant() && (a = -a),
            i.x = o[12],
            i.y = o[13],
            i.z = o[14],
            e.elements.set(this.elements),
            i = 1 / a;
            var o = 1 / s
              , h = 1 / l;
            return e.elements[0] *= i,
            e.elements[1] *= i,
            e.elements[2] *= i,
            e.elements[4] *= o,
            e.elements[5] *= o,
            e.elements[6] *= o,
            e.elements[8] *= h,
            e.elements[9] *= h,
            e.elements[10] *= h,
            r.setFromRotationMatrix(e),
            n.x = a,
            n.y = s,
            n.z = l,
            this
        }
    }
    (),
    makeFrustum: function(t, e, i, r, n, o) {
        var a = this.elements;
        return a[0] = 2 * n / (e - t),
        a[4] = 0,
        a[8] = (e + t) / (e - t),
        a[12] = 0,
        a[1] = 0,
        a[5] = 2 * n / (r - i),
        a[9] = (r + i) / (r - i),
        a[13] = 0,
        a[2] = 0,
        a[6] = 0,
        a[10] = -(o + n) / (o - n),
        a[14] = -2 * o * n / (o - n),
        a[3] = 0,
        a[7] = 0,
        a[11] = -1,
        a[15] = 0,
        this
    },
    makePerspective: function(t, e, i, r) {
        t = i * Math.tan(THREE.Math.degToRad(.5 * t));
        var n = -t;
        return this.makeFrustum(n * e, t * e, n, t, i, r)
    },
    makeOrthographic: function(t, e, i, r, n, o) {
        var a = this.elements
          , s = e - t
          , l = i - r
          , h = o - n;
        return a[0] = 2 / s,
        a[4] = 0,
        a[8] = 0,
        a[12] = -((e + t) / s),
        a[1] = 0,
        a[5] = 2 / l,
        a[9] = 0,
        a[13] = -((i + r) / l),
        a[2] = 0,
        a[6] = 0,
        a[10] = -2 / h,
        a[14] = -((o + n) / h),
        a[3] = 0,
        a[7] = 0,
        a[11] = 0,
        a[15] = 1,
        this
    },
    fromArray: function(t) {
        return this.elements.set(t),
        this
    },
    toArray: function() {
        var t = this.elements;
        return [t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]]
    },
    clone: function() {
        var t = this.elements;
        return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])
    }
},
THREE.Ray = function(t, e) {
    this.origin = void 0 !== t ? t : new THREE.Vector3,
    this.direction = void 0 !== e ? e : new THREE.Vector3
}
,
THREE.Ray.prototype = {
    constructor: THREE.Ray,
    set: function(t, e) {
        return this.origin.copy(t),
        this.direction.copy(e),
        this
    },
    copy: function(t) {
        return this.origin.copy(t.origin),
        this.direction.copy(t.direction),
        this
    },
    at: function(t, e) {
        return (e || new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)
    },
    recast: function() {
        var t = new THREE.Vector3;
        return function(e) {
            return this.origin.copy(this.at(e, t)),
            this
        }
    }
    (),
    closestPointToPoint: function(t, e) {
        var i = e || new THREE.Vector3;
        i.subVectors(t, this.origin);
        var r = i.dot(this.direction);
        return 0 > r ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(r).add(this.origin)
    },
    distanceToPoint: function() {
        var t = new THREE.Vector3;
        return function(e) {
            var i = t.subVectors(e, this.origin).dot(this.direction);
            return 0 > i ? this.origin.distanceTo(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin),
            t.distanceTo(e))
        }
    }
    (),
    distanceSqToSegment: function(t, e, i, r) {
        var n = t.clone().add(e).multiplyScalar(.5)
          , o = e.clone().sub(t).normalize()
          , a = .5 * t.distanceTo(e)
          , s = this.origin.clone().sub(n);
        t = -this.direction.dot(o),
        e = s.dot(this.direction);
        var l, h, c = -s.dot(o), u = s.lengthSq(), p = Math.abs(1 - t * t);
        return p >= 0 ? (s = t * c - e,
        l = t * e - c,
        h = a * p,
        s >= 0 ? l >= -h ? h >= l ? (a = 1 / p,
        s *= a,
        l *= a,
        t = s * (s + t * l + 2 * e) + l * (t * s + l + 2 * c) + u) : (l = a,
        s = Math.max(0, -(t * l + e)),
        t = -s * s + l * (l + 2 * c) + u) : (l = -a,
        s = Math.max(0, -(t * l + e)),
        t = -s * s + l * (l + 2 * c) + u) : -h >= l ? (s = Math.max(0, -(-t * a + e)),
        l = s > 0 ? -a : Math.min(Math.max(-a, -c), a),
        t = -s * s + l * (l + 2 * c) + u) : h >= l ? (s = 0,
        l = Math.min(Math.max(-a, -c), a),
        t = l * (l + 2 * c) + u) : (s = Math.max(0, -(t * a + e)),
        l = s > 0 ? a : Math.min(Math.max(-a, -c), a),
        t = -s * s + l * (l + 2 * c) + u)) : (l = t > 0 ? -a : a,
        s = Math.max(0, -(t * l + e)),
        t = -s * s + l * (l + 2 * c) + u),
        i && i.copy(this.direction.clone().multiplyScalar(s).add(this.origin)),
        r && r.copy(o.clone().multiplyScalar(l).add(n)),
        t
    },
    isIntersectionSphere: function(t) {
        return this.distanceToPoint(t.center) <= t.radius
    },
    isIntersectionPlane: function(t) {
        var e = t.distanceToPoint(this.origin);
        return 0 === e || 0 > t.normal.dot(this.direction) * e ? !0 : !1
    },
    distanceToPlane: function(t) {
        var e = t.normal.dot(this.direction);
        return 0 == e ? 0 == t.distanceToPoint(this.origin) ? 0 : null  : (t = -(this.origin.dot(t.normal) + t.constant) / e,
        t >= 0 ? t : null )
    },
    intersectPlane: function(t, e) {
        var i = this.distanceToPlane(t);
        return null  === i ? null  : this.at(i, e)
    },
    isIntersectionBox: function() {
        var t = new THREE.Vector3;
        return function(e) {
            return null  !== this.intersectBox(e, t)
        }
    }
    (),
    intersectBox: function(t, e) {
        var i, r, n, o, a;
        r = 1 / this.direction.x,
        o = 1 / this.direction.y,
        a = 1 / this.direction.z;
        var s = this.origin;
        return r >= 0 ? (i = (t.min.x - s.x) * r,
        r *= t.max.x - s.x) : (i = (t.max.x - s.x) * r,
        r *= t.min.x - s.x),
        o >= 0 ? (n = (t.min.y - s.y) * o,
        o *= t.max.y - s.y) : (n = (t.max.y - s.y) * o,
        o *= t.min.y - s.y),
        i > o || n > r ? null  : ((n > i || i !== i) && (i = n),
        (r > o || r !== r) && (r = o),
        a >= 0 ? (n = (t.min.z - s.z) * a,
        a *= t.max.z - s.z) : (n = (t.max.z - s.z) * a,
        a *= t.min.z - s.z),
        i > a || n > r ? null  : ((n > i || i !== i) && (i = n),
        (r > a || r !== r) && (r = a),
        0 > r ? null  : this.at(i >= 0 ? i : r, e)))
    },
    intersectTriangle: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3
          , i = new THREE.Vector3
          , r = new THREE.Vector3;
        return function(n, o, a, s, l) {
            if (e.subVectors(o, n),
            i.subVectors(a, n),
            r.crossVectors(e, i),
            o = this.direction.dot(r),
            o > 0) {
                if (s)
                    return null ;
                s = 1
            } else {
                if (!(0 > o))
                    return null ;
                s = -1,
                o = -o
            }
            return t.subVectors(this.origin, n),
            n = s * this.direction.dot(i.crossVectors(t, i)),
            0 > n ? null  : (a = s * this.direction.dot(e.cross(t)),
            0 > a || n + a > o ? null  : (n = -s * t.dot(r),
            0 > n ? null  : this.at(n / o, l)))
        }
    }
    (),
    applyMatrix4: function(t) {
        return this.direction.add(this.origin).applyMatrix4(t),
        this.origin.applyMatrix4(t),
        this.direction.sub(this.origin),
        this.direction.normalize(),
        this
    },
    equals: function(t) {
        return t.origin.equals(this.origin) && t.direction.equals(this.direction)
    },
    clone: function() {
        return (new THREE.Ray).copy(this)
    }
},
THREE.Sphere = function(t, e) {
    this.center = void 0 !== t ? t : new THREE.Vector3,
    this.radius = void 0 !== e ? e : 0
}
,
THREE.Sphere.prototype = {
    constructor: THREE.Sphere,
    set: function(t, e) {
        return this.center.copy(t),
        this.radius = e,
        this
    },
    setFromPoints: function() {
        var t = new THREE.Box3;
        return function(e, i) {
            var r = this.center;
            void 0 !== i ? r.copy(i) : t.setFromPoints(e).center(r);
            for (var n = 0, o = 0, a = e.length; a > o; o++)
                n = Math.max(n, r.distanceToSquared(e[o]));
            return this.radius = Math.sqrt(n),
            this
        }
    }
    (),
    copy: function(t) {
        return this.center.copy(t.center),
        this.radius = t.radius,
        this
    },
    empty: function() {
        return 0 >= this.radius
    },
    containsPoint: function(t) {
        return t.distanceToSquared(this.center) <= this.radius * this.radius
    },
    distanceToPoint: function(t) {
        return t.distanceTo(this.center) - this.radius
    },
    intersectsSphere: function(t) {
        var e = this.radius + t.radius;
        return t.center.distanceToSquared(this.center) <= e * e
    },
    clampPoint: function(t, e) {
        var i = this.center.distanceToSquared(t)
          , r = e || new THREE.Vector3;
        return r.copy(t),
        i > this.radius * this.radius && (r.sub(this.center).normalize(),
        r.multiplyScalar(this.radius).add(this.center)),
        r
    },
    getBoundingBox: function(t) {
        return t = t || new THREE.Box3,
        t.set(this.center, this.center),
        t.expandByScalar(this.radius),
        t
    },
    applyMatrix4: function(t) {
        return this.center.applyMatrix4(t),
        this.radius *= t.getMaxScaleOnAxis(),
        this
    },
    translate: function(t) {
        return this.center.add(t),
        this
    },
    equals: function(t) {
        return t.center.equals(this.center) && t.radius === this.radius
    },
    clone: function() {
        return (new THREE.Sphere).copy(this)
    }
},
THREE.Frustum = function(t, e, i, r, n, o) {
    this.planes = [void 0 !== t ? t : new THREE.Plane, void 0 !== e ? e : new THREE.Plane, void 0 !== i ? i : new THREE.Plane, void 0 !== r ? r : new THREE.Plane, void 0 !== n ? n : new THREE.Plane, void 0 !== o ? o : new THREE.Plane]
}
,
THREE.Frustum.prototype = {
    constructor: THREE.Frustum,
    set: function(t, e, i, r, n, o) {
        var a = this.planes;
        return a[0].copy(t),
        a[1].copy(e),
        a[2].copy(i),
        a[3].copy(r),
        a[4].copy(n),
        a[5].copy(o),
        this
    },
    copy: function(t) {
        for (var e = this.planes, i = 0; 6 > i; i++)
            e[i].copy(t.planes[i]);
        return this
    },
    setFromMatrix: function(t) {
        var e = this.planes
          , i = t.elements;
        t = i[0];
        var r = i[1]
          , n = i[2]
          , o = i[3]
          , a = i[4]
          , s = i[5]
          , l = i[6]
          , h = i[7]
          , c = i[8]
          , u = i[9]
          , p = i[10]
          , d = i[11]
          , f = i[12]
          , m = i[13]
          , g = i[14]
          , i = i[15];
        return e[0].setComponents(o - t, h - a, d - c, i - f).normalize(),
        e[1].setComponents(o + t, h + a, d + c, i + f).normalize(),
        e[2].setComponents(o + r, h + s, d + u, i + m).normalize(),
        e[3].setComponents(o - r, h - s, d - u, i - m).normalize(),
        e[4].setComponents(o - n, h - l, d - p, i - g).normalize(),
        e[5].setComponents(o + n, h + l, d + p, i + g).normalize(),
        this
    },
    intersectsObject: function() {
        var t = new THREE.Sphere;
        return function(e) {
            var i = e.geometry;
            return null  === i.boundingSphere && i.computeBoundingSphere(),
            t.copy(i.boundingSphere),
            t.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(t)
        }
    }
    (),
    intersectsSphere: function(t) {
        var e = this.planes
          , i = t.center;
        t = -t.radius;
        for (var r = 0; 6 > r; r++)
            if (e[r].distanceToPoint(i) < t)
                return !1;
        return !0
    },
    intersectsBox: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3;
        return function(i) {
            for (var r = this.planes, n = 0; 6 > n; n++) {
                var o = r[n];
                t.x = 0 < o.normal.x ? i.min.x : i.max.x,
                e.x = 0 < o.normal.x ? i.max.x : i.min.x,
                t.y = 0 < o.normal.y ? i.min.y : i.max.y,
                e.y = 0 < o.normal.y ? i.max.y : i.min.y,
                t.z = 0 < o.normal.z ? i.min.z : i.max.z,
                e.z = 0 < o.normal.z ? i.max.z : i.min.z;
                var a = o.distanceToPoint(t)
                  , o = o.distanceToPoint(e);
                if (0 > a && 0 > o)
                    return !1
            }
            return !0
        }
    }
    (),
    containsPoint: function(t) {
        for (var e = this.planes, i = 0; 6 > i; i++)
            if (0 > e[i].distanceToPoint(t))
                return !1;
        return !0
    },
    clone: function() {
        return (new THREE.Frustum).copy(this)
    }
},
THREE.Plane = function(t, e) {
    this.normal = void 0 !== t ? t : new THREE.Vector3(1,0,0),
    this.constant = void 0 !== e ? e : 0
}
,
THREE.Plane.prototype = {
    constructor: THREE.Plane,
    set: function(t, e) {
        return this.normal.copy(t),
        this.constant = e,
        this
    },
    setComponents: function(t, e, i, r) {
        return this.normal.set(t, e, i),
        this.constant = r,
        this
    },
    setFromNormalAndCoplanarPoint: function(t, e) {
        return this.normal.copy(t),
        this.constant = -e.dot(this.normal),
        this
    },
    setFromCoplanarPoints: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3;
        return function(i, r, n) {
            return r = t.subVectors(n, r).cross(e.subVectors(i, r)).normalize(),
            this.setFromNormalAndCoplanarPoint(r, i),
            this
        }
    }
    (),
    copy: function(t) {
        return this.normal.copy(t.normal),
        this.constant = t.constant,
        this
    },
    normalize: function() {
        var t = 1 / this.normal.length();
        return this.normal.multiplyScalar(t),
        this.constant *= t,
        this
    },
    negate: function() {
        return this.constant *= -1,
        this.normal.negate(),
        this
    },
    distanceToPoint: function(t) {
        return this.normal.dot(t) + this.constant
    },
    distanceToSphere: function(t) {
        return this.distanceToPoint(t.center) - t.radius
    },
    projectPoint: function(t, e) {
        return this.orthoPoint(t, e).sub(t).negate()
    },
    orthoPoint: function(t, e) {
        var i = this.distanceToPoint(t);
        return (e || new THREE.Vector3).copy(this.normal).multiplyScalar(i)
    },
    isIntersectionLine: function(t) {
        var e = this.distanceToPoint(t.start);
        return t = this.distanceToPoint(t.end),
        0 > e && t > 0 || 0 > t && e > 0
    },
    intersectLine: function() {
        var t = new THREE.Vector3;
        return function(e, i) {
            var r = i || new THREE.Vector3
              , n = e.delta(t)
              , o = this.normal.dot(n);
            return 0 != o ? (o = -(e.start.dot(this.normal) + this.constant) / o,
            0 > o || o > 1 ? void 0 : r.copy(n).multiplyScalar(o).add(e.start)) : 0 == this.distanceToPoint(e.start) ? r.copy(e.start) : void 0
        }
    }
    (),
    coplanarPoint: function(t) {
        return (t || new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)
    },
    applyMatrix4: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3
          , i = new THREE.Matrix3;
        return function(r, n) {
            var o = n || i.getNormalMatrix(r)
              , o = t.copy(this.normal).applyMatrix3(o)
              , a = this.coplanarPoint(e);
            return a.applyMatrix4(r),
            this.setFromNormalAndCoplanarPoint(o, a),
            this
        }
    }
    (),
    translate: function(t) {
        return this.constant -= t.dot(this.normal),
        this
    },
    equals: function(t) {
        return t.normal.equals(this.normal) && t.constant == this.constant
    },
    clone: function() {
        return (new THREE.Plane).copy(this)
    }
},
THREE.Math = {
    generateUUID: function() {
        var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = Array(36), r = 0;
        return function() {
            for (var n = 0; 36 > n; n++)
                8 == n || 13 == n || 18 == n || 23 == n ? i[n] = "-" : 14 == n ? i[n] = "4" : (2 >= r && (r = 33554432 + 16777216 * Math.random() | 0),
                t = 15 & r,
                r >>= 4,
                i[n] = e[19 == n ? 3 & t | 8 : t]);
            return i.join("")
        }
    }
    (),
    clamp: function(t, e, i) {
        return e > t ? e : t > i ? i : t
    },
    clampBottom: function(t, e) {
        return e > t ? e : t
    },
    mapLinear: function(t, e, i, r, n) {
        return r + (t - e) * (n - r) / (i - e)
    },
    smoothstep: function(t, e, i) {
        return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e),
        t * t * (3 - 2 * t))
    },
    smootherstep: function(t, e, i) {
        return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e),
        t * t * t * (t * (6 * t - 15) + 10))
    },
    random16: function() {
        return (65280 * Math.random() + 255 * Math.random()) / 65535
    },
    randInt: function(t, e) {
        return t + Math.floor(Math.random() * (e - t + 1))
    },
    randFloat: function(t, e) {
        return t + Math.random() * (e - t)
    },
    randFloatSpread: function(t) {
        return t * (.5 - Math.random())
    },
    sign: function(t) {
        return 0 > t ? -1 : t > 0 ? 1 : 0
    },
    degToRad: function() {
        var t = Math.PI / 180;
        return function(e) {
            return e * t
        }
    }
    (),
    radToDeg: function() {
        var t = 180 / Math.PI;
        return function(e) {
            return e * t
        }
    }
    (),
    isPowerOfTwo: function(t) {
        return 0 === (t & t - 1) && 0 !== t
    }
},
THREE.Spline = function(t) {
    function e(t, e, i, r, n, o, a) {
        return t = .5 * (i - t),
        r = .5 * (r - e),
        (2 * (e - i) + t + r) * a + (-3 * (e - i) - 2 * t - r) * o + t * n + e
    }
    this.points = t;
    var i, r, n, o, a, s, l, h, c, u = [], p = {
        x: 0,
        y: 0,
        z: 0
    };
    this.initFromArray = function(t) {
        this.points = [];
        for (var e = 0; e < t.length; e++)
            this.points[e] = {
                x: t[e][0],
                y: t[e][1],
                z: t[e][2]
            }
    }
    ,
    this.getPoint = function(t) {
        return i = (this.points.length - 1) * t,
        r = Math.floor(i),
        n = i - r,
        u[0] = 0 === r ? r : r - 1,
        u[1] = r,
        u[2] = r > this.points.length - 2 ? this.points.length - 1 : r + 1,
        u[3] = r > this.points.length - 3 ? this.points.length - 1 : r + 2,
        s = this.points[u[0]],
        l = this.points[u[1]],
        h = this.points[u[2]],
        c = this.points[u[3]],
        o = n * n,
        a = n * o,
        p.x = e(s.x, l.x, h.x, c.x, n, o, a),
        p.y = e(s.y, l.y, h.y, c.y, n, o, a),
        p.z = e(s.z, l.z, h.z, c.z, n, o, a),
        p
    }
    ,
    this.getControlPointsArray = function() {
        var t, e, i = this.points.length, r = [];
        for (t = 0; i > t; t++)
            e = this.points[t],
            r[t] = [e.x, e.y, e.z];
        return r
    }
    ,
    this.getLength = function(t) {
        var e, i, r, n = e = e = 0, o = new THREE.Vector3, a = new THREE.Vector3, s = [], l = 0;
        for (s[0] = 0,
        t || (t = 100),
        i = this.points.length * t,
        o.copy(this.points[0]),
        t = 1; i > t; t++)
            e = t / i,
            r = this.getPoint(e),
            a.copy(r),
            l += a.distanceTo(o),
            o.copy(r),
            e *= this.points.length - 1,
            e = Math.floor(e),
            e != n && (s[e] = l,
            n = e);
        return s[s.length] = l,
        {
            chunks: s,
            total: l
        }
    }
    ,
    this.reparametrizeByArcLength = function(t) {
        var e, i, r, n, o, a, s = [], l = new THREE.Vector3, h = this.getLength();
        for (s.push(l.copy(this.points[0]).clone()),
        e = 1; e < this.points.length; e++) {
            for (i = h.chunks[e] - h.chunks[e - 1],
            a = Math.ceil(t * i / h.total),
            n = (e - 1) / (this.points.length - 1),
            o = e / (this.points.length - 1),
            i = 1; a - 1 > i; i++)
                r = n + 1 / a * i * (o - n),
                r = this.getPoint(r),
                s.push(l.copy(r).clone());
            s.push(l.copy(this.points[e]).clone())
        }
        this.points = s
    }
}
,
THREE.Triangle = function(t, e, i) {
    this.a = void 0 !== t ? t : new THREE.Vector3,
    this.b = void 0 !== e ? e : new THREE.Vector3,
    this.c = void 0 !== i ? i : new THREE.Vector3
}
,
THREE.Triangle.normal = function() {
    var t = new THREE.Vector3;
    return function(e, i, r, n) {
        return n = n || new THREE.Vector3,
        n.subVectors(r, i),
        t.subVectors(e, i),
        n.cross(t),
        e = n.lengthSq(),
        e > 0 ? n.multiplyScalar(1 / Math.sqrt(e)) : n.set(0, 0, 0)
    }
}
(),
THREE.Triangle.barycoordFromPoint = function() {
    var t = new THREE.Vector3
      , e = new THREE.Vector3
      , i = new THREE.Vector3;
    return function(r, n, o, a, s) {
        t.subVectors(a, n),
        e.subVectors(o, n),
        i.subVectors(r, n),
        r = t.dot(t),
        n = t.dot(e),
        o = t.dot(i);
        var l = e.dot(e);
        a = e.dot(i);
        var h = r * l - n * n;
        return s = s || new THREE.Vector3,
        0 == h ? s.set(-2, -1, -1) : (h = 1 / h,
        l = (l * o - n * a) * h,
        r = (r * a - n * o) * h,
        s.set(1 - l - r, r, l))
    }
}
(),
THREE.Triangle.containsPoint = function() {
    var t = new THREE.Vector3;
    return function(e, i, r, n) {
        return e = THREE.Triangle.barycoordFromPoint(e, i, r, n, t),
        0 <= e.x && 0 <= e.y && 1 >= e.x + e.y
    }
}
(),
THREE.Triangle.prototype = {
    constructor: THREE.Triangle,
    set: function(t, e, i) {
        return this.a.copy(t),
        this.b.copy(e),
        this.c.copy(i),
        this
    },
    setFromPointsAndIndices: function(t, e, i, r) {
        return this.a.copy(t[e]),
        this.b.copy(t[i]),
        this.c.copy(t[r]),
        this
    },
    copy: function(t) {
        return this.a.copy(t.a),
        this.b.copy(t.b),
        this.c.copy(t.c),
        this
    },
    area: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3;
        return function() {
            return t.subVectors(this.c, this.b),
            e.subVectors(this.a, this.b),
            .5 * t.cross(e).length()
        }
    }
    (),
    midpoint: function(t) {
        return (t || new THREE.Vector3).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    },
    normal: function(t) {
        return THREE.Triangle.normal(this.a, this.b, this.c, t)
    },
    plane: function(t) {
        return (t || new THREE.Plane).setFromCoplanarPoints(this.a, this.b, this.c)
    },
    barycoordFromPoint: function(t, e) {
        return THREE.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, e)
    },
    containsPoint: function(t) {
        return THREE.Triangle.containsPoint(t, this.a, this.b, this.c)
    },
    equals: function(t) {
        return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
    },
    clone: function() {
        return (new THREE.Triangle).copy(this)
    }
},
THREE.Vertex = function(t) {
    return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),
    t
}
,
THREE.Clock = function(t) {
    this.autoStart = void 0 !== t ? t : !0,
    this.elapsedTime = this.oldTime = this.startTime = 0,
    this.running = !1
}
,
THREE.Clock.prototype = {
    constructor: THREE.Clock,
    start: function() {
        this.oldTime = this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(),
        this.running = !0
    },
    stop: function() {
        this.getElapsedTime(),
        this.running = !1
    },
    getElapsedTime: function() {
        return this.getDelta(),
        this.elapsedTime
    },
    getDelta: function() {
        var t = 0;
        if (this.autoStart && !this.running && this.start(),
        this.running) {
            var e = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now()
              , t = .001 * (e - this.oldTime);
            this.oldTime = e,
            this.elapsedTime += t
        }
        return t
    }
},
THREE.EventDispatcher = function() {}
,
THREE.EventDispatcher.prototype = {
    constructor: THREE.EventDispatcher,
    apply: function(t) {
        t.addEventListener = THREE.EventDispatcher.prototype.addEventListener,
        t.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener,
        t.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener,
        t.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent
    },
    addEventListener: function(t, e) {
        void 0 === this._listeners && (this._listeners = {});
        var i = this._listeners;
        void 0 === i[t] && (i[t] = []),
        -1 === i[t].indexOf(e) && i[t].push(e)
    },
    hasEventListener: function(t, e) {
        if (void 0 === this._listeners)
            return !1;
        var i = this._listeners;
        return void 0 !== i[t] && -1 !== i[t].indexOf(e) ? !0 : !1
    },
    removeEventListener: function(t, e) {
        if (void 0 !== this._listeners) {
            var i = this._listeners[t];
            if (void 0 !== i) {
                var r = i.indexOf(e);
                -1 !== r && i.splice(r, 1)
            }
        }
    },
    dispatchEvent: function(t) {
        if (void 0 !== this._listeners) {
            var e = this._listeners[t.type];
            if (void 0 !== e) {
                t.target = this;
                for (var i = [], r = e.length, n = 0; r > n; n++)
                    i[n] = e[n];
                for (n = 0; r > n; n++)
                    i[n].call(this, t)
            }
        }
    }
},
function(t) {
    t.Raycaster = function(e, i, r, n) {
        this.ray = new t.Ray(e,i),
        this.near = r || 0,
        this.far = n || 1 / 0
    }
    ;
    var e = new t.Sphere
      , i = new t.Ray;
    new t.Plane,
    new t.Vector3;
    var r = new t.Vector3
      , n = new t.Matrix4
      , o = function(t, e) {
        return t.distance - e.distance
    }
      , a = new t.Vector3
      , s = new t.Vector3
      , l = new t.Vector3
      , h = function(o, c, u) {
        if (o instanceof t.Sprite) {
            r.setFromMatrixPosition(o.matrixWorld);
            var p = c.ray.distanceToPoint(r);
            if (p > o.scale.x)
                return u;
            u.push({
                distance: p,
                point: o.position,
                face: null ,
                object: o
            })
        } else if (o instanceof t.LOD)
            r.setFromMatrixPosition(o.matrixWorld),
            p = c.ray.origin.distanceTo(r),
            h(o.getObjectForDistance(p), c, u);
        else if (o instanceof t.Mesh) {
            var d = o.geometry;
            if (null  === d.boundingSphere && d.computeBoundingSphere(),
            e.copy(d.boundingSphere),
            e.applyMatrix4(o.matrixWorld),
            !1 === c.ray.isIntersectionSphere(e))
                return u;
            if (n.getInverse(o.matrixWorld),
            i.copy(c.ray).applyMatrix4(n),
            null  !== d.boundingBox && !1 === i.isIntersectionBox(d.boundingBox))
                return u;
            if (d instanceof t.BufferGeometry) {
                var f = o.material;
                if (void 0 === f)
                    return u;
                var m, g, E = d.attributes, y = c.precision;
                if (void 0 !== E.index) {
                    var v = E.index.array
                      , _ = E.position.array
                      , x = d.offsets;
                    0 === x.length && (x = [{
                        start: 0,
                        count: _.length,
                        index: 0
                    }]);
                    for (var T = 0, w = x.length; w > T; ++T)
                        for (var E = x[T].start, b = x[T].index, d = E, R = E + x[T].count; R > d; d += 3) {
                            E = b + v[d],
                            m = b + v[d + 1],
                            g = b + v[d + 2],
                            a.set(_[3 * E], _[3 * E + 1], _[3 * E + 2]),
                            s.set(_[3 * m], _[3 * m + 1], _[3 * m + 2]),
                            l.set(_[3 * g], _[3 * g + 1], _[3 * g + 2]);
                            var H = f.side === t.BackSide ? i.intersectTriangle(l, s, a, !0) : i.intersectTriangle(a, s, l, f.side !== t.DoubleSide);
                            null  !== H && (H.applyMatrix4(o.matrixWorld),
                            p = c.ray.origin.distanceTo(H),
                            y > p || p < c.near || p > c.far || u.push({
                                distance: p,
                                point: H,
                                indices: [E, m, g],
                                face: null ,
                                faceIndex: null ,
                                object: o
                            }))
                        }
                } else
                    for (_ = E.position.array,
                    d = 0,
                    R = E.position.array.length; R > d; d += 3)
                        E = d,
                        m = d + 1,
                        g = d + 2,
                        a.set(_[3 * E], _[3 * E + 1], _[3 * E + 2]),
                        s.set(_[3 * m], _[3 * m + 1], _[3 * m + 2]),
                        l.set(_[3 * g], _[3 * g + 1], _[3 * g + 2]),
                        H = f.side === t.BackSide ? i.intersectTriangle(l, s, a, !0) : i.intersectTriangle(a, s, l, f.side !== t.DoubleSide),
                        null  !== H && (H.applyMatrix4(o.matrixWorld),
                        p = c.ray.origin.distanceTo(H),
                        y > p || p < c.near || p > c.far || u.push({
                            distance: p,
                            point: H,
                            indices: [E, m, g],
                            face: null ,
                            faceIndex: null ,
                            object: o
                        }))
            } else if (d instanceof t.Geometry)
                for (_ = o.material instanceof t.MeshFaceMaterial,
                x = !0 === _ ? o.material.materials : null ,
                y = c.precision,
                v = d.vertices,
                T = 0,
                w = d.faces.length; w > T; T++)
                    if (b = d.faces[T],
                    f = !0 === _ ? x[b.materialIndex] : o.material,
                    void 0 !== f) {
                        if (E = v[b.a],
                        m = v[b.b],
                        g = v[b.c],
                        !0 === f.morphTargets) {
                            p = d.morphTargets,
                            H = o.morphTargetInfluences,
                            a.set(0, 0, 0),
                            s.set(0, 0, 0),
                            l.set(0, 0, 0);
                            for (var R = 0, S = p.length; S > R; R++) {
                                var M = H[R];
                                if (0 !== M) {
                                    var C = p[R].vertices;
                                    a.x += (C[b.a].x - E.x) * M,
                                    a.y += (C[b.a].y - E.y) * M,
                                    a.z += (C[b.a].z - E.z) * M,
                                    s.x += (C[b.b].x - m.x) * M,
                                    s.y += (C[b.b].y - m.y) * M,
                                    s.z += (C[b.b].z - m.z) * M,
                                    l.x += (C[b.c].x - g.x) * M,
                                    l.y += (C[b.c].y - g.y) * M,
                                    l.z += (C[b.c].z - g.z) * M
                                }
                            }
                            a.add(E),
                            s.add(m),
                            l.add(g),
                            E = a,
                            m = s,
                            g = l
                        }
                        H = f.side === t.BackSide ? i.intersectTriangle(g, m, E, !0) : i.intersectTriangle(E, m, g, f.side !== t.DoubleSide),
                        null  !== H && (H.applyMatrix4(o.matrixWorld),
                        p = c.ray.origin.distanceTo(H),
                        y > p || p < c.near || p > c.far || u.push({
                            distance: p,
                            point: H,
                            face: b,
                            faceIndex: T,
                            object: o
                        }))
                    }
        } else if (o instanceof t.Line) {
            if (y = c.linePrecision,
            f = y * y,
            d = o.geometry,
            null  === d.boundingSphere && d.computeBoundingSphere(),
            e.copy(d.boundingSphere),
            e.applyMatrix4(o.matrixWorld),
            !1 === c.ray.isIntersectionSphere(e))
                return u;
            if (n.getInverse(o.matrixWorld),
            i.copy(c.ray).applyMatrix4(n),
            d instanceof t.Geometry)
                for (v = d.vertices,
                y = v.length,
                E = new t.Vector3,
                m = new t.Vector3,
                g = o.type === t.LineStrip ? 1 : 2,
                d = 0; y - 1 > d; d += g)
                    i.distanceSqToSegment(v[d], v[d + 1], m, E) > f || (p = i.origin.distanceTo(m),
                    p < c.near || p > c.far || u.push({
                        distance: p,
                        point: E.clone().applyMatrix4(o.matrixWorld),
                        face: null ,
                        faceIndex: null ,
                        object: o
                    }))
        }
    }
      , c = function(t, e, i) {
        t = t.getDescendants();
        for (var r = 0, n = t.length; n > r; r++)
            h(t[r], e, i)
    }
    ;
    t.Raycaster.prototype.precision = 1e-4,
    t.Raycaster.prototype.linePrecision = 1,
    t.Raycaster.prototype.set = function(t, e) {
        this.ray.set(t, e)
    }
    ,
    t.Raycaster.prototype.intersectObject = function(t, e) {
        var i = [];
        return !0 === e && c(t, this, i),
        h(t, this, i),
        i.sort(o),
        i
    }
    ,
    t.Raycaster.prototype.intersectObjects = function(t, e) {
        for (var i = [], r = 0, n = t.length; n > r; r++)
            h(t[r], this, i),
            !0 === e && c(t[r], this, i);
        return i.sort(o),
        i
    }
}
(THREE),
THREE.Object3D = function() {
    this.id = THREE.Object3DIdCount++,
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.parent = void 0,
    this.children = [],
    this.up = new THREE.Vector3(0,1,0),
    this.position = new THREE.Vector3;
    var t = this;
    Object.defineProperties(this, {
        rotation: {
            enumerable: !0,
            value: (new THREE.Euler).onChange(function() {
                t.quaternion.setFromEuler(t.rotation, !1)
            }
            )
        },
        quaternion: {
            enumerable: !0,
            value: (new THREE.Quaternion).onChange(function() {
                t.rotation.setFromQuaternion(t.quaternion, void 0, !1)
            }
            )
        },
        scale: {
            enumerable: !0,
            value: new THREE.Vector3(1,1,1)
        }
    }),
    this.renderDepth = null ,
    this.rotationAutoUpdate = !0,
    this.matrix = new THREE.Matrix4,
    this.matrixWorld = new THREE.Matrix4,
    this.matrixAutoUpdate = !0,
    this.matrixWorldNeedsUpdate = !1,
    this.visible = !0,
    this.receiveShadow = this.castShadow = !1,
    this.frustumCulled = !0,
    this.userData = {}
}
,
THREE.Object3D.prototype = {
    constructor: THREE.Object3D,
    get eulerOrder() {
        return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),
        this.rotation.order
    },
    set eulerOrder(t) {
        console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),
        this.rotation.order = t
    },
    get useQuaternion() {
        console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    set useQuaternion(t) {
        console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    applyMatrix: function(t) {
        this.matrix.multiplyMatrices(t, this.matrix),
        this.matrix.decompose(this.position, this.quaternion, this.scale)
    },
    setRotationFromAxisAngle: function(t, e) {
        this.quaternion.setFromAxisAngle(t, e)
    },
    setRotationFromEuler: function(t) {
        this.quaternion.setFromEuler(t, !0)
    },
    setRotationFromMatrix: function(t) {
        this.quaternion.setFromRotationMatrix(t)
    },
    setRotationFromQuaternion: function(t) {
        this.quaternion.copy(t)
    },
    rotateOnAxis: function() {
        var t = new THREE.Quaternion;
        return function(e, i) {
            return t.setFromAxisAngle(e, i),
            this.quaternion.multiply(t),
            this
        }
    }
    (),
    rotateX: function() {
        var t = new THREE.Vector3(1,0,0);
        return function(e) {
            return this.rotateOnAxis(t, e)
        }
    }
    (),
    rotateY: function() {
        var t = new THREE.Vector3(0,1,0);
        return function(e) {
            return this.rotateOnAxis(t, e)
        }
    }
    (),
    rotateZ: function() {
        var t = new THREE.Vector3(0,0,1);
        return function(e) {
            return this.rotateOnAxis(t, e)
        }
    }
    (),
    translateOnAxis: function() {
        var t = new THREE.Vector3;
        return function(e, i) {
            return t.copy(e),
            t.applyQuaternion(this.quaternion),
            this.position.add(t.multiplyScalar(i)),
            this
        }
    }
    (),
    translate: function(t, e) {
        return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),
        this.translateOnAxis(e, t)
    },
    translateX: function() {
        var t = new THREE.Vector3(1,0,0);
        return function(e) {
            return this.translateOnAxis(t, e)
        }
    }
    (),
    translateY: function() {
        var t = new THREE.Vector3(0,1,0);
        return function(e) {
            return this.translateOnAxis(t, e)
        }
    }
    (),
    translateZ: function() {
        var t = new THREE.Vector3(0,0,1);
        return function(e) {
            return this.translateOnAxis(t, e)
        }
    }
    (),
    localToWorld: function(t) {
        return t.applyMatrix4(this.matrixWorld)
    },
    worldToLocal: function() {
        var t = new THREE.Matrix4;
        return function(e) {
            return e.applyMatrix4(t.getInverse(this.matrixWorld))
        }
    }
    (),
    lookAt: function() {
        var t = new THREE.Matrix4;
        return function(e) {
            t.lookAt(e, this.position, this.up),
            this.quaternion.setFromRotationMatrix(t)
        }
    }
    (),
    add: function(t) {
        if (t === this)
            console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
        else if (t instanceof THREE.Object3D) {
            void 0 !== t.parent && t.parent.remove(t),
            t.parent = this,
            t.dispatchEvent({
                type: "added"
            }),
            this.children.push(t);
            for (var e = this; void 0 !== e.parent; )
                e = e.parent;
            void 0 !== e && e instanceof THREE.Scene && e.__addObject(t)
        }
    },
    remove: function(t) {
        var e = this.children.indexOf(t);
        if (-1 !== e) {
            for (t.parent = void 0,
            t.dispatchEvent({
                type: "removed"
            }),
            this.children.splice(e, 1),
            e = this; void 0 !== e.parent; )
                e = e.parent;
            void 0 !== e && e instanceof THREE.Scene && e.__removeObject(t)
        }
    },
    traverse: function(t) {
        t(this);
        for (var e = 0, i = this.children.length; i > e; e++)
            this.children[e].traverse(t)
    },
    getObjectById: function(t, e) {
        for (var i = 0, r = this.children.length; r > i; i++) {
            var n = this.children[i];
            if (n.id === t || !0 === e && (n = n.getObjectById(t, e),
            void 0 !== n))
                return n
        }
    },
    getObjectByName: function(t, e) {
        for (var i = 0, r = this.children.length; r > i; i++) {
            var n = this.children[i];
            if (n.name === t || !0 === e && (n = n.getObjectByName(t, e),
            void 0 !== n))
                return n
        }
    },
    getChildByName: function(t, e) {
        return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),
        this.getObjectByName(t, e)
    },
    getDescendants: function(t) {
        void 0 === t && (t = []),
        Array.prototype.push.apply(t, this.children);
        for (var e = 0, i = this.children.length; i > e; e++)
            this.children[e].getDescendants(t);
        return t
    },
    updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale),
        this.matrixWorldNeedsUpdate = !0
    },
    updateMatrixWorld: function(t) {
        !0 === this.matrixAutoUpdate && this.updateMatrix(),
        (!0 === this.matrixWorldNeedsUpdate || !0 === t) && (void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
        this.matrixWorldNeedsUpdate = !1,
        t = !0);
        for (var e = 0, i = this.children.length; i > e; e++)
            this.children[e].updateMatrixWorld(t)
    },
    clone: function(t, e) {
        if (void 0 === t && (t = new THREE.Object3D),
        void 0 === e && (e = !0),
        t.name = this.name,
        t.up.copy(this.up),
        t.position.copy(this.position),
        t.quaternion.copy(this.quaternion),
        t.scale.copy(this.scale),
        t.renderDepth = this.renderDepth,
        t.rotationAutoUpdate = this.rotationAutoUpdate,
        t.matrix.copy(this.matrix),
        t.matrixWorld.copy(this.matrixWorld),
        t.matrixAutoUpdate = this.matrixAutoUpdate,
        t.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate,
        t.visible = this.visible,
        t.castShadow = this.castShadow,
        t.receiveShadow = this.receiveShadow,
        t.frustumCulled = this.frustumCulled,
        t.userData = JSON.parse(JSON.stringify(this.userData)),
        !0 === e)
            for (var i = 0; i < this.children.length; i++)
                t.add(this.children[i].clone());
        return t
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),
THREE.Object3DIdCount = 0,
THREE.Projector = function() {
    function t() {
        if (l === v) {
            var t = new THREE.RenderableVertex;
            return y.push(t),
            v++,
            l++,
            t
        }
        return y[l++]
    }
    function e() {
        if (c === x) {
            var t = new THREE.RenderableFace;
            return _.push(t),
            x++,
            c++,
            t
        }
        return _[c++]
    }
    function i() {
        if (p === w) {
            var t = new THREE.RenderableLine;
            return T.push(t),
            w++,
            p++,
            t
        }
        return T[p++]
    }
    function r(t, e) {
        return t.z !== e.z ? e.z - t.z : t.id !== e.id ? t.id - e.id : 0
    }
    function n(t, e) {
        var i = 0
          , r = 1
          , n = t.z + t.w
          , o = e.z + e.w
          , a = -t.z + t.w
          , s = -e.z + e.w;
        return n >= 0 && o >= 0 && a >= 0 && s >= 0 ? !0 : 0 > n && 0 > o || 0 > a && 0 > s ? !1 : (0 > n ? i = Math.max(i, n / (n - o)) : 0 > o && (r = Math.min(r, n / (n - o))),
        0 > a ? i = Math.max(i, a / (a - s)) : 0 > s && (r = Math.min(r, a / (a - s))),
        i > r ? !1 : (t.lerp(e, i),
        e.lerp(t, 1 - r),
        !0))
    }
    var o, a, s, l, h, c, u, p, d, f, m, g = [], E = 0, y = [], v = 0, _ = [], x = 0, T = [], w = 0, b = [], R = 0, H = {
        objects: [],
        lights: [],
        elements: []
    }, S = new THREE.Vector3, M = new THREE.Vector3, C = new THREE.Vector3, A = new THREE.Vector3, P = new THREE.Vector4, L = new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)), D = new THREE.Box3, k = Array(3), O = new THREE.Matrix4, F = new THREE.Matrix4, N = new THREE.Matrix4, z = new THREE.Matrix3, V = new THREE.Frustum, I = new THREE.Vector4, U = new THREE.Vector4;
    this.projectVector = function(t, e) {
        return e.matrixWorldInverse.getInverse(e.matrixWorld),
        F.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
        t.applyProjection(F)
    }
    ,
    this.unprojectVector = function() {
        var t = new THREE.Matrix4;
        return function(e, i) {
            return t.getInverse(i.projectionMatrix),
            F.multiplyMatrices(i.matrixWorld, t),
            e.applyProjection(F)
        }
    }
    (),
    this.pickingRay = function(t, e) {
        t.z = -1;
        var i = new THREE.Vector3(t.x,t.y,1);
        return this.unprojectVector(t, e),
        this.unprojectVector(i, e),
        i.sub(t).normalize(),
        new THREE.Raycaster(t,i)
    }
    ;
    var B = function(t) {
        if (!1 !== t.visible) {
            if (t instanceof THREE.Light)
                H.lights.push(t);
            else if ((t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Sprite) && (!1 === t.frustumCulled || !0 === V.intersectsObject(t))) {
                if (a === E) {
                    var e = new THREE.RenderableObject;
                    g.push(e),
                    E++,
                    a++,
                    o = e
                } else
                    o = g[a++];
                o.id = t.id,
                o.object = t,
                null  !== t.renderDepth ? o.z = t.renderDepth : (A.setFromMatrixPosition(t.matrixWorld),
                A.applyProjection(F),
                o.z = A.z),
                H.objects.push(o)
            }
            for (var e = 0, i = t.children.length; i > e; e++)
                B(t.children[e])
        }
    }
      , j = new function() {
        var r = []
          , n = []
          , o = null 
          , a = null 
          , l = new THREE.Matrix3
          , c = function(t) {
            var e = t.positionWorld
              , i = t.positionScreen;
            e.copy(t.position).applyMatrix4(m),
            i.copy(e).applyMatrix4(F),
            e = 1 / i.w,
            i.x *= e,
            i.y *= e,
            i.z *= e,
            t.visible = -1 <= i.x && 1 >= i.x && -1 <= i.y && 1 >= i.y && -1 <= i.z && 1 >= i.z
        }
          , p = function(t, e, i) {
            return !0 === t.visible || !0 === e.visible || !0 === i.visible ? !0 : (k[0] = t.positionScreen,
            k[1] = e.positionScreen,
            k[2] = i.positionScreen,
            L.isIntersectionBox(D.setFromPoints(k)))
        }
          , d = function(t, e, i) {
            return 0 > (i.positionScreen.x - t.positionScreen.x) * (e.positionScreen.y - t.positionScreen.y) - (i.positionScreen.y - t.positionScreen.y) * (e.positionScreen.x - t.positionScreen.x)
        }
        ;
        return {
            setObject: function(t) {
                o = t,
                a = o.material,
                l.getNormalMatrix(o.matrixWorld),
                r.length = 0,
                n.length = 0
            },
            projectVertex: c,
            checkTriangleVisibility: p,
            checkBackfaceCulling: d,
            pushVertex: function(e, i, r) {
                s = t(),
                s.position.set(e, i, r),
                c(s)
            },
            pushNormal: function(t, e, i) {
                r.push(t, e, i)
            },
            pushUv: function(t, e) {
                n.push(t, e)
            },
            pushLine: function(t, e) {
                var r = y[t]
                  , n = y[e];
                u = i(),
                u.id = o.id,
                u.v1.copy(r),
                u.v2.copy(n),
                u.z = (r.positionScreen.z + n.positionScreen.z) / 2,
                u.material = o.material,
                H.elements.push(u)
            },
            pushTriangle: function(t, i, s) {
                var c = y[t]
                  , u = y[i]
                  , f = y[s];
                if (!1 !== p(c, u, f) && (a.side === THREE.DoubleSide || !0 === d(c, u, f))) {
                    for (h = e(),
                    h.id = o.id,
                    h.v1.copy(c),
                    h.v2.copy(u),
                    h.v3.copy(f),
                    h.z = (c.positionScreen.z + u.positionScreen.z + f.positionScreen.z) / 3,
                    c = 0; 3 > c; c++)
                        u = 3 * arguments[c],
                        f = h.vertexNormalsModel[c],
                        f.set(r[u], r[u + 1], r[u + 2]),
                        f.applyMatrix3(l).normalize(),
                        u = 2 * arguments[c],
                        h.uvs[c].set(n[u], n[u + 1]);
                    h.vertexNormalsLength = 3,
                    h.material = o.material,
                    H.elements.push(h)
                }
            }
        }
    }
    ;
    this.projectScene = function(o, s, g, E) {
        var v, _, x, T, w, A, L, D;
        for (f = p = c = 0,
        H.elements.length = 0,
        !0 === o.autoUpdate && o.updateMatrixWorld(),
        void 0 === s.parent && s.updateMatrixWorld(),
        O.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),
        F.multiplyMatrices(s.projectionMatrix, O),
        V.setFromMatrix(F),
        a = 0,
        H.objects.length = 0,
        H.lights.length = 0,
        B(o),
        !0 === g && H.objects.sort(r),
        o = 0,
        g = H.objects.length; g > o; o++)
            if (v = H.objects[o].object,
            _ = v.geometry,
            j.setObject(v),
            m = v.matrixWorld,
            l = 0,
            v instanceof THREE.Mesh) {
                if (_ instanceof THREE.BufferGeometry) {
                    if (A = _.attributes,
                    v = _.offsets,
                    void 0 !== A.position) {
                        for (L = A.position.array,
                        _ = 0,
                        T = L.length; T > _; _ += 3)
                            j.pushVertex(L[_], L[_ + 1], L[_ + 2]);
                        if (void 0 !== A.normal)
                            for (D = A.normal.array,
                            _ = 0,
                            T = D.length; T > _; _ += 3)
                                j.pushNormal(D[_], D[_ + 1], D[_ + 2]);
                        if (void 0 !== A.uv)
                            for (D = A.uv.array,
                            _ = 0,
                            T = D.length; T > _; _ += 2)
                                j.pushUv(D[_], D[_ + 1]);
                        if (void 0 !== A.index)
                            if (A = A.index.array,
                            0 < v.length)
                                for (o = 0; o < v.length; o++)
                                    for (T = v[o],
                                    L = T.index,
                                    _ = T.start,
                                    T = T.start + T.count; T > _; _ += 3)
                                        j.pushTriangle(A[_] + L, A[_ + 1] + L, A[_ + 2] + L);
                            else
                                for (_ = 0,
                                T = A.length; T > _; _ += 3)
                                    j.pushTriangle(A[_], A[_ + 1], A[_ + 2]);
                        else
                            for (_ = 0,
                            T = L.length / 3; T > _; _ += 3)
                                j.pushTriangle(_, _ + 1, _ + 2)
                    }
                } else if (_ instanceof THREE.Geometry) {
                    x = _.vertices,
                    T = _.faces,
                    A = _.faceVertexUvs[0],
                    z.getNormalMatrix(m),
                    L = v.material instanceof THREE.MeshFaceMaterial,
                    D = !0 === L ? v.material : null ;
                    for (var k = 0, G = x.length; G > k; k++) {
                        var W = x[k];
                        j.pushVertex(W.x, W.y, W.z)
                    }
                    for (k = 0,
                    G = T.length; G > k; k++) {
                        x = T[k];
                        var X = !0 === L ? D.materials[x.materialIndex] : v.material;
                        if (void 0 !== X) {
                            var q = X.side
                              , W = y[x.a]
                              , Y = y[x.b]
                              , $ = y[x.c];
                            if (!0 === X.morphTargets) {
                                w = _.morphTargets;
                                var Q = v.morphTargetInfluences
                                  , K = W.position
                                  , Z = Y.position
                                  , J = $.position;
                                S.set(0, 0, 0),
                                M.set(0, 0, 0),
                                C.set(0, 0, 0);
                                for (var tt = 0, et = w.length; et > tt; tt++) {
                                    var it = Q[tt];
                                    if (0 !== it) {
                                        var rt = w[tt].vertices;
                                        S.x += (rt[x.a].x - K.x) * it,
                                        S.y += (rt[x.a].y - K.y) * it,
                                        S.z += (rt[x.a].z - K.z) * it,
                                        M.x += (rt[x.b].x - Z.x) * it,
                                        M.y += (rt[x.b].y - Z.y) * it,
                                        M.z += (rt[x.b].z - Z.z) * it,
                                        C.x += (rt[x.c].x - J.x) * it,
                                        C.y += (rt[x.c].y - J.y) * it,
                                        C.z += (rt[x.c].z - J.z) * it
                                    }
                                }
                                W.position.add(S),
                                Y.position.add(M),
                                $.position.add(C),
                                j.projectVertex(W),
                                j.projectVertex(Y),
                                j.projectVertex($)
                            }
                            if (!1 !== j.checkTriangleVisibility(W, Y, $)) {
                                if (Q = j.checkBackfaceCulling(W, Y, $),
                                q !== THREE.DoubleSide) {
                                    if (q === THREE.FrontSide && !1 === Q)
                                        continue;if (q === THREE.BackSide && !0 === Q)
                                        continue
                                }
                                for (h = e(),
                                h.id = v.id,
                                h.v1.copy(W),
                                h.v2.copy(Y),
                                h.v3.copy($),
                                h.normalModel.copy(x.normal),
                                !1 !== Q || q !== THREE.BackSide && q !== THREE.DoubleSide || h.normalModel.negate(),
                                h.normalModel.applyMatrix3(z).normalize(),
                                w = x.vertexNormals,
                                K = 0,
                                Z = Math.min(w.length, 3); Z > K; K++)
                                    J = h.vertexNormalsModel[K],
                                    J.copy(w[K]),
                                    !1 !== Q || q !== THREE.BackSide && q !== THREE.DoubleSide || J.negate(),
                                    J.applyMatrix3(z).normalize();
                                if (h.vertexNormalsLength = w.length,
                                q = A[k],
                                void 0 !== q)
                                    for (w = 0; 3 > w; w++)
                                        h.uvs[w].copy(q[w]);
                                h.color = x.color,
                                h.material = X,
                                h.z = (W.positionScreen.z + Y.positionScreen.z + $.positionScreen.z) / 3,
                                H.elements.push(h)
                            }
                        }
                    }
                }
            } else if (v instanceof THREE.Line) {
                if (_ instanceof THREE.BufferGeometry) {
                    if (A = _.attributes,
                    void 0 !== A.position) {
                        for (L = A.position.array,
                        _ = 0,
                        T = L.length; T > _; _ += 3)
                            j.pushVertex(L[_], L[_ + 1], L[_ + 2]);
                        if (void 0 !== A.index)
                            for (A = A.index.array,
                            _ = 0,
                            T = A.length; T > _; _ += 2)
                                j.pushLine(A[_], A[_ + 1]);
                        else
                            for (_ = 0,
                            T = L.length / 3 - 1; T > _; _++)
                                j.pushLine(_, _ + 1)
                    }
                } else if (_ instanceof THREE.Geometry && (N.multiplyMatrices(F, m),
                x = v.geometry.vertices,
                0 !== x.length))
                    for (W = t(),
                    W.positionScreen.copy(x[0]).applyMatrix4(N),
                    _ = v.type === THREE.LinePieces ? 2 : 1,
                    k = 1,
                    G = x.length; G > k; k++)
                        W = t(),
                        W.positionScreen.copy(x[k]).applyMatrix4(N),
                        (k + 1) % _ > 0 || (Y = y[l - 2],
                        I.copy(W.positionScreen),
                        U.copy(Y.positionScreen),
                        !0 === n(I, U) && (I.multiplyScalar(1 / I.w),
                        U.multiplyScalar(1 / U.w),
                        u = i(),
                        u.id = v.id,
                        u.v1.positionScreen.copy(I),
                        u.v2.positionScreen.copy(U),
                        u.z = Math.max(I.z, U.z),
                        u.material = v.material,
                        v.material.vertexColors === THREE.VertexColors && (u.vertexColors[0].copy(v.geometry.colors[k]),
                        u.vertexColors[1].copy(v.geometry.colors[k - 1])),
                        H.elements.push(u)))
            } else
                v instanceof THREE.Sprite && (P.set(m.elements[12], m.elements[13], m.elements[14], 1),
                P.applyMatrix4(F),
                _ = 1 / P.w,
                P.z *= _,
                -1 <= P.z && 1 >= P.z && (f === R ? (T = new THREE.RenderableSprite,
                b.push(T),
                R++,
                f++,
                d = T) : d = b[f++],
                d.id = v.id,
                d.x = P.x * _,
                d.y = P.y * _,
                d.z = P.z,
                d.object = v,
                d.rotation = v.rotation,
                d.scale.x = v.scale.x * Math.abs(d.x - (P.x + s.projectionMatrix.elements[0]) / (P.w + s.projectionMatrix.elements[12])),
                d.scale.y = v.scale.y * Math.abs(d.y - (P.y + s.projectionMatrix.elements[5]) / (P.w + s.projectionMatrix.elements[13])),
                d.material = v.material,
                H.elements.push(d)));
        return !0 === E && H.elements.sort(r),
        H
    }
}
,
THREE.Face3 = function(t, e, i, r, n, o) {
    this.a = t,
    this.b = e,
    this.c = i,
    this.normal = r instanceof THREE.Vector3 ? r : new THREE.Vector3,
    this.vertexNormals = r instanceof Array ? r : [],
    this.color = n instanceof THREE.Color ? n : new THREE.Color,
    this.vertexColors = n instanceof Array ? n : [],
    this.vertexTangents = [],
    this.materialIndex = void 0 !== o ? o : 0
}
,
THREE.Face3.prototype = {
    constructor: THREE.Face3,
    clone: function() {
        var t = new THREE.Face3(this.a,this.b,this.c);
        t.normal.copy(this.normal),
        t.color.copy(this.color),
        t.materialIndex = this.materialIndex;
        var e, i;
        for (e = 0,
        i = this.vertexNormals.length; i > e; e++)
            t.vertexNormals[e] = this.vertexNormals[e].clone();
        for (e = 0,
        i = this.vertexColors.length; i > e; e++)
            t.vertexColors[e] = this.vertexColors[e].clone();
        for (e = 0,
        i = this.vertexTangents.length; i > e; e++)
            t.vertexTangents[e] = this.vertexTangents[e].clone();
        return t
    }
},
THREE.Face4 = function(t, e, i, r, n, o, a) {
    return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
    new THREE.Face3(t,e,i,n,o,a)
}
,
THREE.BufferAttribute = function() {}
,
THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute,
    get length() {
        return this.array.length
    },
    set: function(t) {
        this.array.set(t)
    },
    setX: function(t, e) {
        this.array[t * this.itemSize] = e
    },
    setY: function(t, e) {
        this.array[t * this.itemSize + 1] = e
    },
    setZ: function(t, e) {
        this.array[t * this.itemSize + 2] = e
    },
    setXY: function(t, e, i) {
        t *= this.itemSize,
        this.array[t] = e,
        this.array[t + 1] = i
    },
    setXYZ: function(t, e, i, r) {
        t *= this.itemSize,
        this.array[t] = e,
        this.array[t + 1] = i,
        this.array[t + 2] = r
    },
    setXYZW: function(t, e, i, r, n) {
        t *= this.itemSize,
        this.array[t] = e,
        this.array[t + 1] = i,
        this.array[t + 2] = r,
        this.array[t + 3] = n
    }
},
THREE.Int8Attribute = function(t, e) {
    this.array = new Int8Array(t * e),
    this.itemSize = e
}
,
THREE.Int8Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Uint8Attribute = function(t, e) {
    this.array = new Uint8Array(t * e),
    this.itemSize = e
}
,
THREE.Uint8Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Uint8ClampedAttribute = function(t, e) {
    this.array = new Uint8ClampedArray(t * e),
    this.itemSize = e
}
,
THREE.Uint8ClampedAttribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Int16Attribute = function(t, e) {
    this.array = new Int16Array(t * e),
    this.itemSize = e
}
,
THREE.Int16Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Uint16Attribute = function(t, e) {
    this.array = new Uint16Array(t * e),
    this.itemSize = e
}
,
THREE.Uint16Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Int32Attribute = function(t, e) {
    this.array = new Int32Array(t * e),
    this.itemSize = e
}
,
THREE.Int32Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Uint32Attribute = function(t, e) {
    this.array = new Uint32Array(t * e),
    this.itemSize = e
}
,
THREE.Uint32Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Float32Attribute = function(t, e) {
    this.array = new Float32Array(t * e),
    this.itemSize = e
}
,
THREE.Float32Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.Float64Attribute = function(t, e) {
    this.array = new Float64Array(t * e),
    this.itemSize = e
}
,
THREE.Float64Attribute.prototype = Object.create(THREE.BufferAttribute.prototype),
THREE.BufferGeometry = function() {
    this.id = THREE.GeometryIdCount++,
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.attributes = {},
    this.offsets = this.drawcalls = [],
    this.boundingSphere = this.boundingBox = null 
}
,
THREE.BufferGeometry.prototype = {
    constructor: THREE.BufferGeometry,
    addAttribute: function(t, e, i) {
        !1 == e instanceof THREE.BufferAttribute ? (console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),
        this.attributes[t] = {
            array: e,
            itemSize: i
        }) : this.attributes[t] = e
    },
    getAttribute: function(t) {
        return this.attributes[t]
    },
    addDrawCall: function(t, e, i) {
        this.drawcalls.push({
            start: t,
            count: e,
            index: void 0 !== i ? i : 0
        })
    },
    applyMatrix: function(t) {
        var e = this.attributes.position;
        void 0 !== e && (t.applyToVector3Array(e.array),
        e.needsUpdate = !0),
        e = this.attributes.normal,
        void 0 !== e && ((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(e.array),
        e.needsUpdate = !0)
    },
    computeBoundingBox: function() {
        null  === this.boundingBox && (this.boundingBox = new THREE.Box3);
        var t = this.attributes.position.array;
        if (t) {
            var e = this.boundingBox;
            3 <= t.length && (e.min.x = e.max.x = t[0],
            e.min.y = e.max.y = t[1],
            e.min.z = e.max.z = t[2]);
            for (var i = 3, r = t.length; r > i; i += 3) {
                var n = t[i]
                  , o = t[i + 1]
                  , a = t[i + 2];
                n < e.min.x ? e.min.x = n : n > e.max.x && (e.max.x = n),
                o < e.min.y ? e.min.y = o : o > e.max.y && (e.max.y = o),
                a < e.min.z ? e.min.z = a : a > e.max.z && (e.max.z = a)
            }
        }
        (void 0 === t || 0 === t.length) && (this.boundingBox.min.set(0, 0, 0),
        this.boundingBox.max.set(0, 0, 0))
    },
    computeBoundingSphere: function() {
        var t = new THREE.Box3
          , e = new THREE.Vector3;
        return function() {
            null  === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
            var i = this.attributes.position.array;
            if (i) {
                t.makeEmpty();
                for (var r = this.boundingSphere.center, n = 0, o = i.length; o > n; n += 3)
                    e.set(i[n], i[n + 1], i[n + 2]),
                    t.addPoint(e);
                t.center(r);
                for (var a = 0, n = 0, o = i.length; o > n; n += 3)
                    e.set(i[n], i[n + 1], i[n + 2]),
                    a = Math.max(a, r.distanceToSquared(e));
                this.boundingSphere.radius = Math.sqrt(a)
            }
        }
    }
    (),
    computeFaceNormals: function() {},
    computeVertexNormals: function() {
        if (this.attributes.position) {
            var t, e, i, r;
            if (t = this.attributes.position.array.length,
            void 0 === this.attributes.normal)
                this.attributes.normal = {
                    itemSize: 3,
                    array: new Float32Array(t)
                };
            else
                for (t = 0,
                e = this.attributes.normal.array.length; e > t; t++)
                    this.attributes.normal.array[t] = 0;
            var n, o, a, s, l, h, c = this.attributes.position.array, u = this.attributes.normal.array, p = new THREE.Vector3, d = new THREE.Vector3, f = new THREE.Vector3, m = new THREE.Vector3, g = new THREE.Vector3;
            if (this.attributes.index) {
                var E = this.attributes.index.array
                  , y = 0 < this.offsets.length ? this.offsets : [{
                    start: 0,
                    count: E.length,
                    index: 0
                }];
                for (i = 0,
                r = y.length; r > i; ++i) {
                    e = y[i].start,
                    n = y[i].count;
                    var v = y[i].index;
                    for (t = e,
                    e += n; e > t; t += 3)
                        n = v + E[t],
                        o = v + E[t + 1],
                        a = v + E[t + 2],
                        s = c[3 * n],
                        l = c[3 * n + 1],
                        h = c[3 * n + 2],
                        p.set(s, l, h),
                        s = c[3 * o],
                        l = c[3 * o + 1],
                        h = c[3 * o + 2],
                        d.set(s, l, h),
                        s = c[3 * a],
                        l = c[3 * a + 1],
                        h = c[3 * a + 2],
                        f.set(s, l, h),
                        m.subVectors(f, d),
                        g.subVectors(p, d),
                        m.cross(g),
                        u[3 * n] += m.x,
                        u[3 * n + 1] += m.y,
                        u[3 * n + 2] += m.z,
                        u[3 * o] += m.x,
                        u[3 * o + 1] += m.y,
                        u[3 * o + 2] += m.z,
                        u[3 * a] += m.x,
                        u[3 * a + 1] += m.y,
                        u[3 * a + 2] += m.z
                }
            } else
                for (t = 0,
                e = c.length; e > t; t += 9)
                    s = c[t],
                    l = c[t + 1],
                    h = c[t + 2],
                    p.set(s, l, h),
                    s = c[t + 3],
                    l = c[t + 4],
                    h = c[t + 5],
                    d.set(s, l, h),
                    s = c[t + 6],
                    l = c[t + 7],
                    h = c[t + 8],
                    f.set(s, l, h),
                    m.subVectors(f, d),
                    g.subVectors(p, d),
                    m.cross(g),
                    u[t] = m.x,
                    u[t + 1] = m.y,
                    u[t + 2] = m.z,
                    u[t + 3] = m.x,
                    u[t + 4] = m.y,
                    u[t + 5] = m.z,
                    u[t + 6] = m.x,
                    u[t + 7] = m.y,
                    u[t + 8] = m.z;
            this.normalizeNormals(),
            this.normalsNeedUpdate = !0
        }
    },
    computeTangents: function() {
        function t(t, e, i) {
            u = r[3 * t],
            p = r[3 * t + 1],
            d = r[3 * t + 2],
            f = r[3 * e],
            m = r[3 * e + 1],
            g = r[3 * e + 2],
            E = r[3 * i],
            y = r[3 * i + 1],
            v = r[3 * i + 2],
            _ = o[2 * t],
            x = o[2 * t + 1],
            T = o[2 * e],
            w = o[2 * e + 1],
            b = o[2 * i],
            R = o[2 * i + 1],
            H = f - u,
            S = E - u,
            M = m - p,
            C = y - p,
            A = g - d,
            P = v - d,
            L = T - _,
            D = b - _,
            k = w - x,
            O = R - x,
            F = 1 / (L * O - D * k),
            B.set((O * H - k * S) * F, (O * M - k * C) * F, (O * A - k * P) * F),
            j.set((L * S - D * H) * F, (L * C - D * M) * F, (L * P - D * A) * F),
            l[t].add(B),
            l[e].add(B),
            l[i].add(B),
            h[t].add(j),
            h[e].add(j),
            h[i].add(j)
        }
        function e(t) {
            K.x = n[3 * t],
            K.y = n[3 * t + 1],
            K.z = n[3 * t + 2],
            Z.copy(K),
            q = l[t],
            $.copy(q),
            $.sub(K.multiplyScalar(K.dot(q))).normalize(),
            Q.crossVectors(Z, q),
            Y = Q.dot(h[t]),
            X = 0 > Y ? -1 : 1,
            s[4 * t] = $.x,
            s[4 * t + 1] = $.y,
            s[4 * t + 2] = $.z,
            s[4 * t + 3] = X
        }
        if (void 0 === this.attributes.index || void 0 === this.attributes.position || void 0 === this.attributes.normal || void 0 === this.attributes.uv)
            console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
        else {
            var i = this.attributes.index.array
              , r = this.attributes.position.array
              , n = this.attributes.normal.array
              , o = this.attributes.uv.array
              , a = r.length / 3;
            void 0 === this.attributes.tangent && (this.attributes.tangent = {
                itemSize: 4,
                array: new Float32Array(4 * a)
            });
            for (var s = this.attributes.tangent.array, l = [], h = [], c = 0; a > c; c++)
                l[c] = new THREE.Vector3,
                h[c] = new THREE.Vector3;
            var u, p, d, f, m, g, E, y, v, _, x, T, w, b, R, H, S, M, C, A, P, L, D, k, O, F, N, z, V, I, U, B = new THREE.Vector3, j = new THREE.Vector3, G = this.offsets, c = 0;
            for (z = G.length; z > c; ++c) {
                N = G[c].start,
                V = G[c].count;
                var W = G[c].index
                  , a = N;
                for (N += V; N > a; a += 3)
                    V = W + i[a],
                    I = W + i[a + 1],
                    U = W + i[a + 2],
                    t(V, I, U)
            }
            var X, q, Y, $ = new THREE.Vector3, Q = new THREE.Vector3, K = new THREE.Vector3, Z = new THREE.Vector3, c = 0;
            for (z = G.length; z > c; ++c)
                for (N = G[c].start,
                V = G[c].count,
                W = G[c].index,
                a = N,
                N += V; N > a; a += 3)
                    V = W + i[a],
                    I = W + i[a + 1],
                    U = W + i[a + 2],
                    e(V),
                    e(I),
                    e(U)
        }
    },
    computeOffsets: function(t) {
        var e = t;
        void 0 === t && (e = 65535),
        Date.now(),
        t = this.attributes.index.array;
        for (var i = this.attributes.position.array, r = t.length / 3, n = new Uint16Array(t.length), o = 0, a = 0, s = [{
            start: 0,
            count: 0,
            index: 0
        }], l = s[0], h = 0, c = 0, u = new Int32Array(6), p = new Int32Array(i.length), d = new Int32Array(i.length), f = 0; f < i.length; f++)
            p[f] = -1,
            d[f] = -1;
        for (i = 0; r > i; i++) {
            for (var m = c = 0; 3 > m; m++)
                f = t[3 * i + m],
                -1 == p[f] ? (u[2 * m] = f,
                u[2 * m + 1] = -1,
                c++) : p[f] < l.index ? (u[2 * m] = f,
                u[2 * m + 1] = -1,
                h++) : (u[2 * m] = f,
                u[2 * m + 1] = p[f]);
            if (a + c > l.index + e)
                for (l = {
                    start: o,
                    count: 0,
                    index: a
                },
                s.push(l),
                c = 0; 6 > c; c += 2)
                    m = u[c + 1],
                    m > -1 && m < l.index && (u[c + 1] = -1);
            for (c = 0; 6 > c; c += 2)
                f = u[c],
                m = u[c + 1],
                -1 === m && (m = a++),
                p[f] = m,
                d[m] = f,
                n[o++] = m - l.index,
                l.count++
        }
        return this.reorderBuffers(n, d, a),
        this.offsets = s
    },
    merge: function() {
        console.log("BufferGeometry.merge(): TODO")
    },
    normalizeNormals: function() {
        for (var t, e, i, r = this.attributes.normal.array, n = 0, o = r.length; o > n; n += 3)
            t = r[n],
            e = r[n + 1],
            i = r[n + 2],
            t = 1 / Math.sqrt(t * t + e * e + i * i),
            r[n] *= t,
            r[n + 1] *= t,
            r[n + 2] *= t
    },
    reorderBuffers: function(t, e, i) {
        var r, n = {}, o = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
        for (r in this.attributes)
            if ("index" != r)
                for (var a = this.attributes[r].array, s = 0, l = o.length; l > s; s++) {
                    var h = o[s];
                    if (a instanceof h) {
                        n[r] = new h(this.attributes[r].itemSize * i);
                        break
                    }
                }
        for (o = 0; i > o; o++)
            for (r in a = e[o],
            this.attributes)
                if ("index" != r)
                    for (var s = this.attributes[r].array, l = this.attributes[r].itemSize, h = n[r], c = 0; l > c; c++)
                        h[o * l + c] = s[a * l + c];
        this.attributes.index.array = t;
        for (r in this.attributes)
            "index" != r && (this.attributes[r].array = n[r],
            this.attributes[r].numItems = this.attributes[r].itemSize * i)
    },
    clone: function() {
        var t, e = new THREE.BufferGeometry, i = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
        for (t in this.attributes) {
            for (var r = this.attributes[t], n = r.array, o = {
                itemSize: r.itemSize,
                array: null 
            }, r = 0, a = i.length; a > r; r++) {
                var s = i[r];
                if (n instanceof s) {
                    o.array = new s(n);
                    break
                }
            }
            e.attributes[t] = o
        }
        for (r = 0,
        a = this.offsets.length; a > r; r++)
            i = this.offsets[r],
            e.offsets.push({
                start: i.start,
                index: i.index,
                count: i.count
            });
        return e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),
THREE.Geometry = function() {
    this.id = THREE.GeometryIdCount++,
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.vertices = [],
    this.colors = [],
    this.faces = [],
    this.faceVertexUvs = [[]],
    this.morphTargets = [],
    this.morphColors = [],
    this.morphNormals = [],
    this.skinWeights = [],
    this.skinIndices = [],
    this.lineDistances = [],
    this.boundingSphere = this.boundingBox = null ,
    this.hasTangents = !1,
    this.dynamic = !0,
    this.buffersNeedUpdate = this.lineDistancesNeedUpdate = this.colorsNeedUpdate = this.tangentsNeedUpdate = this.normalsNeedUpdate = this.uvsNeedUpdate = this.elementsNeedUpdate = this.verticesNeedUpdate = !1
}
,
THREE.Geometry.prototype = {
    constructor: THREE.Geometry,
    applyMatrix: function(t) {
        for (var e = (new THREE.Matrix3).getNormalMatrix(t), i = 0, r = this.vertices.length; r > i; i++)
            this.vertices[i].applyMatrix4(t);
        for (i = 0,
        r = this.faces.length; r > i; i++) {
            t = this.faces[i],
            t.normal.applyMatrix3(e).normalize();
            for (var n = 0, o = t.vertexNormals.length; o > n; n++)
                t.vertexNormals[n].applyMatrix3(e).normalize()
        }
        this.boundingBox instanceof THREE.Box3 && this.computeBoundingBox(),
        this.boundingSphere instanceof THREE.Sphere && this.computeBoundingSphere()
    },
    computeFaceNormals: function() {
        for (var t = new THREE.Vector3, e = new THREE.Vector3, i = 0, r = this.faces.length; r > i; i++) {
            var n = this.faces[i]
              , o = this.vertices[n.a]
              , a = this.vertices[n.b];
            t.subVectors(this.vertices[n.c], a),
            e.subVectors(o, a),
            t.cross(e),
            t.normalize(),
            n.normal.copy(t)
        }
    },
    computeVertexNormals: function(t) {
        var e, i, r;
        for (r = Array(this.vertices.length),
        e = 0,
        i = this.vertices.length; i > e; e++)
            r[e] = new THREE.Vector3;
        if (t) {
            var n, o, a, s = new THREE.Vector3, l = new THREE.Vector3;
            for (new THREE.Vector3,
            new THREE.Vector3,
            new THREE.Vector3,
            t = 0,
            e = this.faces.length; e > t; t++)
                i = this.faces[t],
                n = this.vertices[i.a],
                o = this.vertices[i.b],
                a = this.vertices[i.c],
                s.subVectors(a, o),
                l.subVectors(n, o),
                s.cross(l),
                r[i.a].add(s),
                r[i.b].add(s),
                r[i.c].add(s)
        } else
            for (t = 0,
            e = this.faces.length; e > t; t++)
                i = this.faces[t],
                r[i.a].add(i.normal),
                r[i.b].add(i.normal),
                r[i.c].add(i.normal);
        for (e = 0,
        i = this.vertices.length; i > e; e++)
            r[e].normalize();
        for (t = 0,
        e = this.faces.length; e > t; t++)
            i = this.faces[t],
            i.vertexNormals[0] = r[i.a].clone(),
            i.vertexNormals[1] = r[i.b].clone(),
            i.vertexNormals[2] = r[i.c].clone()
    },
    computeMorphNormals: function() {
        var t, e, i, r, n;
        for (i = 0,
        r = this.faces.length; r > i; i++)
            for (n = this.faces[i],
            n.__originalFaceNormal ? n.__originalFaceNormal.copy(n.normal) : n.__originalFaceNormal = n.normal.clone(),
            n.__originalVertexNormals || (n.__originalVertexNormals = []),
            t = 0,
            e = n.vertexNormals.length; e > t; t++)
                n.__originalVertexNormals[t] ? n.__originalVertexNormals[t].copy(n.vertexNormals[t]) : n.__originalVertexNormals[t] = n.vertexNormals[t].clone();
        var o = new THREE.Geometry;
        for (o.faces = this.faces,
        t = 0,
        e = this.morphTargets.length; e > t; t++) {
            if (!this.morphNormals[t]) {
                this.morphNormals[t] = {},
                this.morphNormals[t].faceNormals = [],
                this.morphNormals[t].vertexNormals = [],
                n = this.morphNormals[t].faceNormals;
                var a, s, l = this.morphNormals[t].vertexNormals;
                for (i = 0,
                r = this.faces.length; r > i; i++)
                    a = new THREE.Vector3,
                    s = {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3
                    },
                    n.push(a),
                    l.push(s)
            }
            for (l = this.morphNormals[t],
            o.vertices = this.morphTargets[t].vertices,
            o.computeFaceNormals(),
            o.computeVertexNormals(),
            i = 0,
            r = this.faces.length; r > i; i++)
                n = this.faces[i],
                a = l.faceNormals[i],
                s = l.vertexNormals[i],
                a.copy(n.normal),
                s.a.copy(n.vertexNormals[0]),
                s.b.copy(n.vertexNormals[1]),
                s.c.copy(n.vertexNormals[2])
        }
        for (i = 0,
        r = this.faces.length; r > i; i++)
            n = this.faces[i],
            n.normal = n.__originalFaceNormal,
            n.vertexNormals = n.__originalVertexNormals
    },
    computeTangents: function() {
        var t, e, i, r, n, o, a, s, l, h, c, u, p, d, f, m, g, E = [], y = [];
        i = new THREE.Vector3;
        var v = new THREE.Vector3
          , _ = new THREE.Vector3
          , x = new THREE.Vector3
          , T = new THREE.Vector3;
        for (t = 0,
        e = this.vertices.length; e > t; t++)
            E[t] = new THREE.Vector3,
            y[t] = new THREE.Vector3;
        for (t = 0,
        e = this.faces.length; e > t; t++)
            n = this.faces[t],
            o = this.faceVertexUvs[0][t],
            r = n.a,
            g = n.b,
            n = n.c,
            a = this.vertices[r],
            s = this.vertices[g],
            l = this.vertices[n],
            h = o[0],
            c = o[1],
            u = o[2],
            o = s.x - a.x,
            p = l.x - a.x,
            d = s.y - a.y,
            f = l.y - a.y,
            s = s.z - a.z,
            a = l.z - a.z,
            l = c.x - h.x,
            m = u.x - h.x,
            c = c.y - h.y,
            h = u.y - h.y,
            u = 1 / (l * h - m * c),
            i.set((h * o - c * p) * u, (h * d - c * f) * u, (h * s - c * a) * u),
            v.set((l * p - m * o) * u, (l * f - m * d) * u, (l * a - m * s) * u),
            E[r].add(i),
            E[g].add(i),
            E[n].add(i),
            y[r].add(v),
            y[g].add(v),
            y[n].add(v);
        for (v = ["a", "b", "c", "d"],
        t = 0,
        e = this.faces.length; e > t; t++)
            for (n = this.faces[t],
            i = 0; i < Math.min(n.vertexNormals.length, 3); i++)
                T.copy(n.vertexNormals[i]),
                r = n[v[i]],
                g = E[r],
                _.copy(g),
                _.sub(T.multiplyScalar(T.dot(g))).normalize(),
                x.crossVectors(n.vertexNormals[i], g),
                r = x.dot(y[r]),
                r = 0 > r ? -1 : 1,
                n.vertexTangents[i] = new THREE.Vector4(_.x,_.y,_.z,r);
        this.hasTangents = !0
    },
    computeLineDistances: function() {
        for (var t = 0, e = this.vertices, i = 0, r = e.length; r > i; i++)
            i > 0 && (t += e[i].distanceTo(e[i - 1])),
            this.lineDistances[i] = t
    },
    computeBoundingBox: function() {
        null  === this.boundingBox && (this.boundingBox = new THREE.Box3),
        this.boundingBox.setFromPoints(this.vertices)
    },
    computeBoundingSphere: function() {
        null  === this.boundingSphere && (this.boundingSphere = new THREE.Sphere),
        this.boundingSphere.setFromPoints(this.vertices)
    },
    merge: function(t, e, i) {
        if (!1 == t instanceof THREE.Geometry)
            console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
        else {
            var r, n = this.vertices.length, o = this.vertices, a = t.vertices, s = this.faces, l = t.faces, h = this.faceVertexUvs[0];
            t = t.faceVertexUvs[0],
            void 0 === i && (i = 0),
            void 0 !== e && (r = (new THREE.Matrix3).getNormalMatrix(e));
            for (var c = 0, u = a.length; u > c; c++) {
                var p = a[c].clone();
                void 0 !== e && p.applyMatrix4(e),
                o.push(p)
            }
            for (c = 0,
            u = l.length; u > c; c++) {
                var d, a = l[c], f = a.vertexNormals, m = a.vertexColors, p = new THREE.Face3(a.a + n,a.b + n,a.c + n);
                for (p.normal.copy(a.normal),
                void 0 !== r && p.normal.applyMatrix3(r).normalize(),
                e = 0,
                o = f.length; o > e; e++)
                    d = f[e].clone(),
                    void 0 !== r && d.applyMatrix3(r).normalize(),
                    p.vertexNormals.push(d);
                for (p.color.copy(a.color),
                e = 0,
                o = m.length; o > e; e++)
                    d = m[e],
                    p.vertexColors.push(d.clone());
                p.materialIndex = a.materialIndex + i,
                s.push(p)
            }
            for (c = 0,
            u = t.length; u > c; c++)
                if (i = t[c],
                r = [],
                void 0 !== i) {
                    for (e = 0,
                    o = i.length; o > e; e++)
                        r.push(new THREE.Vector2(i[e].x,i[e].y));
                    h.push(r)
                }
        }
    },
    mergeVertices: function() {
        var t, e, i, r = {}, n = [], o = [], a = Math.pow(10, 4);
        for (e = 0,
        i = this.vertices.length; i > e; e++)
            t = this.vertices[e],
            t = Math.round(t.x * a) + "_" + Math.round(t.y * a) + "_" + Math.round(t.z * a),
            void 0 === r[t] ? (r[t] = e,
            n.push(this.vertices[e]),
            o[e] = n.length - 1) : o[e] = o[r[t]];
        for (r = [],
        e = 0,
        i = this.faces.length; i > e; e++)
            for (a = this.faces[e],
            a.a = o[a.a],
            a.b = o[a.b],
            a.c = o[a.c],
            a = [a.a, a.b, a.c],
            t = 0; 3 > t; t++)
                if (a[t] == a[(t + 1) % 3]) {
                    r.push(e);
                    break
                }
        for (e = r.length - 1; e >= 0; e--)
            for (a = r[e],
            this.faces.splice(a, 1),
            o = 0,
            i = this.faceVertexUvs.length; i > o; o++)
                this.faceVertexUvs[o].splice(a, 1);
        return e = this.vertices.length - n.length,
        this.vertices = n,
        e
    },
    makeGroups: function() {
        var t = 0;
        return function(e, i) {
            var r, n, o, a, s = {}, l = this.morphTargets.length, h = this.morphNormals.length;
            for (this.geometryGroups = {},
            r = 0,
            n = this.faces.length; n > r; r++)
                o = this.faces[r],
                o = e ? o.materialIndex : 0,
                o in s || (s[o] = {
                    hash: o,
                    counter: 0
                }),
                a = s[o].hash + "_" + s[o].counter,
                a in this.geometryGroups || (this.geometryGroups[a] = {
                    faces3: [],
                    materialIndex: o,
                    vertices: 0,
                    numMorphTargets: l,
                    numMorphNormals: h
                }),
                this.geometryGroups[a].vertices + 3 > i && (s[o].counter += 1,
                a = s[o].hash + "_" + s[o].counter,
                a in this.geometryGroups || (this.geometryGroups[a] = {
                    faces3: [],
                    materialIndex: o,
                    vertices: 0,
                    numMorphTargets: l,
                    numMorphNormals: h
                })),
                this.geometryGroups[a].faces3.push(r),
                this.geometryGroups[a].vertices += 3;
            this.geometryGroupsList = [];
            for (var c in this.geometryGroups)
                this.geometryGroups[c].id = t++,
                this.geometryGroupsList.push(this.geometryGroups[c])
        }
    }
    (),
    clone: function() {
        for (var t = new THREE.Geometry, e = this.vertices, i = 0, r = e.length; r > i; i++)
            t.vertices.push(e[i].clone());
        for (e = this.faces,
        i = 0,
        r = e.length; r > i; i++)
            t.faces.push(e[i].clone());
        for (e = this.faceVertexUvs[0],
        i = 0,
        r = e.length; r > i; i++) {
            for (var n = e[i], o = [], a = 0, s = n.length; s > a; a++)
                o.push(new THREE.Vector2(n[a].x,n[a].y));
            t.faceVertexUvs[0].push(o)
        }
        return t
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),
THREE.GeometryIdCount = 0,
THREE.Camera = function() {
    THREE.Object3D.call(this),
    this.matrixWorldInverse = new THREE.Matrix4,
    this.projectionMatrix = new THREE.Matrix4
}
,
THREE.Camera.prototype = Object.create(THREE.Object3D.prototype),
THREE.Camera.prototype.lookAt = function() {
    var t = new THREE.Matrix4;
    return function(e) {
        t.lookAt(this.position, e, this.up),
        this.quaternion.setFromRotationMatrix(t)
    }
}
(),
THREE.Camera.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.Camera),
    THREE.Object3D.prototype.clone.call(this, t),
    t.matrixWorldInverse.copy(this.matrixWorldInverse),
    t.projectionMatrix.copy(this.projectionMatrix),
    t
}
,
THREE.OrthographicCamera = function(t, e, i, r, n, o) {
    THREE.Camera.call(this),
    this.left = t,
    this.right = e,
    this.top = i,
    this.bottom = r,
    this.near = void 0 !== n ? n : .1,
    this.far = void 0 !== o ? o : 2e3,
    this.updateProjectionMatrix()
}
,
THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype),
THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
    this.projectionMatrix.makeOrthographic(this.left, this.right, this.top, this.bottom, this.near, this.far)
}
,
THREE.OrthographicCamera.prototype.clone = function() {
    var t = new THREE.OrthographicCamera;
    return THREE.Camera.prototype.clone.call(this, t),
    t.left = this.left,
    t.right = this.right,
    t.top = this.top,
    t.bottom = this.bottom,
    t.near = this.near,
    t.far = this.far,
    t
}
,
THREE.PerspectiveCamera = function(t, e, i, r) {
    THREE.Camera.call(this),
    this.fov = void 0 !== t ? t : 50,
    this.aspect = void 0 !== e ? e : 1,
    this.near = void 0 !== i ? i : .1,
    this.far = void 0 !== r ? r : 2e3,
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype),
THREE.PerspectiveCamera.prototype.setLens = function(t, e) {
    void 0 === e && (e = 24),
    this.fov = 2 * THREE.Math.radToDeg(Math.atan(e / (2 * t))),
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype.setViewOffset = function(t, e, i, r, n, o) {
    this.fullWidth = t,
    this.fullHeight = e,
    this.x = i,
    this.y = r,
    this.width = n,
    this.height = o,
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
    if (this.fullWidth) {
        var t = this.fullWidth / this.fullHeight
          , e = Math.tan(THREE.Math.degToRad(.5 * this.fov)) * this.near
          , i = -e
          , r = t * i
          , t = Math.abs(t * e - r)
          , i = Math.abs(e - i);
        this.projectionMatrix.makeFrustum(r + this.x * t / this.fullWidth, r + (this.x + this.width) * t / this.fullWidth, e - (this.y + this.height) * i / this.fullHeight, e - this.y * i / this.fullHeight, this.near, this.far)
    } else
        this.projectionMatrix.makePerspective(this.fov, this.aspect, this.near, this.far)
}
,
THREE.PerspectiveCamera.prototype.clone = function() {
    var t = new THREE.PerspectiveCamera;
    return THREE.Camera.prototype.clone.call(this, t),
    t.fov = this.fov,
    t.aspect = this.aspect,
    t.near = this.near,
    t.far = this.far,
    t
}
,
THREE.Light = function(t) {
    THREE.Object3D.call(this),
    this.color = new THREE.Color(t)
}
,
THREE.Light.prototype = Object.create(THREE.Object3D.prototype),
THREE.Light.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.Light),
    THREE.Object3D.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t
}
,
THREE.AmbientLight = function(t) {
    THREE.Light.call(this, t)
}
,
THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype),
THREE.AmbientLight.prototype.clone = function() {
    var t = new THREE.AmbientLight;
    return THREE.Light.prototype.clone.call(this, t),
    t
}
,
THREE.AreaLight = function(t, e) {
    THREE.Light.call(this, t),
    this.normal = new THREE.Vector3(0,-1,0),
    this.right = new THREE.Vector3(1,0,0),
    this.intensity = void 0 !== e ? e : 1,
    this.height = this.width = 1,
    this.constantAttenuation = 1.5,
    this.linearAttenuation = .5,
    this.quadraticAttenuation = .1
}
,
THREE.AreaLight.prototype = Object.create(THREE.Light.prototype),
THREE.DirectionalLight = function(t, e) {
    THREE.Light.call(this, t),
    this.position.set(0, 1, 0),
    this.target = new THREE.Object3D,
    this.intensity = void 0 !== e ? e : 1,
    this.onlyShadow = this.castShadow = !1,
    this.shadowCameraNear = 50,
    this.shadowCameraFar = 5e3,
    this.shadowCameraLeft = -500,
    this.shadowCameraTop = this.shadowCameraRight = 500,
    this.shadowCameraBottom = -500,
    this.shadowCameraVisible = !1,
    this.shadowBias = 0,
    this.shadowDarkness = .5,
    this.shadowMapHeight = this.shadowMapWidth = 512,
    this.shadowCascade = !1,
    this.shadowCascadeOffset = new THREE.Vector3(0,0,-1e3),
    this.shadowCascadeCount = 2,
    this.shadowCascadeBias = [0, 0, 0],
    this.shadowCascadeWidth = [512, 512, 512],
    this.shadowCascadeHeight = [512, 512, 512],
    this.shadowCascadeNearZ = [-1, .99, .998],
    this.shadowCascadeFarZ = [.99, .998, 1],
    this.shadowCascadeArray = [],
    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null 
}
,
THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype),
THREE.DirectionalLight.prototype.clone = function() {
    var t = new THREE.DirectionalLight;
    return THREE.Light.prototype.clone.call(this, t),
    t.target = this.target.clone(),
    t.intensity = this.intensity,
    t.castShadow = this.castShadow,
    t.onlyShadow = this.onlyShadow,
    t.shadowCameraNear = this.shadowCameraNear,
    t.shadowCameraFar = this.shadowCameraFar,
    t.shadowCameraLeft = this.shadowCameraLeft,
    t.shadowCameraRight = this.shadowCameraRight,
    t.shadowCameraTop = this.shadowCameraTop,
    t.shadowCameraBottom = this.shadowCameraBottom,
    t.shadowCameraVisible = this.shadowCameraVisible,
    t.shadowBias = this.shadowBias,
    t.shadowDarkness = this.shadowDarkness,
    t.shadowMapWidth = this.shadowMapWidth,
    t.shadowMapHeight = this.shadowMapHeight,
    t.shadowCascade = this.shadowCascade,
    t.shadowCascadeOffset.copy(this.shadowCascadeOffset),
    t.shadowCascadeCount = this.shadowCascadeCount,
    t.shadowCascadeBias = this.shadowCascadeBias.slice(0),
    t.shadowCascadeWidth = this.shadowCascadeWidth.slice(0),
    t.shadowCascadeHeight = this.shadowCascadeHeight.slice(0),
    t.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0),
    t.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0),
    t
}
,
THREE.HemisphereLight = function(t, e, i) {
    THREE.Light.call(this, t),
    this.position.set(0, 100, 0),
    this.groundColor = new THREE.Color(e),
    this.intensity = void 0 !== i ? i : 1
}
,
THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype),
THREE.HemisphereLight.prototype.clone = function() {
    var t = new THREE.HemisphereLight;
    return THREE.Light.prototype.clone.call(this, t),
    t.groundColor.copy(this.groundColor),
    t.intensity = this.intensity,
    t
}
,
THREE.PointLight = function(t, e, i) {
    THREE.Light.call(this, t),
    this.intensity = void 0 !== e ? e : 1,
    this.distance = void 0 !== i ? i : 0
}
,
THREE.PointLight.prototype = Object.create(THREE.Light.prototype),
THREE.PointLight.prototype.clone = function() {
    var t = new THREE.PointLight;
    return THREE.Light.prototype.clone.call(this, t),
    t.intensity = this.intensity,
    t.distance = this.distance,
    t
}
,
THREE.SpotLight = function(t, e, i, r, n) {
    THREE.Light.call(this, t),
    this.position.set(0, 1, 0),
    this.target = new THREE.Object3D,
    this.intensity = void 0 !== e ? e : 1,
    this.distance = void 0 !== i ? i : 0,
    this.angle = void 0 !== r ? r : Math.PI / 3,
    this.exponent = void 0 !== n ? n : 10,
    this.onlyShadow = this.castShadow = !1,
    this.shadowCameraNear = 50,
    this.shadowCameraFar = 5e3,
    this.shadowCameraFov = 50,
    this.shadowCameraVisible = !1,
    this.shadowBias = 0,
    this.shadowDarkness = .5,
    this.shadowMapHeight = this.shadowMapWidth = 512,
    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null 
}
,
THREE.SpotLight.prototype = Object.create(THREE.Light.prototype),
THREE.SpotLight.prototype.clone = function() {
    var t = new THREE.SpotLight;
    return THREE.Light.prototype.clone.call(this, t),
    t.target = this.target.clone(),
    t.intensity = this.intensity,
    t.distance = this.distance,
    t.angle = this.angle,
    t.exponent = this.exponent,
    t.castShadow = this.castShadow,
    t.onlyShadow = this.onlyShadow,
    t.shadowCameraNear = this.shadowCameraNear,
    t.shadowCameraFar = this.shadowCameraFar,
    t.shadowCameraFov = this.shadowCameraFov,
    t.shadowCameraVisible = this.shadowCameraVisible,
    t.shadowBias = this.shadowBias,
    t.shadowDarkness = this.shadowDarkness,
    t.shadowMapWidth = this.shadowMapWidth,
    t.shadowMapHeight = this.shadowMapHeight,
    t
}
,
THREE.Cache = function() {
    this.files = {}
}
,
THREE.Cache.prototype = {
    constructor: THREE.Cache,
    add: function(t, e) {
        this.files[t] = e
    },
    get: function(t) {
        return this.files[t]
    },
    remove: function(t) {
        delete this.files[t]
    },
    clear: function() {
        this.files = {}
    }
},
THREE.Loader = function(t) {
    this.statusDomElement = (this.showStatus = t) ? THREE.Loader.prototype.addStatusElement() : null ,
    this.imageLoader = new THREE.ImageLoader,
    this.onLoadStart = function() {}
    ,
    this.onLoadProgress = function() {}
    ,
    this.onLoadComplete = function() {}
}
,
THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: void 0,
    addStatusElement: function() {
        var t = document.createElement("div");
        return t.style.position = "absolute",
        t.style.right = "0px",
        t.style.top = "0px",
        t.style.fontSize = "0.8em",
        t.style.textAlign = "left",
        t.style.background = "rgba(0,0,0,0.25)",
        t.style.color = "#fff",
        t.style.width = "120px",
        t.style.padding = "0.5em 0.5em 0.5em 0.5em",
        t.style.zIndex = 1e3,
        t.innerHTML = "Loading ...",
        t
    },
    updateProgress: function(t) {
        var e = "Loaded "
          , e = t.total ? e + ((100 * t.loaded / t.total).toFixed(0) + "%") : e + ((t.loaded / 1024).toFixed(2) + " KB");
        this.statusDomElement.innerHTML = e
    },
    extractUrlBase: function(t) {
        return t = t.split("/"),
        1 === t.length ? "./" : (t.pop(),
        t.join("/") + "/")
    },
    initMaterials: function(t, e) {
        for (var i = [], r = 0; r < t.length; ++r)
            i[r] = this.createMaterial(t[r], e);
        return i
    },
    needsTangents: function(t) {
        for (var e = 0, i = t.length; i > e; e++)
            if (t[e] instanceof THREE.ShaderMaterial)
                return !0;
        return !1
    },
    createMaterial: function(t, e) {
        function i(t) {
            return t = Math.log(t) / Math.LN2,
            Math.pow(2, Math.round(t))
        }
        function r(t, r, n, a, s, l, h) {
            var c = /\.dds$/i.test(n)
              , u = e + n;
            if (c) {
                var p = THREE.ImageUtils.loadCompressedTexture(u);
                t[r] = p
            } else
                p = document.createElement("canvas"),
                t[r] = new THREE.Texture(p);
            t[r].sourceFile = n,
            a && (t[r].repeat.set(a[0], a[1]),
            1 !== a[0] && (t[r].wrapS = THREE.RepeatWrapping),
            1 !== a[1] && (t[r].wrapT = THREE.RepeatWrapping)),
            s && t[r].offset.set(s[0], s[1]),
            l && (n = {
                repeat: THREE.RepeatWrapping,
                mirror: THREE.MirroredRepeatWrapping
            },
            void 0 !== n[l[0]] && (t[r].wrapS = n[l[0]]),
            void 0 !== n[l[1]] && (t[r].wrapT = n[l[1]])),
            h && (t[r].anisotropy = h),
            c || (p = t[r],
            o.imageLoader.crossOrigin = o.crossOrigin,
            o.imageLoader.load(u, function(t) {
                if (!1 === THREE.Math.isPowerOfTwo(t.width) || !1 === THREE.Math.isPowerOfTwo(t.height)) {
                    var e = i(t.width)
                      , r = i(t.height);
                    p.image.width = e,
                    p.image.height = r,
                    p.image.getContext("2d").drawImage(t, 0, 0, e, r)
                } else
                    p.image = t;
                p.needsUpdate = !0
            }
            ))
        }
        function n(t) {
            return (255 * t[0] << 16) + (255 * t[1] << 8) + 255 * t[2]
        }
        var o = this
          , a = "MeshLambertMaterial"
          , s = {
            color: 15658734,
            opacity: 1,
            map: null ,
            lightMap: null ,
            normalMap: null ,
            bumpMap: null ,
            wireframe: !1
        };
        if (t.shading) {
            var l = t.shading.toLowerCase();
            "phong" === l ? a = "MeshPhongMaterial" : "basic" === l && (a = "MeshBasicMaterial")
        }
        return void 0 !== t.blending && void 0 !== THREE[t.blending] && (s.blending = THREE[t.blending]),
        (void 0 !== t.transparent || 1 > t.opacity) && (s.transparent = t.transparent),
        void 0 !== t.depthTest && (s.depthTest = t.depthTest),
        void 0 !== t.depthWrite && (s.depthWrite = t.depthWrite),
        void 0 !== t.visible && (s.visible = t.visible),
        void 0 !== t.flipSided && (s.side = THREE.BackSide),
        void 0 !== t.doubleSided && (s.side = THREE.DoubleSide),
        void 0 !== t.wireframe && (s.wireframe = t.wireframe),
        void 0 !== t.vertexColors && ("face" === t.vertexColors ? s.vertexColors = THREE.FaceColors : t.vertexColors && (s.vertexColors = THREE.VertexColors)),
        t.colorDiffuse ? s.color = n(t.colorDiffuse) : t.DbgColor && (s.color = t.DbgColor),
        t.colorSpecular && (s.specular = n(t.colorSpecular)),
        t.colorAmbient && (s.ambient = n(t.colorAmbient)),
        t.colorEmissive && (s.emissive = n(t.colorEmissive)),
        t.transparency && (s.opacity = t.transparency),
        t.specularCoef && (s.shininess = t.specularCoef),
        t.mapDiffuse && e && r(s, "map", t.mapDiffuse, t.mapDiffuseRepeat, t.mapDiffuseOffset, t.mapDiffuseWrap, t.mapDiffuseAnisotropy),
        t.mapLight && e && r(s, "lightMap", t.mapLight, t.mapLightRepeat, t.mapLightOffset, t.mapLightWrap, t.mapLightAnisotropy),
        t.mapBump && e && r(s, "bumpMap", t.mapBump, t.mapBumpRepeat, t.mapBumpOffset, t.mapBumpWrap, t.mapBumpAnisotropy),
        t.mapNormal && e && r(s, "normalMap", t.mapNormal, t.mapNormalRepeat, t.mapNormalOffset, t.mapNormalWrap, t.mapNormalAnisotropy),
        t.mapSpecular && e && r(s, "specularMap", t.mapSpecular, t.mapSpecularRepeat, t.mapSpecularOffset, t.mapSpecularWrap, t.mapSpecularAnisotropy),
        t.mapBumpScale && (s.bumpScale = t.mapBumpScale),
        t.mapNormal ? (a = THREE.ShaderLib.normalmap,
        l = THREE.UniformsUtils.clone(a.uniforms),
        l.tNormal.value = s.normalMap,
        t.mapNormalFactor && l.uNormalScale.value.set(t.mapNormalFactor, t.mapNormalFactor),
        s.map && (l.tDiffuse.value = s.map,
        l.enableDiffuse.value = !0),
        s.specularMap && (l.tSpecular.value = s.specularMap,
        l.enableSpecular.value = !0),
        s.lightMap && (l.tAO.value = s.lightMap,
        l.enableAO.value = !0),
        l.diffuse.value.setHex(s.color),
        l.specular.value.setHex(s.specular),
        l.ambient.value.setHex(s.ambient),
        l.shininess.value = s.shininess,
        void 0 !== s.opacity && (l.opacity.value = s.opacity),
        a = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: l,
            lights: !0,
            fog: !0
        }),
        s.transparent && (a.transparent = !0)) : a = new THREE[a](s),
        void 0 !== t.DbgName && (a.name = t.DbgName),
        a
    }
},
THREE.XHRLoader = function(t) {
    this.cache = new THREE.Cache,
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.XHRLoader.prototype = {
    constructor: THREE.XHRLoader,
    load: function(t, e, i, r) {
        var n = this
          , o = n.cache.get(t);
        void 0 !== o ? e(o) : (o = new XMLHttpRequest,
        void 0 !== e && o.addEventListener("load", function(i) {
            n.cache.add(t, i.target.responseText),
            e(i.target.responseText),
            n.manager.itemEnd(t)
        }
        , !1),
        void 0 !== i && o.addEventListener("progress", function(t) {
            i(t)
        }
        , !1),
        void 0 !== r && o.addEventListener("error", function(t) {
            r(t)
        }
        , !1),
        void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
        o.open("GET", t, !0),
        o.send(null ),
        n.manager.itemStart(t))
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    }
},
THREE.ImageLoader = function(t) {
    this.cache = new THREE.Cache,
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.ImageLoader.prototype = {
    constructor: THREE.ImageLoader,
    load: function(t, e, i, r) {
        var n = this
          , o = n.cache.get(t);
        return void 0 === o ? (o = document.createElement("img"),
        void 0 !== e && o.addEventListener("load", function(i) {
            n.cache.add(t, this),
            e(this),
            n.manager.itemEnd(t)
        }
        , !1),
        void 0 !== i && o.addEventListener("progress", function(t) {
            i(t)
        }
        , !1),
        void 0 !== r && o.addEventListener("error", function(t) {
            r(t)
        }
        , !1),
        void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
        o.src = t,
        n.manager.itemStart(t),
        o) : void e(o)
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    }
},
THREE.JSONLoader = function(t) {
    THREE.Loader.call(this, t),
    this.withCredentials = !1
}
,
THREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype),
THREE.JSONLoader.prototype.load = function(t, e, i) {
    i = i && "string" == typeof i ? i : this.extractUrlBase(t),
    this.onLoadStart(),
    this.loadAjaxJSON(this, t, e, i)
}
,
THREE.JSONLoader.prototype.loadAjaxJSON = function(t, e, i, r, n) {
    var o = new XMLHttpRequest
      , a = 0;
    o.onreadystatechange = function() {
        if (o.readyState === o.DONE)
            if (200 === o.status || 0 === o.status) {
                if (o.responseText) {
                    var s = JSON.parse(o.responseText);
                    if (void 0 !== s.metadata && "scene" === s.metadata.type)
                        return void console.error('THREE.JSONLoader: "' + e + '" seems to be a Scene. Use THREE.SceneLoader instead.');
                    s = t.parse(s, r),
                    i(s.geometry, s.materials)
                } else
                    console.error('THREE.JSONLoader: "' + e + '" seems to be unreachable or the file is empty.');
                t.onLoadComplete()
            } else
                console.error("THREE.JSONLoader: Couldn't load \"" + e + '" (' + o.status + ")");
        else
            o.readyState === o.LOADING ? n && (0 === a && (a = o.getResponseHeader("Content-Length")),
            n({
                total: a,
                loaded: o.responseText.length
            })) : o.readyState === o.HEADERS_RECEIVED && void 0 !== n && (a = o.getResponseHeader("Content-Length"))
    }
    ,
    o.open("GET", e, !0),
    o.withCredentials = this.withCredentials,
    o.send(null )
}
,
THREE.JSONLoader.prototype.parse = function(t, e) {
    var i = new THREE.Geometry
      , r = void 0 !== t.scale ? 1 / t.scale : 1;
    return function(e) {
        var r, n, o, a, s, l, h, c, u, p, d, f, m, g = t.faces;
        l = t.vertices;
        var E = t.normals
          , y = t.colors
          , v = 0;
        if (void 0 !== t.uvs) {
            for (r = 0; r < t.uvs.length; r++)
                t.uvs[r].length && v++;
            for (r = 0; v > r; r++)
                i.faceVertexUvs[r] = []
        }
        for (a = 0,
        s = l.length; s > a; )
            r = new THREE.Vector3,
            r.x = l[a++] * e,
            r.y = l[a++] * e,
            r.z = l[a++] * e,
            i.vertices.push(r);
        for (a = 0,
        s = g.length; s > a; )
            if (e = g[a++],
            u = 1 & e,
            o = 2 & e,
            r = 8 & e,
            h = 16 & e,
            p = 32 & e,
            l = 64 & e,
            e &= 128,
            u) {
                if (u = new THREE.Face3,
                u.a = g[a],
                u.b = g[a + 1],
                u.c = g[a + 3],
                d = new THREE.Face3,
                d.a = g[a + 1],
                d.b = g[a + 2],
                d.c = g[a + 3],
                a += 4,
                o && (o = g[a++],
                u.materialIndex = o,
                d.materialIndex = o),
                o = i.faces.length,
                r)
                    for (r = 0; v > r; r++)
                        for (f = t.uvs[r],
                        i.faceVertexUvs[r][o] = [],
                        i.faceVertexUvs[r][o + 1] = [],
                        n = 0; 4 > n; n++)
                            c = g[a++],
                            m = f[2 * c],
                            c = f[2 * c + 1],
                            m = new THREE.Vector2(m,c),
                            2 !== n && i.faceVertexUvs[r][o].push(m),
                            0 !== n && i.faceVertexUvs[r][o + 1].push(m);
                if (h && (h = 3 * g[a++],
                u.normal.set(E[h++], E[h++], E[h]),
                d.normal.copy(u.normal)),
                p)
                    for (r = 0; 4 > r; r++)
                        h = 3 * g[a++],
                        p = new THREE.Vector3(E[h++],E[h++],E[h]),
                        2 !== r && u.vertexNormals.push(p),
                        0 !== r && d.vertexNormals.push(p);
                if (l && (l = g[a++],
                l = y[l],
                u.color.setHex(l),
                d.color.setHex(l)),
                e)
                    for (r = 0; 4 > r; r++)
                        l = g[a++],
                        l = y[l],
                        2 !== r && u.vertexColors.push(new THREE.Color(l)),
                        0 !== r && d.vertexColors.push(new THREE.Color(l));
                i.faces.push(u),
                i.faces.push(d)
            } else {
                if (u = new THREE.Face3,
                u.a = g[a++],
                u.b = g[a++],
                u.c = g[a++],
                o && (o = g[a++],
                u.materialIndex = o),
                o = i.faces.length,
                r)
                    for (r = 0; v > r; r++)
                        for (f = t.uvs[r],
                        i.faceVertexUvs[r][o] = [],
                        n = 0; 3 > n; n++)
                            c = g[a++],
                            m = f[2 * c],
                            c = f[2 * c + 1],
                            m = new THREE.Vector2(m,c),
                            i.faceVertexUvs[r][o].push(m);
                if (h && (h = 3 * g[a++],
                u.normal.set(E[h++], E[h++], E[h])),
                p)
                    for (r = 0; 3 > r; r++)
                        h = 3 * g[a++],
                        p = new THREE.Vector3(E[h++],E[h++],E[h]),
                        u.vertexNormals.push(p);
                if (l && (l = g[a++],
                u.color.setHex(y[l])),
                e)
                    for (r = 0; 3 > r; r++)
                        l = g[a++],
                        u.vertexColors.push(new THREE.Color(y[l]));
                i.faces.push(u)
            }
    }
    (r),
    function() {
        var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
        if (t.skinWeights)
            for (var r = 0, n = t.skinWeights.length; n > r; r += e)
                i.skinWeights.push(new THREE.Vector4(t.skinWeights[r],e > 1 ? t.skinWeights[r + 1] : 0,e > 2 ? t.skinWeights[r + 2] : 0,e > 3 ? t.skinWeights[r + 3] : 0));
        if (t.skinIndices)
            for (r = 0,
            n = t.skinIndices.length; n > r; r += e)
                i.skinIndices.push(new THREE.Vector4(t.skinIndices[r],e > 1 ? t.skinIndices[r + 1] : 0,e > 2 ? t.skinIndices[r + 2] : 0,e > 3 ? t.skinIndices[r + 3] : 0));
        i.bones = t.bones,
        i.bones && 0 < i.bones.length && (i.skinWeights.length !== i.skinIndices.length || i.skinIndices.length !== i.vertices.length) && console.warn("When skinning, number of vertices (" + i.vertices.length + "), skinIndices (" + i.skinIndices.length + "), and skinWeights (" + i.skinWeights.length + ") should match."),
        i.animation = t.animation,
        i.animations = t.animations
    }
    (),
    function(e) {
        if (void 0 !== t.morphTargets) {
            var r, n, o, a, s, l;
            for (r = 0,
            n = t.morphTargets.length; n > r; r++)
                for (i.morphTargets[r] = {},
                i.morphTargets[r].name = t.morphTargets[r].name,
                i.morphTargets[r].vertices = [],
                s = i.morphTargets[r].vertices,
                l = t.morphTargets[r].vertices,
                o = 0,
                a = l.length; a > o; o += 3) {
                    var h = new THREE.Vector3;
                    h.x = l[o] * e,
                    h.y = l[o + 1] * e,
                    h.z = l[o + 2] * e,
                    s.push(h)
                }
        }
        if (void 0 !== t.morphColors)
            for (r = 0,
            n = t.morphColors.length; n > r; r++)
                for (i.morphColors[r] = {},
                i.morphColors[r].name = t.morphColors[r].name,
                i.morphColors[r].colors = [],
                a = i.morphColors[r].colors,
                s = t.morphColors[r].colors,
                e = 0,
                o = s.length; o > e; e += 3)
                    l = new THREE.Color(16755200),
                    l.setRGB(s[e], s[e + 1], s[e + 2]),
                    a.push(l)
    }
    (r),
    i.computeFaceNormals(),
    i.computeBoundingSphere(),
    void 0 === t.materials || 0 === t.materials.length ? {
        geometry: i
    } : (r = this.initMaterials(t.materials, e),
    this.needsTangents(r) && i.computeTangents(),
    {
        geometry: i,
        materials: r
    })
}
,
THREE.LoadingManager = function(t, e, i) {
    var r = this
      , n = 0
      , o = 0;
    this.onLoad = t,
    this.onProgress = e,
    this.onError = i,
    this.itemStart = function(t) {
        o++
    }
    ,
    this.itemEnd = function(t) {
        n++,
        void 0 !== r.onProgress && r.onProgress(t, n, o),
        n === o && void 0 !== r.onLoad && r.onLoad()
    }
}
,
THREE.DefaultLoadingManager = new THREE.LoadingManager,
THREE.BufferGeometryLoader = function(t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.BufferGeometryLoader.prototype = {
    constructor: THREE.BufferGeometryLoader,
    load: function(t, e, i, r) {
        var n = this;
        i = new THREE.XHRLoader,
        i.setCrossOrigin(this.crossOrigin),
        i.load(t, function(t) {
            e(n.parse(JSON.parse(t)))
        }
        )
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    },
    parse: function(t) {
        var e = new THREE.BufferGeometry
          , i = t.attributes
          , r = t.offsets;
        t = t.boundingSphere;
        for (var n in i) {
            var o = i[n];
            e.attributes[n] = {
                itemSize: o.itemSize,
                array: new self[o.type](o.array)
            }
        }
        return void 0 !== r && (e.offsets = JSON.parse(JSON.stringify(r))),
        void 0 !== t && (e.boundingSphere = new THREE.Sphere((new THREE.Vector3).fromArray(void 0 !== t.center ? t.center : [0, 0, 0]),t.radius)),
        e
    }
},
THREE.MaterialLoader = function(t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.MaterialLoader.prototype = {
    constructor: THREE.MaterialLoader,
    load: function(t, e, i, r) {
        var n = this;
        i = new THREE.XHRLoader,
        i.setCrossOrigin(this.crossOrigin),
        i.load(t, function(t) {
            e(n.parse(JSON.parse(t)))
        }
        )
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    },
    parse: function(t) {
        var e = new THREE[t.type];
        if (void 0 !== t.color && e.color.setHex(t.color),
        void 0 !== t.ambient && e.ambient.setHex(t.ambient),
        void 0 !== t.emissive && e.emissive.setHex(t.emissive),
        void 0 !== t.specular && e.specular.setHex(t.specular),
        void 0 !== t.shininess && (e.shininess = t.shininess),
        void 0 !== t.vertexColors && (e.vertexColors = t.vertexColors),
        void 0 !== t.blending && (e.blending = t.blending),
        void 0 !== t.side && (e.side = t.side),
        void 0 !== t.opacity && (e.opacity = t.opacity),
        void 0 !== t.transparent && (e.transparent = t.transparent),
        void 0 !== t.wireframe && (e.wireframe = t.wireframe),
        void 0 !== t.materials)
            for (var i = 0, r = t.materials.length; r > i; i++)
                e.materials.push(this.parse(t.materials[i]));
        return e
    }
},
THREE.ObjectLoader = function(t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.ObjectLoader.prototype = {
    constructor: THREE.ObjectLoader,
    load: function(t, e, i, r) {
        var n = this;
        i = new THREE.XHRLoader(n.manager),
        i.setCrossOrigin(this.crossOrigin),
        i.load(t, function(t) {
            e(n.parse(JSON.parse(t)))
        }
        )
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    },
    parse: function(t) {
        var e = this.parseGeometries(t.geometries)
          , i = this.parseMaterials(t.materials);
        return this.parseObject(t.object, e, i)
    },
    parseGeometries: function(t) {
        var e = {};
        if (void 0 !== t)
            for (var i = new THREE.JSONLoader, r = new THREE.BufferGeometryLoader, n = 0, o = t.length; o > n; n++) {
                var a, s = t[n];
                switch (s.type) {
                case "PlaneGeometry":
                    a = new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);
                    break;
                case "BoxGeometry":
                case "CubeGeometry":
                    a = new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                    break;
                case "CircleGeometry":
                    a = new THREE.CircleGeometry(s.radius,s.segments);
                    break;
                case "CylinderGeometry":
                    a = new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);
                    break;
                case "SphereGeometry":
                    a = new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                    break;
                case "IcosahedronGeometry":
                    a = new THREE.IcosahedronGeometry(s.radius,s.detail);
                    break;
                case "TorusGeometry":
                    a = new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                    break;
                case "TorusKnotGeometry":
                    a = new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);
                    break;
                case "BufferGeometry":
                    a = r.parse(s.data);
                    break;
                case "Geometry":
                    a = i.parse(s.data).geometry
                }
                a.uuid = s.uuid,
                void 0 !== s.name && (a.name = s.name),
                e[s.uuid] = a
            }
        return e
    },
    parseMaterials: function(t) {
        var e = {};
        if (void 0 !== t)
            for (var i = new THREE.MaterialLoader, r = 0, n = t.length; n > r; r++) {
                var o = t[r]
                  , a = i.parse(o);
                a.uuid = o.uuid,
                void 0 !== o.name && (a.name = o.name),
                e[o.uuid] = a
            }
        return e
    },
    parseObject: function() {
        var t = new THREE.Matrix4;
        return function(e, i, r) {
            var n;
            switch (e.type) {
            case "Scene":
                n = new THREE.Scene;
                break;
            case "PerspectiveCamera":
                n = new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far);
                break;
            case "OrthographicCamera":
                n = new THREE.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);
                break;
            case "AmbientLight":
                n = new THREE.AmbientLight(e.color);
                break;
            case "DirectionalLight":
                n = new THREE.DirectionalLight(e.color,e.intensity);
                break;
            case "PointLight":
                n = new THREE.PointLight(e.color,e.intensity,e.distance);
                break;
            case "SpotLight":
                n = new THREE.SpotLight(e.color,e.intensity,e.distance,e.angle,e.exponent);
                break;
            case "HemisphereLight":
                n = new THREE.HemisphereLight(e.color,e.groundColor,e.intensity);
                break;
            case "Mesh":
                n = i[e.geometry];
                var o = r[e.material];
                void 0 === n && console.error("THREE.ObjectLoader: Undefined geometry " + e.geometry),
                void 0 === o && console.error("THREE.ObjectLoader: Undefined material " + e.material),
                n = new THREE.Mesh(n,o);
                break;
            case "Sprite":
                o = r[e.material],
                void 0 === o && console.error("THREE.ObjectLoader: Undefined material " + e.material),
                n = new THREE.Sprite(o);
                break;
            default:
                n = new THREE.Object3D
            }
            if (n.uuid = e.uuid,
            void 0 !== e.name && (n.name = e.name),
            void 0 !== e.matrix ? (t.fromArray(e.matrix),
            t.decompose(n.position, n.quaternion, n.scale)) : (void 0 !== e.position && n.position.fromArray(e.position),
            void 0 !== e.rotation && n.rotation.fromArray(e.rotation),
            void 0 !== e.scale && n.scale.fromArray(e.scale)),
            void 0 !== e.visible && (n.visible = e.visible),
            void 0 !== e.userData && (n.userData = e.userData),
            void 0 !== e.children)
                for (var a in e.children)
                    n.add(this.parseObject(e.children[a], i, r));
            return n
        }
    }
    ()
},
THREE.SceneLoader = function() {
    this.onLoadStart = function() {}
    ,
    this.onLoadProgress = function() {}
    ,
    this.onLoadComplete = function() {}
    ,
    this.callbackSync = function() {}
    ,
    this.callbackProgress = function() {}
    ,
    this.geometryHandlers = {},
    this.hierarchyHandlers = {},
    this.addGeometryHandler("ascii", THREE.JSONLoader)
}
,
THREE.SceneLoader.prototype = {
    constructor: THREE.SceneLoader,
    load: function(t, e, i, r) {
        var n = this;
        i = new THREE.XHRLoader(n.manager),
        i.setCrossOrigin(this.crossOrigin),
        i.load(t, function(i) {
            n.parse(JSON.parse(i), e, t)
        }
        )
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    },
    addGeometryHandler: function(t, e) {
        this.geometryHandlers[t] = {
            loaderClass: e
        }
    },
    addHierarchyHandler: function(t, e) {
        this.hierarchyHandlers[t] = {
            loaderClass: e
        }
    },
    parse: function(t, e, i) {
        function r(t, e) {
            return "relativeToHTML" == e ? t : R + t
        }
        function n() {
            o(T.scene, S.objects)
        }
        function o(t, e) {
            var i, n, a, s, h, c;
            for (c in e) {
                var u = T.objects[c]
                  , m = e[c];
                if (void 0 === u) {
                    if (m.type && m.type in b.hierarchyHandlers) {
                        if (void 0 === m.loading) {
                            i = {
                                type: 1,
                                url: 1,
                                material: 1,
                                position: 1,
                                rotation: 1,
                                scale: 1,
                                visible: 1,
                                children: 1,
                                userData: 1,
                                skin: 1,
                                morph: 1,
                                mirroredLoop: 1,
                                duration: 1
                            };
                            var g, y = {};
                            for (g in m)
                                g in i || (y[g] = m[g]);
                            d = T.materials[m.material],
                            m.loading = !0,
                            i = b.hierarchyHandlers[m.type].loaderObject,
                            i.options ? i.load(r(m.url, S.urlBaseType), l(c, t, d, m)) : i.load(r(m.url, S.urlBaseType), l(c, t, d, m), y)
                        }
                    } else if (void 0 !== m.geometry) {
                        if (p = T.geometries[m.geometry]) {
                            if (u = !1,
                            d = T.materials[m.material],
                            u = d instanceof THREE.ShaderMaterial,
                            n = m.position,
                            a = m.rotation,
                            s = m.scale,
                            i = m.matrix,
                            h = m.quaternion,
                            m.material || (d = new THREE.MeshFaceMaterial(T.face_materials[m.geometry])),
                            d instanceof THREE.MeshFaceMaterial && 0 === d.materials.length && (d = new THREE.MeshFaceMaterial(T.face_materials[m.geometry])),
                            d instanceof THREE.MeshFaceMaterial)
                                for (y = 0; y < d.materials.length; y++)
                                    u = u || d.materials[y] instanceof THREE.ShaderMaterial;
                            u && p.computeTangents(),
                            m.skin ? u = new THREE.SkinnedMesh(p,d) : m.morph ? (u = new THREE.MorphAnimMesh(p,d),
                            void 0 !== m.duration && (u.duration = m.duration),
                            void 0 !== m.time && (u.time = m.time),
                            void 0 !== m.mirroredLoop && (u.mirroredLoop = m.mirroredLoop),
                            d.morphNormals && p.computeMorphNormals()) : u = new THREE.Mesh(p,d),
                            u.name = c,
                            i ? (u.matrixAutoUpdate = !1,
                            u.matrix.set(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9], i[10], i[11], i[12], i[13], i[14], i[15])) : (u.position.fromArray(n),
                            h ? u.quaternion.fromArray(h) : u.rotation.fromArray(a),
                            u.scale.fromArray(s)),
                            u.visible = m.visible,
                            u.castShadow = m.castShadow,
                            u.receiveShadow = m.receiveShadow,
                            t.add(u),
                            T.objects[c] = u
                        }
                    } else if ("AmbientLight" === m.type || "PointLight" === m.type || "DirectionalLight" === m.type || "SpotLight" === m.type || "HemisphereLight" === m.type || "AreaLight" === m.type) {
                        switch (y = m.color,
                        i = m.intensity,
                        n = m.distance,
                        a = m.position,
                        s = m.rotation,
                        m.type) {
                        case "AmbientLight":
                            E = new THREE.AmbientLight(y);
                            break;
                        case "PointLight":
                            E = new THREE.PointLight(y,i,n),
                            E.position.fromArray(a);
                            break;
                        case "DirectionalLight":
                            E = new THREE.DirectionalLight(y,i),
                            E.position.fromArray(m.direction);
                            break;
                        case "SpotLight":
                            E = new THREE.SpotLight(y,i,n,1),
                            E.angle = m.angle,
                            E.position.fromArray(a),
                            E.target.set(a[0], a[1] - n, a[2]),
                            E.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));
                            break;
                        case "HemisphereLight":
                            E = new THREE.DirectionalLight(y,i,n),
                            E.target.set(a[0], a[1] - n, a[2]),
                            E.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));
                            break;
                        case "AreaLight":
                            E = new THREE.AreaLight(y,i),
                            E.position.fromArray(a),
                            E.width = m.size,
                            E.height = m.size_y
                        }
                        t.add(E),
                        E.name = c,
                        T.lights[c] = E,
                        T.objects[c] = E
                    } else
                        "PerspectiveCamera" === m.type || "OrthographicCamera" === m.type ? (n = m.position,
                        a = m.rotation,
                        h = m.quaternion,
                        "PerspectiveCamera" === m.type ? f = new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far) : "OrthographicCamera" === m.type && (f = new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),
                        f.name = c,
                        f.position.fromArray(n),
                        void 0 !== h ? f.quaternion.fromArray(h) : void 0 !== a && f.rotation.fromArray(a),
                        t.add(f),
                        T.cameras[c] = f,
                        T.objects[c] = f) : (n = m.position,
                        a = m.rotation,
                        s = m.scale,
                        h = m.quaternion,
                        u = new THREE.Object3D,
                        u.name = c,
                        u.position.fromArray(n),
                        h ? u.quaternion.fromArray(h) : u.rotation.fromArray(a),
                        u.scale.fromArray(s),
                        u.visible = void 0 !== m.visible ? m.visible : !1,
                        t.add(u),
                        T.objects[c] = u,
                        T.empties[c] = u);
                    if (u) {
                        if (void 0 !== m.userData)
                            for (var v in m.userData)
                                u.userData[v] = m.userData[v];
                        if (void 0 !== m.groups)
                            for (y = 0; y < m.groups.length; y++)
                                i = m.groups[y],
                                void 0 === T.groups[i] && (T.groups[i] = []),
                                T.groups[i].push(c)
                    }
                }
                void 0 !== u && void 0 !== m.children && o(u, m.children)
            }
        }
        function a(t, e, i, r, o) {
            var a = o.rotation
              , s = o.quaternion
              , l = o.scale;
            t.position.fromArray(o.position),
            s ? t.quaternion.fromArray(s) : t.rotation.fromArray(a),
            t.scale.fromArray(l),
            r && t.traverse(function(t) {
                t.material = r
            }
            );
            var h = void 0 !== o.visible ? o.visible : !0;
            t.traverse(function(t) {
                t.visible = h
            }
            ),
            i.add(t),
            t.name = e,
            T.objects[e] = t,
            n()
        }
        function s(t) {
            return function(e, i) {
                e.name = t,
                T.geometries[t] = e,
                T.face_materials[t] = i,
                n(),
                y -= 1,
                b.onLoadComplete(),
                c()
            }
        }
        function l(t, e, i, r) {
            return function(n) {
                a(n.content ? n.content : n.dae ? n.scene : n, t, e, i, r),
                y -= 1,
                b.onLoadComplete(),
                c()
            }
        }
        function h(t) {
            return function(e, i) {
                e.name = t,
                T.geometries[t] = e,
                T.face_materials[t] = i
            }
        }
        function c() {
            if (b.callbackProgress({
                totalModels: _,
                totalTextures: x,
                loadedModels: _ - y,
                loadedTextures: x - v
            }, T),
            b.onLoadProgress(),
            0 === y && 0 === v) {
                for (var t = 0; t < H.length; t++) {
                    var i = H[t]
                      , r = T.objects[i.targetName];
                    r ? i.object.target = r : (i.object.target = new THREE.Object3D,
                    T.scene.add(i.object.target)),
                    i.object.target.userData.targetInverse = i.object
                }
                e(T)
            }
        }
        function u(t, e) {
            if (e(t),
            void 0 !== t.children)
                for (var i in t.children)
                    u(t.children[i], e)
        }
        var p, d, f, m, g, E, y, v, _, x, T, w, b = this, R = THREE.Loader.prototype.extractUrlBase(i), H = [], S = t;
        for (w in this.geometryHandlers)
            t = this.geometryHandlers[w].loaderClass,
            this.geometryHandlers[w].loaderObject = new t;
        for (w in this.hierarchyHandlers)
            t = this.hierarchyHandlers[w].loaderClass,
            this.hierarchyHandlers[w].loaderObject = new t;
        v = y = 0,
        T = {
            scene: new THREE.Scene,
            geometries: {},
            face_materials: {},
            materials: {},
            textures: {},
            objects: {},
            cameras: {},
            lights: {},
            fogs: {},
            empties: {},
            groups: {}
        },
        S.transform && (w = S.transform.position,
        t = S.transform.rotation,
        i = S.transform.scale,
        w && T.scene.position.fromArray(w),
        t && T.scene.rotation.fromArray(t),
        i && T.scene.scale.fromArray(i),
        w || t || i) && (T.scene.updateMatrix(),
        T.scene.updateMatrixWorld()),
        w = function(t) {
            return function() {
                v -= t,
                c(),
                b.onLoadComplete()
            }
        }
        ;
        for (var M in S.fogs)
            t = S.fogs[M],
            "linear" === t.type ? m = new THREE.Fog(0,t.near,t.far) : "exp2" === t.type && (m = new THREE.FogExp2(0,t.density)),
            t = t.color,
            m.color.setRGB(t[0], t[1], t[2]),
            T.fogs[M] = m;
        for (var C in S.geometries)
            m = S.geometries[C],
            m.type in this.geometryHandlers && (y += 1,
            b.onLoadStart());
        for (var A in S.objects)
            u(S.objects[A], function(t) {
                t.type && t.type in b.hierarchyHandlers && (y += 1,
                b.onLoadStart())
            }
            );
        _ = y;
        for (C in S.geometries)
            if (m = S.geometries[C],
            "cube" === m.type)
                p = new THREE.BoxGeometry(m.width,m.height,m.depth,m.widthSegments,m.heightSegments,m.depthSegments),
                p.name = C,
                T.geometries[C] = p;
            else if ("plane" === m.type)
                p = new THREE.PlaneGeometry(m.width,m.height,m.widthSegments,m.heightSegments),
                p.name = C,
                T.geometries[C] = p;
            else if ("sphere" === m.type)
                p = new THREE.SphereGeometry(m.radius,m.widthSegments,m.heightSegments),
                p.name = C,
                T.geometries[C] = p;
            else if ("cylinder" === m.type)
                p = new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs),
                p.name = C,
                T.geometries[C] = p;
            else if ("torus" === m.type)
                p = new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,m.segmentsT),
                p.name = C,
                T.geometries[C] = p;
            else if ("icosahedron" === m.type)
                p = new THREE.IcosahedronGeometry(m.radius,m.subdivisions),
                p.name = C,
                T.geometries[C] = p;
            else if (m.type in this.geometryHandlers) {
                A = {};
                for (g in m)
                    "type" !== g && "url" !== g && (A[g] = m[g]);
                this.geometryHandlers[m.type].loaderObject.load(r(m.url, S.urlBaseType), s(C), A)
            } else
                "embedded" === m.type && (A = S.embeds[m.id],
                A.metadata = S.metadata,
                A && (A = this.geometryHandlers.ascii.loaderObject.parse(A, ""),
                h(C)(A.geometry, A.materials)));
        for (var P in S.textures)
            if (C = S.textures[P],
            C.url instanceof Array)
                for (v += C.url.length,
                g = 0; g < C.url.length; g++)
                    b.onLoadStart();
            else
                v += 1,
                b.onLoadStart();
        x = v;
        for (P in S.textures) {
            if (C = S.textures[P],
            void 0 !== C.mapping && void 0 !== THREE[C.mapping] && (C.mapping = new THREE[C.mapping]),
            C.url instanceof Array) {
                for (A = C.url.length,
                m = [],
                g = 0; A > g; g++)
                    m[g] = r(C.url[g], S.urlBaseType);
                g = (g = /\.dds$/i.test(m[0])) ? THREE.ImageUtils.loadCompressedTextureCube(m, C.mapping, w(A)) : THREE.ImageUtils.loadTextureCube(m, C.mapping, w(A))
            } else
                g = /\.dds$/i.test(C.url),
                A = r(C.url, S.urlBaseType),
                m = w(1),
                g = g ? THREE.ImageUtils.loadCompressedTexture(A, C.mapping, m) : THREE.ImageUtils.loadTexture(A, C.mapping, m),
                void 0 !== THREE[C.minFilter] && (g.minFilter = THREE[C.minFilter]),
                void 0 !== THREE[C.magFilter] && (g.magFilter = THREE[C.magFilter]),
                C.anisotropy && (g.anisotropy = C.anisotropy),
                C.repeat && (g.repeat.set(C.repeat[0], C.repeat[1]),
                1 !== C.repeat[0] && (g.wrapS = THREE.RepeatWrapping),
                1 !== C.repeat[1] && (g.wrapT = THREE.RepeatWrapping)),
                C.offset && g.offset.set(C.offset[0], C.offset[1]),
                C.wrap && (A = {
                    repeat: THREE.RepeatWrapping,
                    mirror: THREE.MirroredRepeatWrapping
                },
                void 0 !== A[C.wrap[0]] && (g.wrapS = A[C.wrap[0]]),
                void 0 !== A[C.wrap[1]] && (g.wrapT = A[C.wrap[1]]));
            T.textures[P] = g
        }
        var L, D;
        for (L in S.materials) {
            P = S.materials[L];
            for (D in P.parameters)
                "envMap" === D || "map" === D || "lightMap" === D || "bumpMap" === D ? P.parameters[D] = T.textures[P.parameters[D]] : "shading" === D ? P.parameters[D] = "flat" === P.parameters[D] ? THREE.FlatShading : THREE.SmoothShading : "side" === D ? P.parameters[D] = "double" == P.parameters[D] ? THREE.DoubleSide : "back" == P.parameters[D] ? THREE.BackSide : THREE.FrontSide : "blending" === D ? P.parameters[D] = P.parameters[D] in THREE ? THREE[P.parameters[D]] : THREE.NormalBlending : "combine" === D ? P.parameters[D] = P.parameters[D] in THREE ? THREE[P.parameters[D]] : THREE.MultiplyOperation : "vertexColors" === D ? "face" == P.parameters[D] ? P.parameters[D] = THREE.FaceColors : P.parameters[D] && (P.parameters[D] = THREE.VertexColors) : "wrapRGB" === D && (w = P.parameters[D],
                P.parameters[D] = new THREE.Vector3(w[0],w[1],w[2]));
            void 0 !== P.parameters.opacity && 1 > P.parameters.opacity && (P.parameters.transparent = !0),
            P.parameters.normalMap ? (w = THREE.ShaderLib.normalmap,
            C = THREE.UniformsUtils.clone(w.uniforms),
            g = P.parameters.color,
            A = P.parameters.specular,
            m = P.parameters.ambient,
            M = P.parameters.shininess,
            C.tNormal.value = T.textures[P.parameters.normalMap],
            P.parameters.normalScale && C.uNormalScale.value.set(P.parameters.normalScale[0], P.parameters.normalScale[1]),
            P.parameters.map && (C.tDiffuse.value = P.parameters.map,
            C.enableDiffuse.value = !0),
            P.parameters.envMap && (C.tCube.value = P.parameters.envMap,
            C.enableReflection.value = !0,
            C.reflectivity.value = P.parameters.reflectivity),
            P.parameters.lightMap && (C.tAO.value = P.parameters.lightMap,
            C.enableAO.value = !0),
            P.parameters.specularMap && (C.tSpecular.value = T.textures[P.parameters.specularMap],
            C.enableSpecular.value = !0),
            P.parameters.displacementMap && (C.tDisplacement.value = T.textures[P.parameters.displacementMap],
            C.enableDisplacement.value = !0,
            C.uDisplacementBias.value = P.parameters.displacementBias,
            C.uDisplacementScale.value = P.parameters.displacementScale),
            C.diffuse.value.setHex(g),
            C.specular.value.setHex(A),
            C.ambient.value.setHex(m),
            C.shininess.value = M,
            P.parameters.opacity && (C.opacity.value = P.parameters.opacity),
            d = new THREE.ShaderMaterial({
                fragmentShader: w.fragmentShader,
                vertexShader: w.vertexShader,
                uniforms: C,
                lights: !0,
                fog: !0
            })) : d = new THREE[P.type](P.parameters),
            d.name = L,
            T.materials[L] = d
        }
        for (L in S.materials)
            if (P = S.materials[L],
            P.parameters.materials) {
                for (D = [],
                g = 0; g < P.parameters.materials.length; g++)
                    D.push(T.materials[P.parameters.materials[g]]);
                T.materials[L].materials = D
            }
        n(),
        T.cameras && S.defaults.camera && (T.currentCamera = T.cameras[S.defaults.camera]),
        T.fogs && S.defaults.fog && (T.scene.fog = T.fogs[S.defaults.fog]),
        b.callbackSync(T),
        c()
    }
},
THREE.TextureLoader = function(t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
}
,
THREE.TextureLoader.prototype = {
    constructor: THREE.TextureLoader,
    load: function(t, e, i, r) {
        i = new THREE.ImageLoader(this.manager),
        i.setCrossOrigin(this.crossOrigin),
        i.load(t, function(t) {
            t = new THREE.Texture(t),
            t.needsUpdate = !0,
            void 0 !== e && e(t)
        }
        )
    },
    setCrossOrigin: function(t) {
        this.crossOrigin = t
    }
},
THREE.Material = function() {
    this.id = THREE.MaterialIdCount++,
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.side = THREE.FrontSide,
    this.opacity = 1,
    this.transparent = !1,
    this.blending = THREE.NormalBlending,
    this.blendSrc = THREE.SrcAlphaFactor,
    this.blendDst = THREE.OneMinusSrcAlphaFactor,
    this.blendEquation = THREE.AddEquation,
    this.depthWrite = this.depthTest = !0,
    this.polygonOffset = !1,
    this.overdraw = this.alphaTest = this.polygonOffsetUnits = this.polygonOffsetFactor = 0,
    this.needsUpdate = this.visible = !0
}
,
THREE.Material.prototype = {
    constructor: THREE.Material,
    setValues: function(t) {
        if (void 0 !== t)
            for (var e in t) {
                var i = t[e];
                if (void 0 === i)
                    console.warn("THREE.Material: '" + e + "' parameter is undefined.");
                else if (e in this) {
                    var r = this[e];
                    r instanceof THREE.Color ? r.set(i) : r instanceof THREE.Vector3 && i instanceof THREE.Vector3 ? r.copy(i) : this[e] = "overdraw" == e ? Number(i) : i
                }
            }
    },
    clone: function(t) {
        return void 0 === t && (t = new THREE.Material),
        t.name = this.name,
        t.side = this.side,
        t.opacity = this.opacity,
        t.transparent = this.transparent,
        t.blending = this.blending,
        t.blendSrc = this.blendSrc,
        t.blendDst = this.blendDst,
        t.blendEquation = this.blendEquation,
        t.depthTest = this.depthTest,
        t.depthWrite = this.depthWrite,
        t.polygonOffset = this.polygonOffset,
        t.polygonOffsetFactor = this.polygonOffsetFactor,
        t.polygonOffsetUnits = this.polygonOffsetUnits,
        t.alphaTest = this.alphaTest,
        t.overdraw = this.overdraw,
        t.visible = this.visible,
        t
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),
THREE.MaterialIdCount = 0,
THREE.LineBasicMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.linewidth = 1,
    this.linejoin = this.linecap = "round",
    this.vertexColors = !1,
    this.fog = !0,
    this.setValues(t)
}
,
THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineBasicMaterial.prototype.clone = function() {
    var t = new THREE.LineBasicMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.linewidth = this.linewidth,
    t.linecap = this.linecap,
    t.linejoin = this.linejoin,
    t.vertexColors = this.vertexColors,
    t.fog = this.fog,
    t
}
,
THREE.LineDashedMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.scale = this.linewidth = 1,
    this.dashSize = 3,
    this.gapSize = 1,
    this.vertexColors = !1,
    this.fog = !0,
    this.setValues(t)
}
,
THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineDashedMaterial.prototype.clone = function() {
    var t = new THREE.LineDashedMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.linewidth = this.linewidth,
    t.scale = this.scale,
    t.dashSize = this.dashSize,
    t.gapSize = this.gapSize,
    t.vertexColors = this.vertexColors,
    t.fog = this.fog,
    t
}
,
THREE.MeshBasicMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.envMap = this.specularMap = this.lightMap = this.map = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinejoin = this.wireframeLinecap = "round",
    this.vertexColors = THREE.NoColors,
    this.morphTargets = this.skinning = !1,
    this.setValues(t)
}
,
THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshBasicMaterial.prototype.clone = function() {
    var t = new THREE.MeshBasicMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.map = this.map,
    t.lightMap = this.lightMap,
    t.specularMap = this.specularMap,
    t.envMap = this.envMap,
    t.combine = this.combine,
    t.reflectivity = this.reflectivity,
    t.refractionRatio = this.refractionRatio,
    t.fog = this.fog,
    t.shading = this.shading,
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t.wireframeLinecap = this.wireframeLinecap,
    t.wireframeLinejoin = this.wireframeLinejoin,
    t.vertexColors = this.vertexColors,
    t.skinning = this.skinning,
    t.morphTargets = this.morphTargets,
    t
}
,
THREE.MeshLambertMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.ambient = new THREE.Color(16777215),
    this.emissive = new THREE.Color(0),
    this.wrapAround = !1,
    this.wrapRGB = new THREE.Vector3(1,1,1),
    this.envMap = this.specularMap = this.lightMap = this.map = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinejoin = this.wireframeLinecap = "round",
    this.vertexColors = THREE.NoColors,
    this.morphNormals = this.morphTargets = this.skinning = !1,
    this.setValues(t)
}
,
THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshLambertMaterial.prototype.clone = function() {
    var t = new THREE.MeshLambertMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.ambient.copy(this.ambient),
    t.emissive.copy(this.emissive),
    t.wrapAround = this.wrapAround,
    t.wrapRGB.copy(this.wrapRGB),
    t.map = this.map,
    t.lightMap = this.lightMap,
    t.specularMap = this.specularMap,
    t.envMap = this.envMap,
    t.combine = this.combine,
    t.reflectivity = this.reflectivity,
    t.refractionRatio = this.refractionRatio,
    t.fog = this.fog,
    t.shading = this.shading,
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t.wireframeLinecap = this.wireframeLinecap,
    t.wireframeLinejoin = this.wireframeLinejoin,
    t.vertexColors = this.vertexColors,
    t.skinning = this.skinning,
    t.morphTargets = this.morphTargets,
    t.morphNormals = this.morphNormals,
    t
}
,
THREE.MeshPhongMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.ambient = new THREE.Color(16777215),
    this.emissive = new THREE.Color(0),
    this.specular = new THREE.Color(1118481),
    this.shininess = 30,
    this.wrapAround = this.metal = !1,
    this.wrapRGB = new THREE.Vector3(1,1,1),
    this.bumpMap = this.lightMap = this.map = null ,
    this.bumpScale = 1,
    this.normalMap = null ,
    this.normalScale = new THREE.Vector2(1,1),
    this.envMap = this.specularMap = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinejoin = this.wireframeLinecap = "round",
    this.vertexColors = THREE.NoColors,
    this.morphNormals = this.morphTargets = this.skinning = !1,
    this.setValues(t)
}
,
THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshPhongMaterial.prototype.clone = function() {
    var t = new THREE.MeshPhongMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.ambient.copy(this.ambient),
    t.emissive.copy(this.emissive),
    t.specular.copy(this.specular),
    t.shininess = this.shininess,
    t.metal = this.metal,
    t.wrapAround = this.wrapAround,
    t.wrapRGB.copy(this.wrapRGB),
    t.map = this.map,
    t.lightMap = this.lightMap,
    t.bumpMap = this.bumpMap,
    t.bumpScale = this.bumpScale,
    t.normalMap = this.normalMap,
    t.normalScale.copy(this.normalScale),
    t.specularMap = this.specularMap,
    t.envMap = this.envMap,
    t.combine = this.combine,
    t.reflectivity = this.reflectivity,
    t.refractionRatio = this.refractionRatio,
    t.fog = this.fog,
    t.shading = this.shading,
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t.wireframeLinecap = this.wireframeLinecap,
    t.wireframeLinejoin = this.wireframeLinejoin,
    t.vertexColors = this.vertexColors,
    t.skinning = this.skinning,
    t.morphTargets = this.morphTargets,
    t.morphNormals = this.morphNormals,
    t
}
,
THREE.MeshDepthMaterial = function(t) {
    THREE.Material.call(this),
    this.wireframe = this.morphTargets = !1,
    this.wireframeLinewidth = 1,
    this.setValues(t)
}
,
THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshDepthMaterial.prototype.clone = function() {
    var t = new THREE.MeshDepthMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t
}
,
THREE.MeshNormalMaterial = function(t) {
    THREE.Material.call(this, t),
    this.shading = THREE.FlatShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.morphTargets = !1,
    this.setValues(t)
}
,
THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshNormalMaterial.prototype.clone = function() {
    var t = new THREE.MeshNormalMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.shading = this.shading,
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t
}
,
THREE.MeshFaceMaterial = function(t) {
    this.materials = t instanceof Array ? t : []
}
,
THREE.MeshFaceMaterial.prototype.clone = function() {
    for (var t = new THREE.MeshFaceMaterial, e = 0; e < this.materials.length; e++)
        t.materials.push(this.materials[e].clone());
    return t
}
,
THREE.ParticleSystemMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.map = null ,
    this.size = 1,
    this.sizeAttenuation = !0,
    this.vertexColors = !1,
    this.fog = !0,
    this.setValues(t)
}
,
THREE.ParticleSystemMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.ParticleSystemMaterial.prototype.clone = function() {
    var t = new THREE.ParticleSystemMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.map = this.map,
    t.size = this.size,
    t.sizeAttenuation = this.sizeAttenuation,
    t.vertexColors = this.vertexColors,
    t.fog = this.fog,
    t
}
,
THREE.ParticleBasicMaterial = THREE.ParticleSystemMaterial,
THREE.ShaderMaterial = function(t) {
    THREE.Material.call(this),
    this.vertexShader = this.fragmentShader = "void main() {}",
    this.uniforms = {},
    this.defines = {},
    this.attributes = null ,
    this.shading = THREE.SmoothShading,
    this.linewidth = 1,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.lights = this.fog = !1,
    this.vertexColors = THREE.NoColors,
    this.morphNormals = this.morphTargets = this.skinning = !1,
    this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    },
    this.index0AttributeName = void 0,
    this.setValues(t)
}
,
THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.ShaderMaterial.prototype.clone = function() {
    var t = new THREE.ShaderMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.fragmentShader = this.fragmentShader,
    t.vertexShader = this.vertexShader,
    t.uniforms = THREE.UniformsUtils.clone(this.uniforms),
    t.attributes = this.attributes,
    t.defines = this.defines,
    t.shading = this.shading,
    t.wireframe = this.wireframe,
    t.wireframeLinewidth = this.wireframeLinewidth,
    t.fog = this.fog,
    t.lights = this.lights,
    t.vertexColors = this.vertexColors,
    t.skinning = this.skinning,
    t.morphTargets = this.morphTargets,
    t.morphNormals = this.morphNormals,
    t
}
,
THREE.RawShaderMaterial = function(t) {
    THREE.ShaderMaterial.call(this, t)
}
,
THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),
THREE.RawShaderMaterial.prototype.clone = function() {
    var t = new THREE.RawShaderMaterial;
    return THREE.ShaderMaterial.prototype.clone.call(this, t),
    t
}
,
THREE.SpriteMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.map = null ,
    this.rotation = 0,
    this.fog = !1,
    this.setValues(t)
}
,
THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.SpriteMaterial.prototype.clone = function() {
    var t = new THREE.SpriteMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.map = this.map,
    t.rotation = this.rotation,
    t.fog = this.fog,
    t
}
,
THREE.SpriteCanvasMaterial = function(t) {
    THREE.Material.call(this),
    this.color = new THREE.Color(16777215),
    this.program = function(t, e) {}
    ,
    this.setValues(t)
}
,
THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.SpriteCanvasMaterial.prototype.clone = function() {
    var t = new THREE.SpriteCanvasMaterial;
    return THREE.Material.prototype.clone.call(this, t),
    t.color.copy(this.color),
    t.program = this.program,
    t
}
,
THREE.ParticleCanvasMaterial = THREE.SpriteCanvasMaterial,
THREE.Texture = function(t, e, i, r, n, o, a, s, l) {
    this.id = THREE.TextureIdCount++,
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.image = t,
    this.mipmaps = [],
    this.mapping = void 0 !== e ? e : new THREE.UVMapping,
    this.wrapS = void 0 !== i ? i : THREE.ClampToEdgeWrapping,
    this.wrapT = void 0 !== r ? r : THREE.ClampToEdgeWrapping,
    this.magFilter = void 0 !== n ? n : THREE.LinearFilter,
    this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter,
    this.anisotropy = void 0 !== l ? l : 1,
    this.format = void 0 !== a ? a : THREE.RGBAFormat,
    this.type = void 0 !== s ? s : THREE.UnsignedByteType,
    this.offset = new THREE.Vector2(0,0),
    this.repeat = new THREE.Vector2(1,1),
    this.generateMipmaps = !0,
    this.premultiplyAlpha = !1,
    this.flipY = !0,
    this.unpackAlignment = 4,
    this._needsUpdate = !1,
    this.onUpdate = null 
}
,
THREE.Texture.prototype = {
    constructor: THREE.Texture,
    get needsUpdate() {
        return this._needsUpdate
    },
    set needsUpdate(t) {
        !0 === t && this.update(),
        this._needsUpdate = t
    },
    clone: function(t) {
        return void 0 === t && (t = new THREE.Texture),
        t.image = this.image,
        t.mipmaps = this.mipmaps.slice(0),
        t.mapping = this.mapping,
        t.wrapS = this.wrapS,
        t.wrapT = this.wrapT,
        t.magFilter = this.magFilter,
        t.minFilter = this.minFilter,
        t.anisotropy = this.anisotropy,
        t.format = this.format,
        t.type = this.type,
        t.offset.copy(this.offset),
        t.repeat.copy(this.repeat),
        t.generateMipmaps = this.generateMipmaps,
        t.premultiplyAlpha = this.premultiplyAlpha,
        t.flipY = this.flipY,
        t.unpackAlignment = this.unpackAlignment,
        t
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        })
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),
THREE.TextureIdCount = 0,
THREE.CompressedTexture = function(t, e, i, r, n, o, a, s, l, h, c) {
    THREE.Texture.call(this, null , o, a, s, l, h, r, n, c),
    this.image = {
        width: e,
        height: i
    },
    this.mipmaps = t,
    this.generateMipmaps = !1
}
,
THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CompressedTexture.prototype.clone = function() {
    var t = new THREE.CompressedTexture;
    return THREE.Texture.prototype.clone.call(this, t),
    t
}
,
THREE.DataTexture = function(t, e, i, r, n, o, a, s, l, h, c) {
    THREE.Texture.call(this, null , o, a, s, l, h, r, n, c),
    this.image = {
        data: t,
        width: e,
        height: i
    }
}
,
THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.DataTexture.prototype.clone = function() {
    var t = new THREE.DataTexture;
    return THREE.Texture.prototype.clone.call(this, t),
    t
}
,
THREE.ParticleSystem = function(t, e) {
    THREE.Object3D.call(this),
    this.geometry = void 0 !== t ? t : new THREE.Geometry,
    this.material = void 0 !== e ? e : new THREE.ParticleSystemMaterial({
        color: 16777215 * Math.random()
    }),
    this.frustumCulled = this.sortParticles = !1
}
,
THREE.ParticleSystem.prototype = Object.create(THREE.Object3D.prototype),
THREE.ParticleSystem.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.ParticleSystem(this.geometry,this.material)),
    t.sortParticles = this.sortParticles,
    THREE.Object3D.prototype.clone.call(this, t),
    t
}
,
THREE.Line = function(t, e, i) {
    THREE.Object3D.call(this),
    this.geometry = void 0 !== t ? t : new THREE.Geometry,
    this.material = void 0 !== e ? e : new THREE.LineBasicMaterial({
        color: 16777215 * Math.random()
    }),
    this.type = void 0 !== i ? i : THREE.LineStrip
}
,
THREE.LineStrip = 0,
THREE.LinePieces = 1,
THREE.Line.prototype = Object.create(THREE.Object3D.prototype),
THREE.Line.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.Line(this.geometry,this.material,this.type)),
    THREE.Object3D.prototype.clone.call(this, t),
    t
}
,
THREE.Mesh = function(t, e) {
    THREE.Object3D.call(this),
    this.geometry = void 0 !== t ? t : new THREE.Geometry,
    this.material = void 0 !== e ? e : new THREE.MeshBasicMaterial({
        color: 16777215 * Math.random()
    }),
    this.updateMorphTargets()
}
,
THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype),
THREE.Mesh.prototype.updateMorphTargets = function() {
    if (void 0 !== this.geometry.morphTargets && 0 < this.geometry.morphTargets.length) {
        this.morphTargetBase = -1,
        this.morphTargetForcedOrder = [],
        this.morphTargetInfluences = [],
        this.morphTargetDictionary = {};
        for (var t = 0, e = this.geometry.morphTargets.length; e > t; t++)
            this.morphTargetInfluences.push(0),
            this.morphTargetDictionary[this.geometry.morphTargets[t].name] = t
    }
}
,
THREE.Mesh.prototype.getMorphTargetIndexByName = function(t) {
    return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : (console.log("THREE.Mesh.getMorphTargetIndexByName: morph target " + t + " does not exist. Returning 0."),
    0)
}
,
THREE.Mesh.prototype.clone = function(t, e) {
    return void 0 === t && (t = new THREE.Mesh(this.geometry,this.material)),
    THREE.Object3D.prototype.clone.call(this, t, e),
    t
}
,
THREE.Bone = function(t) {
    THREE.Object3D.call(this),
    this.skin = t,
    this.skinMatrix = new THREE.Matrix4,
    this.accumulatedSclWeight = this.accumulatedPosWeight = this.accumulatedRotWeight = 0
}
,
THREE.Bone.prototype = Object.create(THREE.Object3D.prototype),
THREE.Bone.prototype.update = function(t, e) {
    this.matrixAutoUpdate && (e |= this.updateMatrix()),
    (e || this.matrixWorldNeedsUpdate) && (t ? this.skinMatrix.multiplyMatrices(t, this.matrix) : this.skinMatrix.copy(this.matrix),
    this.matrixWorldNeedsUpdate = !1,
    e = !0,
    this.accumulatedSclWeight = this.accumulatedPosWeight = this.accumulatedRotWeight = 0);
    for (var i = 0, r = this.children.length; r > i; i++)
        this.children[i].update(this.skinMatrix, e);
}
,
THREE.Skeleton = function(t, e) {
    this.useVertexTexture = void 0 !== e ? e : !0,
    this.bones = [],
    this.boneMatrices = [];
    var i, r, n, o, a;
    if (void 0 !== t) {
        for (var s = 0; s < t.length; ++s)
            r = t[s],
            n = r.pos,
            o = r.rotq,
            a = r.scl,
            i = this.addBone(),
            i.name = r.name,
            i.position.set(n[0], n[1], n[2]),
            i.quaternion.set(o[0], o[1], o[2], o[3]),
            void 0 !== a ? i.scale.set(a[0], a[1], a[2]) : i.scale.set(1, 1, 1);
        for (s = 0; s < t.length; ++s)
            r = t[s],
            -1 !== r.parent && this.bones[r.parent].add(this.bones[s]);
        i = this.bones.length,
        this.useVertexTexture ? (this.boneTextureHeight = this.boneTextureWidth = i = i > 256 ? 64 : i > 64 ? 32 : i > 16 ? 16 : 8,
        this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
        this.boneTexture = new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),
        this.boneTexture.minFilter = THREE.NearestFilter,
        this.boneTexture.magFilter = THREE.NearestFilter,
        this.boneTexture.generateMipmaps = !1,
        this.boneTexture.flipY = !1) : this.boneMatrices = new Float32Array(16 * i)
    }
}
,
THREE.Skeleton.prototype = Object.create(THREE.Mesh.prototype),
THREE.Skeleton.prototype.addBone = function(t) {
    return void 0 === t && (t = new THREE.Bone(this)),
    this.bones.push(t),
    t
}
,
THREE.Skeleton.prototype.calculateInverses = function(t) {
    this.boneInverses = [],
    t = 0;
    for (var e = this.bones.length; e > t; ++t) {
        var i = new THREE.Matrix4;
        i.getInverse(this.bones[t].skinMatrix),
        this.boneInverses.push(i)
    }
}
,
THREE.SkinnedMesh = function(t, e, i) {
    for (THREE.Mesh.call(this, t, e),
    this.skeleton = new THREE.Skeleton(this.geometry && this.geometry.bones,i),
    t = 0; t < this.skeleton.bones.length; ++t)
        e = this.skeleton.bones[t],
        void 0 === e.parent && this.add(e);
    this.identityMatrix = new THREE.Matrix4,
    this.pose()
}
,
THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.SkinnedMesh.prototype.updateMatrixWorld = function() {
    var t = new THREE.Matrix4;
    return function(e) {
        this.matrixAutoUpdate && this.updateMatrix(),
        (this.matrixWorldNeedsUpdate || e) && (this.parent ? this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix) : this.matrixWorld.copy(this.matrix),
        this.matrixWorldNeedsUpdate = !1),
        e = 0;
        for (var i = this.children.length; i > e; e++) {
            var r = this.children[e];
            r instanceof THREE.Bone ? r.update(this.identityMatrix, !1) : r.updateMatrixWorld(!0)
        }
        for (void 0 === this.skeleton.boneInverses && this.skeleton.calculateInverses(),
        e = 0,
        i = this.skeleton.bones.length; i > e; e++)
            t.multiplyMatrices(this.skeleton.bones[e].skinMatrix, this.skeleton.boneInverses[e]),
            t.flattenToArrayOffset(this.skeleton.boneMatrices, 16 * e);
        this.skeleton.useVertexTexture && (this.skeleton.boneTexture.needsUpdate = !0)
    }
}
(),
THREE.SkinnedMesh.prototype.pose = function() {
    this.updateMatrixWorld(!0),
    this.normalizeSkinWeights()
}
,
THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
    if (this.geometry instanceof THREE.Geometry)
        for (var t = 0; t < this.geometry.skinIndices.length; t++) {
            var e = this.geometry.skinWeights[t]
              , i = 1 / e.lengthManhattan();
            1 / 0 !== i ? e.multiplyScalar(i) : e.set(1)
        }
}
,
THREE.SkinnedMesh.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),
    THREE.Mesh.prototype.clone.call(this, t),
    t
}
,
THREE.MorphAnimMesh = function(t, e) {
    THREE.Mesh.call(this, t, e),
    this.duration = 1e3,
    this.mirroredLoop = !1,
    this.currentKeyframe = this.lastKeyframe = this.time = 0,
    this.direction = 1,
    this.directionBackwards = !1,
    this.setFrameRange(0, this.geometry.morphTargets.length - 1)
}
,
THREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.MorphAnimMesh.prototype.setFrameRange = function(t, e) {
    this.startKeyframe = t,
    this.endKeyframe = e,
    this.length = this.endKeyframe - this.startKeyframe + 1
}
,
THREE.MorphAnimMesh.prototype.setDirectionForward = function() {
    this.direction = 1,
    this.directionBackwards = !1
}
,
THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {
    this.direction = -1,
    this.directionBackwards = !0
}
,
THREE.MorphAnimMesh.prototype.parseAnimations = function() {
    var t = this.geometry;
    t.animations || (t.animations = {});
    for (var e, i = t.animations, r = /([a-z]+)(\d+)/, n = 0, o = t.morphTargets.length; o > n; n++) {
        var a = t.morphTargets[n].name.match(r);
        if (a && 1 < a.length) {
            a = a[1],
            i[a] || (i[a] = {
                start: 1 / 0,
                end: -(1 / 0)
            });
            var s = i[a];
            n < s.start && (s.start = n),
            n > s.end && (s.end = n),
            e || (e = a)
        }
    }
    t.firstAnimation = e
}
,
THREE.MorphAnimMesh.prototype.setAnimationLabel = function(t, e, i) {
    this.geometry.animations || (this.geometry.animations = {}),
    this.geometry.animations[t] = {
        start: e,
        end: i
    }
}
,
THREE.MorphAnimMesh.prototype.playAnimation = function(t, e) {
    var i = this.geometry.animations[t];
    i ? (this.setFrameRange(i.start, i.end),
    this.duration = (i.end - i.start) / e * 1e3,
    this.time = 0) : console.warn("animation[" + t + "] undefined")
}
,
THREE.MorphAnimMesh.prototype.updateAnimation = function(t) {
    var e = this.duration / this.length;
    this.time += this.direction * t,
    this.mirroredLoop ? (this.time > this.duration || 0 > this.time) && (this.direction *= -1,
    this.time > this.duration && (this.time = this.duration,
    this.directionBackwards = !0),
    0 > this.time && (this.time = 0,
    this.directionBackwards = !1)) : (this.time %= this.duration,
    0 > this.time && (this.time += this.duration)),
    t = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / e), 0, this.length - 1),
    t !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0,
    this.morphTargetInfluences[this.currentKeyframe] = 1,
    this.morphTargetInfluences[t] = 0,
    this.lastKeyframe = this.currentKeyframe,
    this.currentKeyframe = t),
    e = this.time % e / e,
    this.directionBackwards && (e = 1 - e),
    this.morphTargetInfluences[this.currentKeyframe] = e,
    this.morphTargetInfluences[this.lastKeyframe] = 1 - e
}
,
THREE.MorphAnimMesh.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.MorphAnimMesh(this.geometry,this.material)),
    t.duration = this.duration,
    t.mirroredLoop = this.mirroredLoop,
    t.time = this.time,
    t.lastKeyframe = this.lastKeyframe,
    t.currentKeyframe = this.currentKeyframe,
    t.direction = this.direction,
    t.directionBackwards = this.directionBackwards,
    THREE.Mesh.prototype.clone.call(this, t),
    t
}
,
THREE.LOD = function() {
    THREE.Object3D.call(this),
    this.objects = []
}
,
THREE.LOD.prototype = Object.create(THREE.Object3D.prototype),
THREE.LOD.prototype.addLevel = function(t, e) {
    void 0 === e && (e = 0),
    e = Math.abs(e);
    for (var i = 0; i < this.objects.length && !(e < this.objects[i].distance); i++)
        ;
    this.objects.splice(i, 0, {
        distance: e,
        object: t
    }),
    this.add(t)
}
,
THREE.LOD.prototype.getObjectForDistance = function(t) {
    for (var e = 1, i = this.objects.length; i > e && !(t < this.objects[e].distance); e++)
        ;
    return this.objects[e - 1].object
}
,
THREE.LOD.prototype.update = function() {
    var t = new THREE.Vector3
      , e = new THREE.Vector3;
    return function(i) {
        if (1 < this.objects.length) {
            t.setFromMatrixPosition(i.matrixWorld),
            e.setFromMatrixPosition(this.matrixWorld),
            i = t.distanceTo(e),
            this.objects[0].object.visible = !0;
            for (var r = 1, n = this.objects.length; n > r && i >= this.objects[r].distance; r++)
                this.objects[r - 1].object.visible = !1,
                this.objects[r].object.visible = !0;
            for (; n > r; r++)
                this.objects[r].object.visible = !1
        }
    }
}
(),
THREE.LOD.prototype.clone = function(t) {
    void 0 === t && (t = new THREE.LOD),
    THREE.Object3D.prototype.clone.call(this, t);
    for (var e = 0, i = this.objects.length; i > e; e++) {
        var r = this.objects[e].object.clone();
        r.visible = 0 === e,
        t.addLevel(r, this.objects[e].distance)
    }
    return t
}
,
THREE.Sprite = function() {
    var t = new THREE.Float32Attribute(3,3);
    t.set([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0]);
    var e = new THREE.BufferGeometry;
    return e.addAttribute("position", t),
    function(t) {
        THREE.Object3D.call(this),
        this.geometry = e,
        this.material = void 0 !== t ? t : new THREE.SpriteMaterial
    }
}
(),
THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype),
THREE.Sprite.prototype.updateMatrix = function() {
    this.matrix.compose(this.position, this.quaternion, this.scale),
    this.matrixWorldNeedsUpdate = !0
}
,
THREE.Sprite.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.Sprite(this.material)),
    THREE.Object3D.prototype.clone.call(this, t),
    t
}
,
THREE.Particle = THREE.Sprite,
THREE.Scene = function() {
    THREE.Object3D.call(this),
    this.overrideMaterial = this.fog = null ,
    this.autoUpdate = !0,
    this.matrixAutoUpdate = !1,
    this.__lights = [],
    this.__objectsAdded = [],
    this.__objectsRemoved = []
}
,
THREE.Scene.prototype = Object.create(THREE.Object3D.prototype),
THREE.Scene.prototype.__addObject = function(t) {
    if (t instanceof THREE.Light)
        -1 === this.__lights.indexOf(t) && this.__lights.push(t),
        t.target && void 0 === t.target.parent && this.add(t.target);
    else if (!(t instanceof THREE.Camera || t instanceof THREE.Bone)) {
        this.__objectsAdded.push(t);
        var e = this.__objectsRemoved.indexOf(t);
        -1 !== e && this.__objectsRemoved.splice(e, 1)
    }
    for (this.dispatchEvent({
        type: "objectAdded",
        object: t
    }),
    t.dispatchEvent({
        type: "addedToScene",
        scene: this
    }),
    e = 0; e < t.children.length; e++)
        this.__addObject(t.children[e])
}
,
THREE.Scene.prototype.__removeObject = function(t) {
    if (t instanceof THREE.Light) {
        var e = this.__lights.indexOf(t);
        if (-1 !== e && this.__lights.splice(e, 1),
        t.shadowCascadeArray)
            for (e = 0; e < t.shadowCascadeArray.length; e++)
                this.__removeObject(t.shadowCascadeArray[e])
    } else
        t instanceof THREE.Camera || (this.__objectsRemoved.push(t),
        e = this.__objectsAdded.indexOf(t),
        -1 !== e && this.__objectsAdded.splice(e, 1));
    for (this.dispatchEvent({
        type: "objectRemoved",
        object: t
    }),
    t.dispatchEvent({
        type: "removedFromScene",
        scene: this
    }),
    e = 0; e < t.children.length; e++)
        this.__removeObject(t.children[e])
}
,
THREE.Scene.prototype.clone = function(t) {
    return void 0 === t && (t = new THREE.Scene),
    THREE.Object3D.prototype.clone.call(this, t),
    null  !== this.fog && (t.fog = this.fog.clone()),
    null  !== this.overrideMaterial && (t.overrideMaterial = this.overrideMaterial.clone()),
    t.autoUpdate = this.autoUpdate,
    t.matrixAutoUpdate = this.matrixAutoUpdate,
    t
}
,
THREE.Fog = function(t, e, i) {
    this.name = "",
    this.color = new THREE.Color(t),
    this.near = void 0 !== e ? e : 1,
    this.far = void 0 !== i ? i : 1e3
}
,
THREE.Fog.prototype.clone = function() {
    return new THREE.Fog(this.color.getHex(),this.near,this.far)
}
,
THREE.FogExp2 = function(t, e) {
    this.name = "",
    this.color = new THREE.Color(t),
    this.density = void 0 !== e ? e : 25e-5
}
,
THREE.FogExp2.prototype.clone = function() {
    return new THREE.FogExp2(this.color.getHex(),this.density)
}
,
THREE.CanvasRenderer = function(t) {
    function e(t, e, i, r) {
        h(e),
        c(i),
        u(r),
        p(t.getStyle()),
        A.stroke(),
        lt.expandByScalar(2 * e)
    }
    function i(t) {
        d(t.getStyle()),
        A.fill()
    }
    function r(t) {
        n(t.target)
    }
    function n(t) {
        var e = t.wrapS === THREE.RepeatWrapping
          , i = t.wrapT === THREE.RepeatWrapping
          , r = t.image
          , n = document.createElement("canvas");
        n.width = r.width,
        n.height = r.height;
        var o = n.getContext("2d");
        o.setTransform(1, 0, 0, -1, 0, r.height),
        o.drawImage(r, 0, 0),
        ot[t.id] = A.createPattern(n, !0 === e && !0 === i ? "repeat" : !0 === e && !1 === i ? "repeat-x" : !1 === e && !0 === i ? "repeat-y" : "no-repeat")
    }
    function o(t, e, i, o, a, s, l, h, c, u, p, f, m) {
        if (!(m instanceof THREE.DataTexture)) {
            !1 === m.hasEventListener("update", r) && (void 0 !== m.image && 0 < m.image.width && n(m),
            m.addEventListener("update", r));
            var g = ot[m.id];
            if (void 0 !== g) {
                d(g);
                var g = m.offset.x / m.repeat.x
                  , E = m.offset.y / m.repeat.y
                  , y = m.image.width * m.repeat.x;
                m = m.image.height * m.repeat.y,
                l = (l + g) * y,
                h = (h + E) * m,
                i -= t,
                o -= e,
                a -= t,
                s -= e,
                c = (c + g) * y - l,
                u = (u + E) * m - h,
                p = (p + g) * y - l,
                f = (f + E) * m - h,
                m = c * f - p * u,
                0 !== m && (g = 1 / m,
                m = (f * i - u * a) * g,
                u = (f * o - u * s) * g,
                i = (c * a - p * i) * g,
                o = (c * s - p * o) * g,
                t = t - m * l - i * h,
                e = e - u * l - o * h,
                A.save(),
                A.transform(m, u, i, o, t, e),
                A.fill(),
                A.restore())
            } else
                d("rgba(0,0,0,1)"),
                A.fill()
        }
    }
    function a(t, e, i) {
        var r = e.x - t.x
          , n = e.y - t.y
          , o = r * r + n * n;
        0 !== o && (i /= Math.sqrt(o),
        r *= i,
        n *= i,
        e.x += r,
        e.y += n,
        t.x -= r,
        t.y -= n)
    }
    function s(t) {
        D !== t && (D = A.globalAlpha = t)
    }
    function l(t) {
        k !== t && (t === THREE.NormalBlending ? A.globalCompositeOperation = "source-over" : t === THREE.AdditiveBlending ? A.globalCompositeOperation = "lighter" : t === THREE.SubtractiveBlending && (A.globalCompositeOperation = "darker"),
        k = t)
    }
    function h(t) {
        N !== t && (N = A.lineWidth = t)
    }
    function c(t) {
        z !== t && (z = A.lineCap = t)
    }
    function u(t) {
        V !== t && (V = A.lineJoin = t)
    }
    function p(t) {
        O !== t && (O = A.strokeStyle = t)
    }
    function d(t) {
        F !== t && (F = A.fillStyle = t)
    }
    function f(t, e) {
        (I !== t || U !== e) && (A.setLineDash([t, e]),
        I = t,
        U = e)
    }
    console.log("THREE.CanvasRenderer", THREE.REVISION);
    var m = THREE.Math.smoothstep;
    t = t || {};
    var g, E, y, v, _, x, T, w = this, b = new THREE.Projector, R = void 0 !== t.canvas ? t.canvas : document.createElement("canvas"), H = R.width, S = R.height, M = Math.floor(H / 2), C = Math.floor(S / 2), A = R.getContext("2d", {
        alpha: !0 === t.alpha
    }), P = new THREE.Color(0), L = 0, D = 1, k = 0, O = null , F = null , N = null , z = null , V = null , I = null , U = 0;
    new THREE.RenderableVertex,
    new THREE.RenderableVertex;
    var B, j, G, W, X, q, Y = new THREE.Color;
    new THREE.Color,
    new THREE.Color,
    new THREE.Color,
    new THREE.Color;
    var $, Q, K, Z, J, tt, et, it = new THREE.Color, rt = new THREE.Color, nt = new THREE.Color, ot = {}, at = new THREE.Box2, st = new THREE.Box2, lt = new THREE.Box2, ht = new THREE.Color, ct = new THREE.Color, ut = new THREE.Color, pt = new THREE.Vector3, dt = new THREE.Vector3, ft = new THREE.Vector3, mt = new THREE.Matrix3;
    void 0 === A.setLineDash && (A.setLineDash = function() {}
    ),
    this.domElement = R,
    this.devicePixelRatio = void 0 !== t.devicePixelRatio ? t.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1,
    this.sortElements = this.sortObjects = this.autoClear = !0,
    this.info = {
        render: {
            vertices: 0,
            faces: 0
        }
    },
    this.supportsVertexTextures = function() {}
    ,
    this.setFaceCulling = function() {}
    ,
    this.setSize = function(t, e, i) {
        H = t * this.devicePixelRatio,
        S = e * this.devicePixelRatio,
        R.width = H,
        R.height = S,
        M = Math.floor(H / 2),
        C = Math.floor(S / 2),
        !1 !== i && (R.style.width = t + "px",
        R.style.height = e + "px"),
        at.min.set(-M, -C),
        at.max.set(M, C),
        st.min.set(-M, -C),
        st.max.set(M, C),
        D = 1,
        k = 0,
        V = z = N = F = O = null ,
        this.setViewport(0, 0, t, e)
    }
    ,
    this.setViewport = function(t, e, i, r) {
        A.setTransform(i * this.devicePixelRatio / H, 0, 0, -(r * this.devicePixelRatio) / S, t * this.devicePixelRatio, S - e * this.devicePixelRatio),
        A.translate(M, C)
    }
    ,
    this.setScissor = function() {}
    ,
    this.enableScissorTest = function() {}
    ,
    this.setClearColor = function(t, e) {
        P.set(t),
        L = void 0 !== e ? e : 1,
        st.min.set(-M, -C),
        st.max.set(M, C)
    }
    ,
    this.setClearColorHex = function(t, e) {
        console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),
        this.setClearColor(t, e)
    }
    ,
    this.getMaxAnisotropy = function() {
        return 0
    }
    ,
    this.clear = function() {
        !1 === st.empty() && (st.intersect(at),
        st.expandByScalar(2),
        1 > L && A.clearRect(0 | st.min.x, 0 | st.min.y, st.max.x - st.min.x | 0, st.max.y - st.min.y | 0),
        L > 0 && (l(THREE.NormalBlending),
        s(1),
        d("rgba(" + Math.floor(255 * P.r) + "," + Math.floor(255 * P.g) + "," + Math.floor(255 * P.b) + "," + L + ")"),
        A.fillRect(0 | st.min.x, 0 | st.min.y, st.max.x - st.min.x | 0, st.max.y - st.min.y | 0)),
        st.makeEmpty())
    }
    ,
    this.clearColor = function() {}
    ,
    this.clearDepth = function() {}
    ,
    this.clearStencil = function() {}
    ,
    this.render = function(t, R) {
        if (!1 == R instanceof THREE.Camera)
            console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
        else {
            !0 === this.autoClear && this.clear(),
            w.info.render.vertices = 0,
            w.info.render.faces = 0,
            g = b.projectScene(t, R, this.sortObjects, this.sortElements),
            E = g.elements,
            y = g.lights,
            v = R,
            mt.getNormalMatrix(R.matrixWorldInverse),
            ht.setRGB(0, 0, 0),
            ct.setRGB(0, 0, 0),
            ut.setRGB(0, 0, 0);
            for (var H = 0, S = y.length; S > H; H++) {
                var P = y[H]
                  , L = P.color;
                P instanceof THREE.AmbientLight ? ht.add(L) : P instanceof THREE.DirectionalLight ? ct.add(L) : P instanceof THREE.PointLight && ut.add(L)
            }
            for (H = 0,
            S = E.length; S > H; H++) {
                var D = E[H]
                  , k = D.material;
                if (void 0 !== k && 0 !== k.opacity) {
                    if (lt.makeEmpty(),
                    D instanceof THREE.RenderableSprite) {
                        _ = D,
                        _.x *= M,
                        _.y *= C;
                        var P = _
                          , O = D
                          , L = k;
                        s(L.opacity),
                        l(L.blending);
                        var F = O.scale.x * M
                          , O = O.scale.y * C
                          , D = .5 * Math.sqrt(F * F + O * O);
                        if (lt.min.set(P.x - D, P.y - D),
                        lt.max.set(P.x + D, P.y + D),
                        L instanceof THREE.SpriteMaterial || L instanceof THREE.ParticleSystemMaterial) {
                            var N = L.map;
                            if (null  !== N) {
                                !1 === N.hasEventListener("update", r) && (void 0 !== N.image && 0 < N.image.width && n(N),
                                N.addEventListener("update", r)),
                                D = ot[N.id],
                                d(void 0 !== D ? D : "rgba( 0, 0, 0, 1 )");
                                var z = N.image
                                  , D = z.width * N.offset.x
                                  , k = z.height * N.offset.y
                                  , V = z.width * N.repeat.x
                                  , N = z.height * N.repeat.y
                                  , z = F / V
                                  , I = O / N;
                                A.save(),
                                A.translate(P.x, P.y),
                                0 !== L.rotation && A.rotate(L.rotation),
                                A.translate(-F / 2, -O / 2),
                                A.scale(z, I),
                                A.translate(-D, -k),
                                A.fillRect(D, k, V, N)
                            } else
                                d(L.color.getStyle()),
                                A.save(),
                                A.translate(P.x, P.y),
                                0 !== L.rotation && A.rotate(L.rotation),
                                A.scale(F, -O),
                                A.fillRect(-.5, -.5, 1, 1);
                            A.restore()
                        } else
                            L instanceof THREE.SpriteCanvasMaterial && (p(L.color.getStyle()),
                            d(L.color.getStyle()),
                            A.save(),
                            A.translate(P.x, P.y),
                            0 !== L.rotation && A.rotate(L.rotation),
                            A.scale(F, O),
                            L.program(A),
                            A.restore())
                    } else if (D instanceof THREE.RenderableLine) {
                        if (_ = D.v1,
                        x = D.v2,
                        _.positionScreen.x *= M,
                        _.positionScreen.y *= C,
                        x.positionScreen.x *= M,
                        x.positionScreen.y *= C,
                        lt.setFromPoints([_.positionScreen, x.positionScreen]),
                        !0 === at.isIntersectionBox(lt))
                            if (P = _,
                            L = x,
                            F = D,
                            O = k,
                            s(O.opacity),
                            l(O.blending),
                            A.beginPath(),
                            A.moveTo(P.positionScreen.x, P.positionScreen.y),
                            A.lineTo(L.positionScreen.x, L.positionScreen.y),
                            O instanceof THREE.LineBasicMaterial) {
                                if (h(O.linewidth),
                                c(O.linecap),
                                u(O.linejoin),
                                O.vertexColors !== THREE.VertexColors)
                                    p(O.color.getStyle());
                                else if (D = F.vertexColors[0].getStyle(),
                                F = F.vertexColors[1].getStyle(),
                                D === F)
                                    p(D);
                                else {
                                    try {
                                        var U = A.createLinearGradient(P.positionScreen.x, P.positionScreen.y, L.positionScreen.x, L.positionScreen.y);
                                        U.addColorStop(0, D),
                                        U.addColorStop(1, F)
                                    } catch (gt) {
                                        U = D
                                    }
                                    p(U)
                                }
                                A.stroke(),
                                lt.expandByScalar(2 * O.linewidth)
                            } else
                                O instanceof THREE.LineDashedMaterial && (h(O.linewidth),
                                c(O.linecap),
                                u(O.linejoin),
                                p(O.color.getStyle()),
                                f(O.dashSize, O.gapSize),
                                A.stroke(),
                                lt.expandByScalar(2 * O.linewidth),
                                f(null , null ))
                    } else if (D instanceof THREE.RenderableFace) {
                        if (_ = D.v1,
                        x = D.v2,
                        T = D.v3,
                        -1 > _.positionScreen.z || 1 < _.positionScreen.z)
                            continue;if (-1 > x.positionScreen.z || 1 < x.positionScreen.z)
                            continue;if (-1 > T.positionScreen.z || 1 < T.positionScreen.z)
                            continue;if (_.positionScreen.x *= M,
                        _.positionScreen.y *= C,
                        x.positionScreen.x *= M,
                        x.positionScreen.y *= C,
                        T.positionScreen.x *= M,
                        T.positionScreen.y *= C,
                        0 < k.overdraw && (a(_.positionScreen, x.positionScreen, k.overdraw),
                        a(x.positionScreen, T.positionScreen, k.overdraw),
                        a(T.positionScreen, _.positionScreen, k.overdraw)),
                        lt.setFromPoints([_.positionScreen, x.positionScreen, T.positionScreen]),
                        !0 === at.isIntersectionBox(lt)) {
                            L = _,
                            F = x,
                            O = T,
                            P = k,
                            w.info.render.vertices += 3,
                            w.info.render.faces++,
                            s(P.opacity),
                            l(P.blending),
                            B = L.positionScreen.x,
                            j = L.positionScreen.y,
                            G = F.positionScreen.x,
                            W = F.positionScreen.y,
                            X = O.positionScreen.x,
                            q = O.positionScreen.y;
                            var k = B
                              , V = j
                              , N = G
                              , z = W
                              , I = X
                              , Et = q;
                            if (A.beginPath(),
                            A.moveTo(k, V),
                            A.lineTo(N, z),
                            A.lineTo(I, Et),
                            A.closePath(),
                            (P instanceof THREE.MeshLambertMaterial || P instanceof THREE.MeshPhongMaterial) && null  === P.map) {
                                for (it.copy(P.color),
                                rt.copy(P.emissive),
                                P.vertexColors === THREE.FaceColors && it.multiply(D.color),
                                Y.copy(ht),
                                dt.copy(L.positionWorld).add(F.positionWorld).add(O.positionWorld).divideScalar(3),
                                L = dt,
                                F = D.normalModel,
                                O = Y,
                                D = 0,
                                k = y.length; k > D; D++)
                                    V = y[D],
                                    nt.copy(V.color),
                                    V instanceof THREE.DirectionalLight ? (N = pt.setFromMatrixPosition(V.matrixWorld).normalize(),
                                    z = F.dot(N),
                                    0 >= z || (z *= V.intensity,
                                    O.add(nt.multiplyScalar(z)))) : V instanceof THREE.PointLight && (N = pt.setFromMatrixPosition(V.matrixWorld),
                                    z = F.dot(pt.subVectors(N, L).normalize()),
                                    0 >= z || (z *= 0 == V.distance ? 1 : 1 - Math.min(L.distanceTo(N) / V.distance, 1),
                                    0 != z && (z *= V.intensity,
                                    O.add(nt.multiplyScalar(z)))));
                                Y.multiply(it).add(rt),
                                !0 === P.wireframe ? e(Y, P.wireframeLinewidth, P.wireframeLinecap, P.wireframeLinejoin) : i(Y)
                            } else
                                P instanceof THREE.MeshBasicMaterial || P instanceof THREE.MeshLambertMaterial || P instanceof THREE.MeshPhongMaterial ? null  !== P.map ? P.map.mapping instanceof THREE.UVMapping && ($ = D.uvs,
                                o(B, j, G, W, X, q, $[0].x, $[0].y, $[1].x, $[1].y, $[2].x, $[2].y, P.map)) : null  !== P.envMap ? P.envMap.mapping instanceof THREE.SphericalReflectionMapping ? (ft.copy(D.vertexNormalsModel[0]).applyMatrix3(mt),
                                Q = .5 * ft.x + .5,
                                K = .5 * ft.y + .5,
                                ft.copy(D.vertexNormalsModel[1]).applyMatrix3(mt),
                                Z = .5 * ft.x + .5,
                                J = .5 * ft.y + .5,
                                ft.copy(D.vertexNormalsModel[2]).applyMatrix3(mt),
                                tt = .5 * ft.x + .5,
                                et = .5 * ft.y + .5,
                                o(B, j, G, W, X, q, Q, K, Z, J, tt, et, P.envMap)) : P.envMap.mapping instanceof THREE.SphericalRefractionMapping && (ft.copy(D.vertexNormalsModel[0]).applyMatrix3(mt),
                                Q = -.5 * ft.x + .5,
                                K = -.5 * ft.y + .5,
                                ft.copy(D.vertexNormalsModel[1]).applyMatrix3(mt),
                                Z = -.5 * ft.x + .5,
                                J = -.5 * ft.y + .5,
                                ft.copy(D.vertexNormalsModel[2]).applyMatrix3(mt),
                                tt = -.5 * ft.x + .5,
                                et = -.5 * ft.y + .5,
                                o(B, j, G, W, X, q, Q, K, Z, J, tt, et, P.envMap)) : (Y.copy(P.color),
                                P.vertexColors === THREE.FaceColors && Y.multiply(D.color),
                                !0 === P.wireframe ? e(Y, P.wireframeLinewidth, P.wireframeLinecap, P.wireframeLinejoin) : i(Y)) : (P instanceof THREE.MeshDepthMaterial ? Y.r = Y.g = Y.b = 1 - m(L.positionScreen.z * L.positionScreen.w, v.near, v.far) : P instanceof THREE.MeshNormalMaterial ? (ft.copy(D.normalModel).applyMatrix3(mt),
                                Y.setRGB(ft.x, ft.y, ft.z).multiplyScalar(.5).addScalar(.5)) : Y.setRGB(1, 1, 1),
                                !0 === P.wireframe ? e(Y, P.wireframeLinewidth, P.wireframeLinecap, P.wireframeLinejoin) : i(Y))
                        }
                    }
                    st.union(lt)
                }
            }
        }
    }
}
,
THREE.ShaderChunk = {
    fog_pars_fragment: "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",
    fog_fragment: "#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
    envmap_pars_fragment: "#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		uniform bool useRefract;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",
    envmap_fragment: "#ifdef USE_ENVMAP\n	vec3 reflectVec;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n		if ( useRefract ) {\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		} else { \n			reflectVec = reflect( cameraToVertex, worldNormal );\n		}\n	#else\n		reflectVec = vReflect;\n	#endif\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#endif\n	#ifdef GAMMA_INPUT\n		cubeColor.xyz *= cubeColor.xyz;\n	#endif\n	if ( combine == 1 ) {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n	} else if ( combine == 2 ) {\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n	} else {\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n	}\n#endif",
    envmap_pars_vertex: "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	varying vec3 vReflect;\n	uniform float refractionRatio;\n	uniform bool useRefract;\n#endif",
    worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#endif\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n	#endif\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	#endif\n#endif",
    envmap_vertex: "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n	if ( useRefract ) {\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n	} else {\n		vReflect = reflect( cameraToVertex, worldNormal );\n	}\n#endif",
    map_particle_pars_fragment: "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",
    map_particle_fragment: "#ifdef USE_MAP\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",
    map_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif",
    map_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",
    map_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
    map_fragment: "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	#ifdef GAMMA_INPUT\n		texelColor.xyz *= texelColor.xyz;\n	#endif\n	gl_FragColor = gl_FragColor * texelColor;\n#endif",
    lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n#endif",
    lightmap_pars_vertex: "#ifdef USE_LIGHTMAP\n	varying vec2 vUv2;\n#endif",
    lightmap_fragment: "#ifdef USE_LIGHTMAP\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",
    lightmap_vertex: "#ifdef USE_LIGHTMAP\n	vUv2 = uv2;\n#endif",
    bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",
    normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif",
    specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",
    specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",
    lights_lambert_pars_vertex: "uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif",
    lights_lambert_vertex: "vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n	#ifdef DOUBLE_SIDED\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n		#ifdef WRAP_AROUND\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n		#endif\n	#endif\n	#ifdef WRAP_AROUND\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n		#ifdef DOUBLE_SIDED\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n		#endif\n	#endif\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n	#ifdef DOUBLE_SIDED\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n	#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n		#ifdef DOUBLE_SIDED\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n			#ifdef WRAP_AROUND\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n			#endif\n		#endif\n		#ifdef WRAP_AROUND\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n			#ifdef DOUBLE_SIDED\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n			#endif\n		#endif\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n		#ifdef DOUBLE_SIDED\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n		#endif\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n			lVector = normalize( lVector );\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n			#ifdef DOUBLE_SIDED\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n				#ifdef WRAP_AROUND\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n				#endif\n			#endif\n			#ifdef WRAP_AROUND\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n				#ifdef DOUBLE_SIDED\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n				#endif\n			#endif\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n			#ifdef DOUBLE_SIDED\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n			#endif\n		}\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( transformedNormal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		#ifdef DOUBLE_SIDED\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n		#endif\n	}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
    lights_phong_pars_vertex: "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif",
    lights_phong_vertex: "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	vWorldPosition = worldPosition.xyz;\n#endif",
    lights_phong_pars_fragment: "uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n	varying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
    lights_phong_fragment: "vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n	vec3 pointDiffuse  = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float dotProduct = dot( normal, lVector );\n		#ifdef WRAP_AROUND\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n		#else\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n	}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	vec3 spotDiffuse  = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n		lVector = normalize( lVector );\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n			float dotProduct = dot( normal, lVector );\n			#ifdef WRAP_AROUND\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n			#else\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n			#endif\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n		}\n	}\n#endif\n#if MAX_DIR_LIGHTS > 0\n	vec3 dirDiffuse  = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, dirVector );\n		#ifdef WRAP_AROUND\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n		#else\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n		#endif\n		dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n	}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	vec3 hemiDiffuse  = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n		hemiDiffuse += diffuse * hemiColor;\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n		vec3 lVectorGround = -lVector;\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n		float dotProductGround = dot( normal, lVectorGround );\n		float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n	}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
    color_pars_fragment: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",
    color_fragment: "#ifdef USE_COLOR\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",
    color_pars_vertex: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",
    color_vertex: "#ifdef USE_COLOR\n	#ifdef GAMMA_INPUT\n		vColor = color * color;\n	#else\n		vColor = color;\n	#endif\n#endif",
    skinning_pars_vertex: "#ifdef USE_SKINNING\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",
    skinbase_vertex: "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
    skinning_vertex: "#ifdef USE_SKINNING\n	#ifdef USE_MORPHTARGETS\n	vec4 skinVertex = vec4( morphed, 1.0 );\n	#else\n	vec4 skinVertex = vec4( position, 1.0 );\n	#endif\n	vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n	skinned      += boneMatY * skinVertex * skinWeight.y;\n	skinned      += boneMatZ * skinVertex * skinWeight.z;\n	skinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",
    morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",
    morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n	morphed += position;\n#endif",
    default_vertex: "vec4 mvPosition;\n#ifdef USE_SKINNING\n	mvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",
    morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n	vec3 morphedNormal = vec3( 0.0 );\n	morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n	morphedNormal += normal;\n#endif",
    skinnormal_vertex: "#ifdef USE_SKINNING\n	mat4 skinMatrix = skinWeight.x * boneMatX;\n	skinMatrix 	+= skinWeight.y * boneMatY;\n	skinMatrix 	+= skinWeight.z * boneMatZ;\n	skinMatrix 	+= skinWeight.w * boneMatW;\n	#ifdef USE_MORPHNORMALS\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n	#else\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n	#endif\n#endif",
    defaultnormal_vertex: "vec3 objectNormal;\n#ifdef USE_SKINNING\n	objectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n	objectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n	objectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
    shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	float unpackDepth( const in vec4 rgba_depth ) {\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n	}\n#endif",
    shadowmap_fragment: "#ifdef USE_SHADOWMAP\n	#ifdef SHADOWMAP_DEBUG\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n	#endif\n	#ifdef SHADOWMAP_CASCADE\n		int inFrustumCount = 0;\n	#endif\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		#ifdef SHADOWMAP_CASCADE\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n		#else\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		#endif\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n			shadowCoord.z += shadowBias[ i ];\n			#if defined( SHADOWMAP_TYPE_PCF )\n				float shadow = 0.0;\n				const float shadowDelta = 1.0 / 9.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n				float shadow = 0.0;\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n				mat3 shadowKernel;\n				mat3 depthKernel;\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n			#else\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n				if ( fDepth < shadowCoord.z )\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n			#endif\n		}\n		#ifdef SHADOWMAP_DEBUG\n			#ifdef SHADOWMAP_CASCADE\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n			#else\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n			#endif\n		#endif\n	}\n	#ifdef GAMMA_OUTPUT\n		shadowColor *= shadowColor;\n	#endif\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
    shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",
    shadowmap_vertex: "#ifdef USE_SHADOWMAP\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n	}\n#endif",
    alphatest_fragment: "#ifdef ALPHATEST\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",
    linear_to_gamma_fragment: "#ifdef GAMMA_OUTPUT\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",
    logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",
    logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif",
    logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n	#endif\n#endif",
    logdepthbuf_fragment: "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif"
},
THREE.UniformsUtils = {
    merge: function(t) {
        var e, i, r, n = {};
        for (e = 0; e < t.length; e++)
            for (i in r = this.clone(t[e]))
                n[i] = r[i];
        return n
    },
    clone: function(t) {
        var e, i, r, n = {};
        for (e in t)
            for (i in n[e] = {},
            t[e])
                r = t[e][i],
                n[e][i] = r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? r.clone() : r instanceof Array ? r.slice() : r;
        return n
    }
},
THREE.UniformsLib = {
    common: {
        diffuse: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null 
        },
        offsetRepeat: {
            type: "v4",
            value: new THREE.Vector4(0,0,1,1)
        },
        lightMap: {
            type: "t",
            value: null 
        },
        specularMap: {
            type: "t",
            value: null 
        },
        envMap: {
            type: "t",
            value: null 
        },
        flipEnvMap: {
            type: "f",
            value: -1
        },
        useRefract: {
            type: "i",
            value: 0
        },
        reflectivity: {
            type: "f",
            value: 1
        },
        refractionRatio: {
            type: "f",
            value: .98
        },
        combine: {
            type: "i",
            value: 0
        },
        morphTargetInfluences: {
            type: "f",
            value: 0
        }
    },
    bump: {
        bumpMap: {
            type: "t",
            value: null 
        },
        bumpScale: {
            type: "f",
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            type: "t",
            value: null 
        },
        normalScale: {
            type: "v2",
            value: new THREE.Vector2(1,1)
        }
    },
    fog: {
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            type: "fv",
            value: []
        },
        directionalLightDirection: {
            type: "fv",
            value: []
        },
        directionalLightColor: {
            type: "fv",
            value: []
        },
        hemisphereLightDirection: {
            type: "fv",
            value: []
        },
        hemisphereLightSkyColor: {
            type: "fv",
            value: []
        },
        hemisphereLightGroundColor: {
            type: "fv",
            value: []
        },
        pointLightColor: {
            type: "fv",
            value: []
        },
        pointLightPosition: {
            type: "fv",
            value: []
        },
        pointLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightColor: {
            type: "fv",
            value: []
        },
        spotLightPosition: {
            type: "fv",
            value: []
        },
        spotLightDirection: {
            type: "fv",
            value: []
        },
        spotLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightAngleCos: {
            type: "fv1",
            value: []
        },
        spotLightExponent: {
            type: "fv1",
            value: []
        }
    },
    particle: {
        psColor: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        size: {
            type: "f",
            value: 1
        },
        scale: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null 
        },
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    shadowmap: {
        shadowMap: {
            type: "tv",
            value: []
        },
        shadowMapSize: {
            type: "v2v",
            value: []
        },
        shadowBias: {
            type: "fv1",
            value: []
        },
        shadowDarkness: {
            type: "fv1",
            value: []
        },
        shadowMatrix: {
            type: "m4v",
            value: []
        }
    }
},
THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap]),
        vertexShader: [THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "	#ifdef USE_ENVMAP", THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	#endif", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;\nuniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        vertexShader: ["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, "	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			gl_FragColor.xyz *= vLightFront;\n		else\n			gl_FragColor.xyz *= vLightBack;\n	#else\n		gl_FragColor.xyz *= vLightFront;\n	#endif", THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.bump, THREE.UniformsLib.normalmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            shininess: {
                type: "f",
                value: 30
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        vertexShader: ["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	vNormal = normalize( transformedNormal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    particle_basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.particle, THREE.UniformsLib.shadowmap]),
        vertexShader: ["uniform float size;\nuniform float scale;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 psColor;\nuniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( psColor, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {
                type: "f",
                value: 1
            },
            dashSize: {
                type: "f",
                value: 1
            },
            totalSize: {
                type: "f",
                value: 2
            }
        }]),
        vertexShader: ["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    depth: {
        uniforms: {
            mNear: {
                type: "f",
                value: 1
            },
            mFar: {
                type: "f",
                value: 2e3
            },
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float mNear;\nuniform float mFar;\nuniform float opacity;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")
    },
    normal: {
        uniforms: {
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: ["varying vec3 vNormal;", THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {\n	vNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;\nvarying vec3 vNormal;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    normalmap: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            enableAO: {
                type: "i",
                value: 0
            },
            enableDiffuse: {
                type: "i",
                value: 0
            },
            enableSpecular: {
                type: "i",
                value: 0
            },
            enableReflection: {
                type: "i",
                value: 0
            },
            enableDisplacement: {
                type: "i",
                value: 0
            },
            tDisplacement: {
                type: "t",
                value: null 
            },
            tDiffuse: {
                type: "t",
                value: null 
            },
            tCube: {
                type: "t",
                value: null 
            },
            tNormal: {
                type: "t",
                value: null 
            },
            tSpecular: {
                type: "t",
                value: null 
            },
            tAO: {
                type: "t",
                value: null 
            },
            uNormalScale: {
                type: "v2",
                value: new THREE.Vector2(1,1)
            },
            uDisplacementBias: {
                type: "f",
                value: 0
            },
            uDisplacementScale: {
                type: "f",
                value: 1
            },
            diffuse: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            shininess: {
                type: "f",
                value: 30
            },
            opacity: {
                type: "f",
                value: 1
            },
            useRefract: {
                type: "i",
                value: 0
            },
            refractionRatio: {
                type: "f",
                value: .98
            },
            reflectivity: {
                type: "f",
                value: .5
            },
            uOffset: {
                type: "v2",
                value: new THREE.Vector2(0,0)
            },
            uRepeat: {
                type: "v2",
                value: new THREE.Vector2(1,1)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        fragmentShader: ["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n	uniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;", THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	gl_FragColor = vec4( vec3( 1.0 ), opacity );\n	vec3 specularTex = vec3( 1.0 );\n	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n	normalTex.xy *= uNormalScale;\n	normalTex = normalize( normalTex );\n	if( enableDiffuse ) {\n		#ifdef GAMMA_INPUT\n			vec4 texelColor = texture2D( tDiffuse, vUv );\n			texelColor.xyz *= texelColor.xyz;\n			gl_FragColor = gl_FragColor * texelColor;\n		#else\n			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n		#endif\n	}\n	if( enableAO ) {\n		#ifdef GAMMA_INPUT\n			vec4 aoColor = texture2D( tAO, vUv );\n			aoColor.xyz *= aoColor.xyz;\n			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n		#else\n			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n		#endif\n	}\n	if( enableSpecular )\n		specularTex = texture2D( tSpecular, vUv ).xyz;\n	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n	vec3 finalNormal = tsb * normalTex;\n	#ifdef FLIP_SIDED\n		finalNormal = -finalNormal;\n	#endif\n	vec3 normal = normalize( finalNormal );\n	vec3 viewPosition = normalize( vViewPosition );\n	#if MAX_POINT_LIGHTS > 0\n		vec3 pointDiffuse = vec3( 0.0 );\n		vec3 pointSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n			float pointDistance = 1.0;\n			if ( pointLightDistance[ i ] > 0.0 )\n				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n			pointVector = normalize( pointVector );\n			#ifdef WRAP_AROUND\n				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n			#else\n				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n			#endif\n			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n			vec3 pointHalfVector = normalize( pointVector + viewPosition );\n			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\n			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n		}\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		vec3 spotDiffuse = vec3( 0.0 );\n		vec3 spotSpecular = vec3( 0.0 );\n		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n			float spotDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n			spotVector = normalize( spotVector );\n			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n			if ( spotEffect > spotLightAngleCos[ i ] ) {\n				spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n				#ifdef WRAP_AROUND\n					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n				#else\n					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n				#endif\n				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n				vec3 spotHalfVector = normalize( spotVector + viewPosition );\n				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n				float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\n				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n			}\n		}\n	#endif\n	#if MAX_DIR_LIGHTS > 0\n		vec3 dirDiffuse = vec3( 0.0 );\n		vec3 dirSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n			vec3 dirVector = normalize( lDirection.xyz );\n			#ifdef WRAP_AROUND\n				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n			#else\n				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n			#endif\n			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n			vec3 dirHalfVector = normalize( dirVector + viewPosition );\n			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\n			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n		}\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		vec3 hemiDiffuse  = vec3( 0.0 );\n		vec3 hemiSpecular = vec3( 0.0 );\n		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n			vec3 lVector = normalize( lDirection.xyz );\n			float dotProduct = dot( normal, lVector );\n			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n			hemiDiffuse += diffuse * hemiColor;\n			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n			float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n			vec3 lVectorGround = -lVector;\n			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n			float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n			float dotProductGround = dot( normal, lVectorGround );\n			float specularNormalization = ( shininess + 2.0001 ) / 8.0;\n			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\n			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\n			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n		}\n	#endif\n	vec3 totalDiffuse = vec3( 0.0 );\n	vec3 totalSpecular = vec3( 0.0 );\n	#if MAX_DIR_LIGHTS > 0\n		totalDiffuse += dirDiffuse;\n		totalSpecular += dirSpecular;\n	#endif\n	#if MAX_HEMI_LIGHTS > 0\n		totalDiffuse += hemiDiffuse;\n		totalSpecular += hemiSpecular;\n	#endif\n	#if MAX_POINT_LIGHTS > 0\n		totalDiffuse += pointDiffuse;\n		totalSpecular += pointSpecular;\n	#endif\n	#if MAX_SPOT_LIGHTS > 0\n		totalDiffuse += spotDiffuse;\n		totalSpecular += spotSpecular;\n	#endif\n	#ifdef METAL\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n	#else\n		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n	#endif\n	if ( enableReflection ) {\n		vec3 vReflect;\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		if ( useRefract ) {\n			vReflect = refract( cameraToVertex, normal, refractionRatio );\n		} else {\n			vReflect = reflect( cameraToVertex, normal );\n		}\n		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n		#ifdef GAMMA_INPUT\n			cubeColor.xyz *= cubeColor.xyz;\n		#endif\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n	}", THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n"),
        vertexShader: ["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n	uniform sampler2D tDisplacement;\n	uniform float uDisplacementScale;\n	uniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;", THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, "	#ifdef USE_SKINNING\n		vNormal = normalize( normalMatrix * skinnedNormal.xyz );\n		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n		vTangent = normalize( normalMatrix * skinnedTangent.xyz );\n	#else\n		vNormal = normalize( normalMatrix * normal );\n		vTangent = normalize( normalMatrix * tangent.xyz );\n	#endif\n	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n	vUv = uv * uRepeat + uOffset;\n	vec3 displacedPosition;\n	#ifdef VERTEX_TEXTURES\n		if ( enableDisplacement ) {\n			vec3 dv = texture2D( tDisplacement, uv ).xyz;\n			float df = uDisplacementScale * dv.x + uDisplacementBias;\n			displacedPosition = position + normalize( normal ) * df;\n		} else {\n			#ifdef USE_SKINNING\n				vec4 skinVertex = vec4( position, 1.0 );\n				vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n				skinned 	  += boneMatY * skinVertex * skinWeight.y;\n				skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n				skinned 	  += boneMatW * skinVertex * skinWeight.w;\n				displacedPosition  = skinned.xyz;\n			#else\n				displacedPosition = position;\n			#endif\n		}\n	#else\n		#ifdef USE_SKINNING\n			vec4 skinVertex = vec4( position, 1.0 );\n			vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n			skinned 	  += boneMatY * skinVertex * skinWeight.y;\n			skinned 	  += boneMatZ * skinVertex * skinWeight.z;\n			skinned 	  += boneMatW * skinVertex * skinWeight.w;\n			displacedPosition  = skinned.xyz;\n		#else\n			displacedPosition = position;\n		#endif\n	#endif\n	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "	vWorldPosition = worldPosition.xyz;\n	vViewPosition = -mvPosition.xyz;\n	#ifdef USE_SHADOWMAP\n		for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n		}\n	#endif\n}"].join("\n")
    },
    cube: {
        uniforms: {
            tCube: {
                type: "t",
                value: null 
            },
            tFlip: {
                type: "f",
                value: -1
            }
        },
        vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {\n	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n	vWorldPosition = worldPosition.xyz;\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    depthRGBA: {
        uniforms: {},
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: [THREE.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}"].join("\n")
    }
},
THREE.WebGLRenderer = function(t) {
    function e(t, e) {
        var i = t.vertices.length
          , r = e.material;
        if (r.attributes) {
            void 0 === t.__webglCustomAttributesList && (t.__webglCustomAttributesList = []);
            for (var n in r.attributes) {
                var o = r.attributes[n];
                if (!o.__webglInitialized || o.createUniqueBuffers) {
                    o.__webglInitialized = !0;
                    var a = 1;
                    "v2" === o.type ? a = 2 : "v3" === o.type ? a = 3 : "v4" === o.type ? a = 4 : "c" === o.type && (a = 3),
                    o.size = a,
                    o.array = new Float32Array(i * a),
                    o.buffer = G.createBuffer(),
                    o.buffer.belongsToAttribute = n,
                    o.needsUpdate = !0
                }
                t.__webglCustomAttributesList.push(o)
            }
        }
    }
    function i(t, e) {
        var i = e.geometry
          , a = t.faces3
          , s = 3 * a.length
          , l = 1 * a.length
          , h = 3 * a.length
          , a = r(e, t)
          , c = o(a)
          , u = n(a)
          , p = a.vertexColors ? a.vertexColors : !1;
        if (t.__vertexArray = new Float32Array(3 * s),
        u && (t.__normalArray = new Float32Array(3 * s)),
        i.hasTangents && (t.__tangentArray = new Float32Array(4 * s)),
        p && (t.__colorArray = new Float32Array(3 * s)),
        c && (0 < i.faceVertexUvs.length && (t.__uvArray = new Float32Array(2 * s)),
        1 < i.faceVertexUvs.length && (t.__uv2Array = new Float32Array(2 * s))),
        e.geometry.skinWeights.length && e.geometry.skinIndices.length && (t.__skinIndexArray = new Float32Array(4 * s),
        t.__skinWeightArray = new Float32Array(4 * s)),
        i = null  !== $ && l > 21845 ? Uint32Array : Uint16Array,
        t.__typeArray = i,
        t.__faceArray = new i(3 * l),
        t.__lineArray = new i(2 * h),
        t.numMorphTargets)
            for (t.__morphTargetsArrays = [],
            i = 0,
            c = t.numMorphTargets; c > i; i++)
                t.__morphTargetsArrays.push(new Float32Array(3 * s));
        if (t.numMorphNormals)
            for (t.__morphNormalsArrays = [],
            i = 0,
            c = t.numMorphNormals; c > i; i++)
                t.__morphNormalsArrays.push(new Float32Array(3 * s));
        if (t.__webglFaceCount = 3 * l,
        t.__webglLineCount = 2 * h,
        a.attributes) {
            void 0 === t.__webglCustomAttributesList && (t.__webglCustomAttributesList = []);
            for (var d in a.attributes) {
                var f, l = a.attributes[d], h = {};
                for (f in l)
                    h[f] = l[f];
                (!h.__webglInitialized || h.createUniqueBuffers) && (h.__webglInitialized = !0,
                i = 1,
                "v2" === h.type ? i = 2 : "v3" === h.type ? i = 3 : "v4" === h.type ? i = 4 : "c" === h.type && (i = 3),
                h.size = i,
                h.array = new Float32Array(s * i),
                h.buffer = G.createBuffer(),
                h.buffer.belongsToAttribute = d,
                l.needsUpdate = !0,
                h.__original = l),
                t.__webglCustomAttributesList.push(h)
            }
        }
        t.__inittedArrays = !0
    }
    function r(t, e) {
        return t.material instanceof THREE.MeshFaceMaterial ? t.material.materials[e.materialIndex] : t.material
    }
    function n(t) {
        return t instanceof THREE.MeshBasicMaterial && !t.envMap || t instanceof THREE.MeshDepthMaterial ? !1 : t && void 0 !== t.shading && t.shading === THREE.SmoothShading ? THREE.SmoothShading : THREE.FlatShading
    }
    function o(t) {
        return t.map || t.lightMap || t.bumpMap || t.normalMap || t.specularMap || t instanceof THREE.ShaderMaterial ? !0 : !1
    }
    function a(t, e, i, r) {
        for (var n in e) {
            var o = e[n]
              , a = i[n];
            if (o >= 0)
                if (a) {
                    var s = a.itemSize;
                    G.bindBuffer(G.ARRAY_BUFFER, a.buffer),
                    l(o),
                    G.vertexAttribPointer(o, s, G.FLOAT, !1, 0, r * s * 4)
                } else
                    t.defaultAttributeValues && (2 === t.defaultAttributeValues[n].length ? G.vertexAttrib2fv(o, t.defaultAttributeValues[n]) : 3 === t.defaultAttributeValues[n].length && G.vertexAttrib3fv(o, t.defaultAttributeValues[n]))
        }
        h()
    }
    function s() {
        for (var t = 0, e = Tt.length; e > t; t++)
            Tt[t] = 0
    }
    function l(t) {
        Tt[t] = 1,
        0 === wt[t] && (G.enableVertexAttribArray(t),
        wt[t] = 1)
    }
    function h() {
        for (var t = 0, e = wt.length; e > t; t++)
            wt[t] !== Tt[t] && (G.disableVertexAttribArray(t),
            wt[t] = 0)
    }
    function c(t, e) {
        return t.z !== e.z ? e.z - t.z : t.id - e.id
    }
    function u(t, e) {
        return e[0] - t[0]
    }
    function p(t, e, i) {
        if (t.length)
            for (var r = 0, n = t.length; n > r; r++)
                it = Z = null ,
                tt = et = ot = nt = ut = ct = at = -1,
                Ct = !0,
                t[r].render(e, i, _t, xt),
                it = Z = null ,
                tt = et = ot = nt = ut = ct = at = -1,
                Ct = !0
    }
    function d(t, e, i, r, n, o, a, s) {
        var l, h, c, u;
        e ? (h = t.length - 1,
        u = e = -1) : (h = 0,
        e = t.length,
        u = 1);
        for (var p = h; p !== e; p += u)
            if (l = t[p],
            l.render) {
                if (h = l.object,
                c = l.buffer,
                s)
                    l = s;
                else {
                    if (l = l[i],
                    !l)
                        continue;a && Q.setBlending(l.blending, l.blendEquation, l.blendSrc, l.blendDst),
                    Q.setDepthTest(l.depthTest),
                    Q.setDepthWrite(l.depthWrite),
                    S(l.polygonOffset, l.polygonOffsetFactor, l.polygonOffsetUnits)
                }
                Q.setMaterialFaces(l),
                c instanceof THREE.BufferGeometry ? Q.renderBufferDirect(r, n, o, l, c, h) : Q.renderBuffer(r, n, o, l, c, h)
            }
    }
    function f(t, e, i, r, n, o, a) {
        for (var s, l, h = 0, c = t.length; c > h; h++)
            if (s = t[h],
            l = s.object,
            l.visible) {
                if (a)
                    s = a;
                else {
                    if (s = s[e],
                    !s)
                        continue;o && Q.setBlending(s.blending, s.blendEquation, s.blendSrc, s.blendDst),
                    Q.setDepthTest(s.depthTest),
                    Q.setDepthWrite(s.depthWrite),
                    S(s.polygonOffset, s.polygonOffsetFactor, s.polygonOffsetUnits)
                }
                Q.renderImmediateObject(i, r, n, s, l)
            }
    }
    function m(t, r) {
        var n, o, a;
        if (void 0 === t.__webglInit && (t.__webglInit = !0,
        t._modelViewMatrix = new THREE.Matrix4,
        t._normalMatrix = new THREE.Matrix3,
        o = t.geometry,
        void 0 !== o && void 0 === o.__webglInit))
            if (o.__webglInit = !0,
            o.addEventListener("dispose", jt),
            o instanceof THREE.BufferGeometry)
                for (a in o.attributes) {
                    var s = "index" === a ? G.ELEMENT_ARRAY_BUFFER : G.ARRAY_BUFFER
                      , l = o.attributes[a];
                    l.buffer = G.createBuffer(),
                    G.bindBuffer(s, l.buffer),
                    G.bufferData(s, l.array, G.STATIC_DRAW)
                }
            else if (t instanceof THREE.Mesh) {
                for (n in a = t.material,
                void 0 === o.geometryGroups && o.makeGroups(a instanceof THREE.MeshFaceMaterial, $ ? 4294967296 : 65535),
                o.geometryGroups)
                    if (a = o.geometryGroups[n],
                    !a.__webglVertexBuffer) {
                        s = a,
                        s.__webglVertexBuffer = G.createBuffer(),
                        s.__webglNormalBuffer = G.createBuffer(),
                        s.__webglTangentBuffer = G.createBuffer(),
                        s.__webglColorBuffer = G.createBuffer(),
                        s.__webglUVBuffer = G.createBuffer(),
                        s.__webglUV2Buffer = G.createBuffer(),
                        s.__webglSkinIndicesBuffer = G.createBuffer(),
                        s.__webglSkinWeightsBuffer = G.createBuffer(),
                        s.__webglFaceBuffer = G.createBuffer(),
                        s.__webglLineBuffer = G.createBuffer();
                        var h = l = void 0;
                        if (s.numMorphTargets)
                            for (s.__webglMorphTargetsBuffers = [],
                            l = 0,
                            h = s.numMorphTargets; h > l; l++)
                                s.__webglMorphTargetsBuffers.push(G.createBuffer());
                        if (s.numMorphNormals)
                            for (s.__webglMorphNormalsBuffers = [],
                            l = 0,
                            h = s.numMorphNormals; h > l; l++)
                                s.__webglMorphNormalsBuffers.push(G.createBuffer());
                        Q.info.memory.geometries++,
                        i(a, t),
                        o.verticesNeedUpdate = !0,
                        o.morphTargetsNeedUpdate = !0,
                        o.elementsNeedUpdate = !0,
                        o.uvsNeedUpdate = !0,
                        o.normalsNeedUpdate = !0,
                        o.tangentsNeedUpdate = !0,
                        o.colorsNeedUpdate = !0
                    }
            } else
                t instanceof THREE.Line ? o.__webglVertexBuffer || (a = o,
                a.__webglVertexBuffer = G.createBuffer(),
                a.__webglColorBuffer = G.createBuffer(),
                a.__webglLineDistanceBuffer = G.createBuffer(),
                Q.info.memory.geometries++,
                a = o,
                s = a.vertices.length,
                a.__vertexArray = new Float32Array(3 * s),
                a.__colorArray = new Float32Array(3 * s),
                a.__lineDistanceArray = new Float32Array(1 * s),
                a.__webglLineCount = s,
                e(a, t),
                o.verticesNeedUpdate = !0,
                o.colorsNeedUpdate = !0,
                o.lineDistancesNeedUpdate = !0) : t instanceof THREE.ParticleSystem && !o.__webglVertexBuffer && (a = o,
                a.__webglVertexBuffer = G.createBuffer(),
                a.__webglColorBuffer = G.createBuffer(),
                Q.info.memory.geometries++,
                a = o,
                s = a.vertices.length,
                a.__vertexArray = new Float32Array(3 * s),
                a.__colorArray = new Float32Array(3 * s),
                a.__sortArray = [],
                a.__webglParticleCount = s,
                e(a, t),
                o.verticesNeedUpdate = !0,
                o.colorsNeedUpdate = !0);
        if (void 0 === t.__webglActive) {
            if (t instanceof THREE.Mesh) {
                if (o = t.geometry,
                o instanceof THREE.BufferGeometry)
                    g(r.__webglObjects, o, t);
                else if (o instanceof THREE.Geometry)
                    for (n in o.geometryGroups)
                        a = o.geometryGroups[n],
                        g(r.__webglObjects, a, t)
            } else
                t instanceof THREE.Line || t instanceof THREE.ParticleSystem ? (o = t.geometry,
                g(r.__webglObjects, o, t)) : t instanceof THREE.ImmediateRenderObject || t.immediateRenderCallback ? r.__webglObjectsImmediate.push({
                    id: null ,
                    object: t,
                    opaque: null ,
                    transparent: null ,
                    z: 0
                }) : t instanceof THREE.Sprite ? r.__webglSprites.push(t) : t instanceof THREE.LensFlare && r.__webglFlares.push(t);
            t.__webglActive = !0
        }
    }
    function g(t, e, i) {
        t.push({
            id: null ,
            buffer: e,
            object: i,
            opaque: null ,
            transparent: null ,
            z: 0
        })
    }
    function E(t) {
        for (var e in t.attributes)
            if (t.attributes[e].needsUpdate)
                return !0;
        return !1
    }
    function y(t) {
        for (var e in t.attributes)
            t.attributes[e].needsUpdate = !1
    }
    function v(t, e) {
        t instanceof THREE.Mesh || t instanceof THREE.ParticleSystem || t instanceof THREE.Line ? _(e.__webglObjects, t) : t instanceof THREE.Sprite ? x(e.__webglSprites, t) : t instanceof THREE.LensFlare ? x(e.__webglFlares, t) : (t instanceof THREE.ImmediateRenderObject || t.immediateRenderCallback) && _(e.__webglObjectsImmediate, t),
        delete t.__webglActive
    }
    function _(t, e) {
        for (var i = t.length - 1; i >= 0; i--)
            t[i].object === e && t.splice(i, 1)
    }
    function x(t, e) {
        for (var i = t.length - 1; i >= 0; i--)
            t[i] === e && t.splice(i, 1)
    }
    function T(t, e, i, r, n) {
        rt = 0,
        r.needsUpdate && (r.program && Yt(r),
        Q.initMaterial(r, e, i, n),
        r.needsUpdate = !1),
        r.morphTargets && !n.__webglMorphTargetInfluences && (n.__webglMorphTargetInfluences = new Float32Array(Q.maxMorphTargets));
        var o = !1
          , a = r.program
          , s = a.uniforms
          , l = r.uniforms;
        if (a.id !== Z && (G.useProgram(a.program),
        Z = a.id,
        o = !0),
        r.id !== tt && (tt = r.id,
        o = !0),
        (o || t !== it) && (G.uniformMatrix4fv(s.projectionMatrix, !1, t.projectionMatrix.elements),
        U && G.uniform1f(s.logDepthBufFC, 2 / (Math.log(t.far + 1) / Math.LN2)),
        t !== it && (it = t)),
        r.skinning)
            if (Ft && n.skeleton.useVertexTexture) {
                if (null  !== s.boneTexture) {
                    var h = w();
                    G.uniform1i(s.boneTexture, h),
                    Q.setTexture(n.skeleton.boneTexture, h)
                }
                null  !== s.boneTextureWidth && G.uniform1i(s.boneTextureWidth, n.skeleton.boneTextureWidth),
                null  !== s.boneTextureHeight && G.uniform1i(s.boneTextureHeight, n.skeleton.boneTextureHeight)
            } else
                null  !== s.boneGlobalMatrices && G.uniformMatrix4fv(s.boneGlobalMatrices, !1, n.skeleton.boneMatrices);
        if (o) {
            if (i && r.fog && (l.fogColor.value = i.color,
            i instanceof THREE.Fog ? (l.fogNear.value = i.near,
            l.fogFar.value = i.far) : i instanceof THREE.FogExp2 && (l.fogDensity.value = i.density)),
            r instanceof THREE.MeshPhongMaterial || r instanceof THREE.MeshLambertMaterial || r.lights) {
                if (Ct) {
                    var c, u, p, d, f = h = 0, m = 0, g = At, E = g.directional.colors, y = g.directional.positions, v = g.point.colors, _ = g.point.positions, x = g.point.distances, T = g.spot.colors, H = g.spot.positions, S = g.spot.distances, C = g.spot.directions, A = g.spot.anglesCos, D = g.spot.exponents, k = g.hemi.skyColors, O = g.hemi.groundColors, F = g.hemi.positions, N = 0, z = 0, V = 0, I = 0, B = 0, j = 0, W = 0, X = 0, q = c = 0;
                    for (i = d = q = 0,
                    o = e.length; o > i; i++)
                        c = e[i],
                        c.onlyShadow || (u = c.color,
                        p = c.intensity,
                        d = c.distance,
                        c instanceof THREE.AmbientLight ? c.visible && (Q.gammaInput ? (h += u.r * u.r,
                        f += u.g * u.g,
                        m += u.b * u.b) : (h += u.r,
                        f += u.g,
                        m += u.b)) : c instanceof THREE.DirectionalLight ? (B += 1,
                        c.visible && (Mt.setFromMatrixPosition(c.matrixWorld),
                        St.setFromMatrixPosition(c.target.matrixWorld),
                        Mt.sub(St),
                        Mt.normalize(),
                        0 !== Mt.x || 0 !== Mt.y || 0 !== Mt.z) && (c = 3 * N,
                        y[c] = Mt.x,
                        y[c + 1] = Mt.y,
                        y[c + 2] = Mt.z,
                        Q.gammaInput ? b(E, c, u, p * p) : R(E, c, u, p),
                        N += 1)) : c instanceof THREE.PointLight ? (j += 1,
                        c.visible && (q = 3 * z,
                        Q.gammaInput ? b(v, q, u, p * p) : R(v, q, u, p),
                        St.setFromMatrixPosition(c.matrixWorld),
                        _[q] = St.x,
                        _[q + 1] = St.y,
                        _[q + 2] = St.z,
                        x[z] = d,
                        z += 1)) : c instanceof THREE.SpotLight ? (W += 1,
                        c.visible && (q = 3 * V,
                        Q.gammaInput ? b(T, q, u, p * p) : R(T, q, u, p),
                        St.setFromMatrixPosition(c.matrixWorld),
                        H[q] = St.x,
                        H[q + 1] = St.y,
                        H[q + 2] = St.z,
                        S[V] = d,
                        Mt.copy(St),
                        St.setFromMatrixPosition(c.target.matrixWorld),
                        Mt.sub(St),
                        Mt.normalize(),
                        C[q] = Mt.x,
                        C[q + 1] = Mt.y,
                        C[q + 2] = Mt.z,
                        A[V] = Math.cos(c.angle),
                        D[V] = c.exponent,
                        V += 1)) : c instanceof THREE.HemisphereLight && (X += 1,
                        c.visible && (Mt.setFromMatrixPosition(c.matrixWorld),
                        Mt.normalize(),
                        0 !== Mt.x || 0 !== Mt.y || 0 !== Mt.z)) && (d = 3 * I,
                        F[d] = Mt.x,
                        F[d + 1] = Mt.y,
                        F[d + 2] = Mt.z,
                        u = c.color,
                        c = c.groundColor,
                        Q.gammaInput ? (p *= p,
                        b(k, d, u, p),
                        b(O, d, c, p)) : (R(k, d, u, p),
                        R(O, d, c, p)),
                        I += 1));
                    for (i = 3 * N,
                    o = Math.max(E.length, 3 * B); o > i; i++)
                        E[i] = 0;
                    for (i = 3 * z,
                    o = Math.max(v.length, 3 * j); o > i; i++)
                        v[i] = 0;
                    for (i = 3 * V,
                    o = Math.max(T.length, 3 * W); o > i; i++)
                        T[i] = 0;
                    for (i = 3 * I,
                    o = Math.max(k.length, 3 * X); o > i; i++)
                        k[i] = 0;
                    for (i = 3 * I,
                    o = Math.max(O.length, 3 * X); o > i; i++)
                        O[i] = 0;
                    g.directional.length = N,
                    g.point.length = z,
                    g.spot.length = V,
                    g.hemi.length = I,
                    g.ambient[0] = h,
                    g.ambient[1] = f,
                    g.ambient[2] = m,
                    Ct = !1
                }
                i = At,
                l.ambientLightColor.value = i.ambient,
                l.directionalLightColor.value = i.directional.colors,
                l.directionalLightDirection.value = i.directional.positions,
                l.pointLightColor.value = i.point.colors,
                l.pointLightPosition.value = i.point.positions,
                l.pointLightDistance.value = i.point.distances,
                l.spotLightColor.value = i.spot.colors,
                l.spotLightPosition.value = i.spot.positions,
                l.spotLightDistance.value = i.spot.distances,
                l.spotLightDirection.value = i.spot.directions,
                l.spotLightAngleCos.value = i.spot.anglesCos,
                l.spotLightExponent.value = i.spot.exponents,
                l.hemisphereLightSkyColor.value = i.hemi.skyColors,
                l.hemisphereLightGroundColor.value = i.hemi.groundColors,
                l.hemisphereLightDirection.value = i.hemi.positions
            }
            if (r instanceof THREE.MeshBasicMaterial || r instanceof THREE.MeshLambertMaterial || r instanceof THREE.MeshPhongMaterial) {
                l.opacity.value = r.opacity,
                Q.gammaInput ? l.diffuse.value.copyGammaToLinear(r.color) : l.diffuse.value = r.color,
                l.map.value = r.map,
                l.lightMap.value = r.lightMap,
                l.specularMap.value = r.specularMap,
                r.bumpMap && (l.bumpMap.value = r.bumpMap,
                l.bumpScale.value = r.bumpScale),
                r.normalMap && (l.normalMap.value = r.normalMap,
                l.normalScale.value.copy(r.normalScale));
                var Y;
                r.map ? Y = r.map : r.specularMap ? Y = r.specularMap : r.normalMap ? Y = r.normalMap : r.bumpMap && (Y = r.bumpMap),
                void 0 !== Y && (i = Y.offset,
                Y = Y.repeat,
                l.offsetRepeat.value.set(i.x, i.y, Y.x, Y.y)),
                l.envMap.value = r.envMap,
                l.flipEnvMap.value = r.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1,
                l.reflectivity.value = r.reflectivity,
                l.refractionRatio.value = r.refractionRatio,
                l.combine.value = r.combine,
                l.useRefract.value = r.envMap && r.envMap.mapping instanceof THREE.CubeRefractionMapping
            }
            if (r instanceof THREE.LineBasicMaterial ? (l.diffuse.value = r.color,
            l.opacity.value = r.opacity) : r instanceof THREE.LineDashedMaterial ? (l.diffuse.value = r.color,
            l.opacity.value = r.opacity,
            l.dashSize.value = r.dashSize,
            l.totalSize.value = r.dashSize + r.gapSize,
            l.scale.value = r.scale) : r instanceof THREE.ParticleSystemMaterial ? (l.psColor.value = r.color,
            l.opacity.value = r.opacity,
            l.size.value = r.size,
            l.scale.value = L.height / 2,
            l.map.value = r.map) : r instanceof THREE.MeshPhongMaterial ? (l.shininess.value = r.shininess,
            Q.gammaInput ? (l.ambient.value.copyGammaToLinear(r.ambient),
            l.emissive.value.copyGammaToLinear(r.emissive),
            l.specular.value.copyGammaToLinear(r.specular)) : (l.ambient.value = r.ambient,
            l.emissive.value = r.emissive,
            l.specular.value = r.specular),
            r.wrapAround && l.wrapRGB.value.copy(r.wrapRGB)) : r instanceof THREE.MeshLambertMaterial ? (Q.gammaInput ? (l.ambient.value.copyGammaToLinear(r.ambient),
            l.emissive.value.copyGammaToLinear(r.emissive)) : (l.ambient.value = r.ambient,
            l.emissive.value = r.emissive),
            r.wrapAround && l.wrapRGB.value.copy(r.wrapRGB)) : r instanceof THREE.MeshDepthMaterial ? (l.mNear.value = t.near,
            l.mFar.value = t.far,
            l.opacity.value = r.opacity) : r instanceof THREE.MeshNormalMaterial && (l.opacity.value = r.opacity),
            n.receiveShadow && !r._shadowPass && l.shadowMatrix)
                for (i = Y = 0,
                o = e.length; o > i; i++)
                    h = e[i],
                    h.castShadow && (h instanceof THREE.SpotLight || h instanceof THREE.DirectionalLight && !h.shadowCascade) && (l.shadowMap.value[Y] = h.shadowMap,
                    l.shadowMapSize.value[Y] = h.shadowMapSize,
                    l.shadowMatrix.value[Y] = h.shadowMatrix,
                    l.shadowDarkness.value[Y] = h.shadowDarkness,
                    l.shadowBias.value[Y] = h.shadowBias,
                    Y++);
            for (e = r.uniformsList,
            l = 0,
            Y = e.length; Y > l; l++)
                if (o = a.uniforms[e[l][1]])
                    if (i = e[l][0],
                    f = i.type,
                    h = i.value,
                    "i" === f)
                        G.uniform1i(o, h);
                    else if ("f" === f)
                        G.uniform1f(o, h);
                    else if ("v2" === f)
                        G.uniform2f(o, h.x, h.y);
                    else if ("v3" === f)
                        G.uniform3f(o, h.x, h.y, h.z);
                    else if ("v4" === f)
                        G.uniform4f(o, h.x, h.y, h.z, h.w);
                    else if ("c" === f)
                        G.uniform3f(o, h.r, h.g, h.b);
                    else if ("iv1" === f)
                        G.uniform1iv(o, h);
                    else if ("iv" === f)
                        G.uniform3iv(o, h);
                    else if ("fv1" === f)
                        G.uniform1fv(o, h);
                    else if ("fv" === f)
                        G.uniform3fv(o, h);
                    else if ("v2v" === f) {
                        for (void 0 === i._array && (i._array = new Float32Array(2 * h.length)),
                        f = 0,
                        m = h.length; m > f; f++)
                            g = 2 * f,
                            i._array[g] = h[f].x,
                            i._array[g + 1] = h[f].y;
                        G.uniform2fv(o, i._array)
                    } else if ("v3v" === f) {
                        for (void 0 === i._array && (i._array = new Float32Array(3 * h.length)),
                        f = 0,
                        m = h.length; m > f; f++)
                            g = 3 * f,
                            i._array[g] = h[f].x,
                            i._array[g + 1] = h[f].y,
                            i._array[g + 2] = h[f].z;
                        G.uniform3fv(o, i._array)
                    } else if ("v4v" === f) {
                        for (void 0 === i._array && (i._array = new Float32Array(4 * h.length)),
                        f = 0,
                        m = h.length; m > f; f++)
                            g = 4 * f,
                            i._array[g] = h[f].x,
                            i._array[g + 1] = h[f].y,
                            i._array[g + 2] = h[f].z,
                            i._array[g + 3] = h[f].w;
                        G.uniform4fv(o, i._array)
                    } else if ("m3" === f)
                        G.uniformMatrix3fv(o, !1, h.elements);
                    else if ("m3v" === f) {
                        for (void 0 === i._array && (i._array = new Float32Array(9 * h.length)),
                        f = 0,
                        m = h.length; m > f; f++)
                            h[f].flattenToArrayOffset(i._array, 9 * f);
                        G.uniformMatrix3fv(o, !1, i._array)
                    } else if ("m4" === f)
                        G.uniformMatrix4fv(o, !1, h.elements);
                    else if ("m4v" === f) {
                        for (void 0 === i._array && (i._array = new Float32Array(16 * h.length)),
                        f = 0,
                        m = h.length; m > f; f++)
                            h[f].flattenToArrayOffset(i._array, 16 * f);
                        G.uniformMatrix4fv(o, !1, i._array)
                    } else if ("t" === f) {
                        if (g = h,
                        h = w(),
                        G.uniform1i(o, h),
                        g)
                            if (g.image instanceof Array && 6 === g.image.length) {
                                if (i = g,
                                o = h,
                                6 === i.image.length)
                                    if (i.needsUpdate) {
                                        for (i.image.__webglTextureCube || (i.addEventListener("dispose", Gt),
                                        i.image.__webglTextureCube = G.createTexture(),
                                        Q.info.memory.textures++),
                                        G.activeTexture(G.TEXTURE0 + o),
                                        G.bindTexture(G.TEXTURE_CUBE_MAP, i.image.__webglTextureCube),
                                        G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL, i.flipY),
                                        o = i instanceof THREE.CompressedTexture,
                                        h = [],
                                        f = 0; 6 > f; f++)
                                            Q.autoScaleCubemaps && !o ? (m = h,
                                            g = f,
                                            E = i.image[f],
                                            v = Dt,
                                            E.width <= v && E.height <= v || (_ = Math.max(E.width, E.height),
                                            y = Math.floor(E.width * v / _),
                                            v = Math.floor(E.height * v / _),
                                            _ = document.createElement("canvas"),
                                            _.width = y,
                                            _.height = v,
                                            _.getContext("2d").drawImage(E, 0, 0, E.width, E.height, 0, 0, y, v),
                                            E = _),
                                            m[g] = E) : h[f] = i.image[f];
                                        for (f = h[0],
                                        m = THREE.Math.isPowerOfTwo(f.width) && THREE.Math.isPowerOfTwo(f.height),
                                        g = P(i.format),
                                        E = P(i.type),
                                        M(G.TEXTURE_CUBE_MAP, i, m),
                                        f = 0; 6 > f; f++)
                                            if (o)
                                                for (v = h[f].mipmaps,
                                                _ = 0,
                                                x = v.length; x > _; _++)
                                                    y = v[_],
                                                    i.format !== THREE.RGBAFormat ? G.compressedTexImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X + f, _, g, y.width, y.height, 0, y.data) : G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X + f, _, g, y.width, y.height, 0, g, E, y.data);
                                            else
                                                G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, g, g, E, h[f]);
                                        i.generateMipmaps && m && G.generateMipmap(G.TEXTURE_CUBE_MAP),
                                        i.needsUpdate = !1,
                                        i.onUpdate && i.onUpdate()
                                    } else
                                        G.activeTexture(G.TEXTURE0 + o),
                                        G.bindTexture(G.TEXTURE_CUBE_MAP, i.image.__webglTextureCube)
                            } else
                                g instanceof THREE.WebGLRenderTargetCube ? (i = g,
                                G.activeTexture(G.TEXTURE0 + h),
                                G.bindTexture(G.TEXTURE_CUBE_MAP, i.__webglTexture)) : Q.setTexture(g, h)
                    } else if ("tv" === f) {
                        for (void 0 === i._array && (i._array = []),
                        f = 0,
                        m = i.value.length; m > f; f++)
                            i._array[f] = w();
                        for (G.uniform1iv(o, i._array),
                        f = 0,
                        m = i.value.length; m > f; f++)
                            g = i.value[f],
                            h = i._array[f],
                            g && Q.setTexture(g, h)
                    } else
                        console.warn("THREE.WebGLRenderer: Unknown uniform type: " + f);
            (r instanceof THREE.ShaderMaterial || r instanceof THREE.MeshPhongMaterial || r.envMap) && null  !== s.cameraPosition && (St.setFromMatrixPosition(t.matrixWorld),
            G.uniform3f(s.cameraPosition, St.x, St.y, St.z)),
            (r instanceof THREE.MeshPhongMaterial || r instanceof THREE.MeshLambertMaterial || r instanceof THREE.ShaderMaterial || r.skinning) && null  !== s.viewMatrix && G.uniformMatrix4fv(s.viewMatrix, !1, t.matrixWorldInverse.elements)
        }
        return G.uniformMatrix4fv(s.modelViewMatrix, !1, n._modelViewMatrix.elements),
        s.normalMatrix && G.uniformMatrix3fv(s.normalMatrix, !1, n._normalMatrix.elements),
        null  !== s.modelMatrix && G.uniformMatrix4fv(s.modelMatrix, !1, n.matrixWorld.elements),
        a
    }
    function w() {
        var t = rt;
        return t >= Pt && console.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + Pt),
        rt += 1,
        t
    }
    function b(t, e, i, r) {
        t[e] = i.r * i.r * r,
        t[e + 1] = i.g * i.g * r,
        t[e + 2] = i.b * i.b * r
    }
    function R(t, e, i, r) {
        t[e] = i.r * r,
        t[e + 1] = i.g * r,
        t[e + 2] = i.b * r
    }
    function H(t) {
        t !== mt && (G.lineWidth(t),
        mt = t)
    }
    function S(t, e, i) {
        pt !== t && (t ? G.enable(G.POLYGON_OFFSET_FILL) : G.disable(G.POLYGON_OFFSET_FILL),
        pt = t),
        !t || dt === e && ft === i || (G.polygonOffset(e, i),
        dt = e,
        ft = i)
    }
    function M(t, e, i) {
        i ? (G.texParameteri(t, G.TEXTURE_WRAP_S, P(e.wrapS)),
        G.texParameteri(t, G.TEXTURE_WRAP_T, P(e.wrapT)),
        G.texParameteri(t, G.TEXTURE_MAG_FILTER, P(e.magFilter)),
        G.texParameteri(t, G.TEXTURE_MIN_FILTER, P(e.minFilter))) : (G.texParameteri(t, G.TEXTURE_WRAP_S, G.CLAMP_TO_EDGE),
        G.texParameteri(t, G.TEXTURE_WRAP_T, G.CLAMP_TO_EDGE),
        G.texParameteri(t, G.TEXTURE_MAG_FILTER, A(e.magFilter)),
        G.texParameteri(t, G.TEXTURE_MIN_FILTER, A(e.minFilter))),
        q && e.type !== THREE.FloatType && (1 < e.anisotropy || e.__oldAnisotropy) && (G.texParameterf(t, q.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(e.anisotropy, kt)),
        e.__oldAnisotropy = e.anisotropy)
    }
    function C(t, e) {
        G.bindRenderbuffer(G.RENDERBUFFER, t),
        e.depthBuffer && !e.stencilBuffer ? (G.renderbufferStorage(G.RENDERBUFFER, G.DEPTH_COMPONENT16, e.width, e.height),
        G.framebufferRenderbuffer(G.FRAMEBUFFER, G.DEPTH_ATTACHMENT, G.RENDERBUFFER, t)) : e.depthBuffer && e.stencilBuffer ? (G.renderbufferStorage(G.RENDERBUFFER, G.DEPTH_STENCIL, e.width, e.height),
        G.framebufferRenderbuffer(G.FRAMEBUFFER, G.DEPTH_STENCIL_ATTACHMENT, G.RENDERBUFFER, t)) : G.renderbufferStorage(G.RENDERBUFFER, G.RGBA4, e.width, e.height)
    }
    function A(t) {
        return t === THREE.NearestFilter || t === THREE.NearestMipMapNearestFilter || t === THREE.NearestMipMapLinearFilter ? G.NEAREST : G.LINEAR
    }
    function P(t) {
        if (t === THREE.RepeatWrapping)
            return G.REPEAT;
        if (t === THREE.ClampToEdgeWrapping)
            return G.CLAMP_TO_EDGE;
        if (t === THREE.MirroredRepeatWrapping)
            return G.MIRRORED_REPEAT;
        if (t === THREE.NearestFilter)
            return G.NEAREST;
        if (t === THREE.NearestMipMapNearestFilter)
            return G.NEAREST_MIPMAP_NEAREST;
        if (t === THREE.NearestMipMapLinearFilter)
            return G.NEAREST_MIPMAP_LINEAR;
        if (t === THREE.LinearFilter)
            return G.LINEAR;
        if (t === THREE.LinearMipMapNearestFilter)
            return G.LINEAR_MIPMAP_NEAREST;
        if (t === THREE.LinearMipMapLinearFilter)
            return G.LINEAR_MIPMAP_LINEAR;
        if (t === THREE.UnsignedByteType)
            return G.UNSIGNED_BYTE;
        if (t === THREE.UnsignedShort4444Type)
            return G.UNSIGNED_SHORT_4_4_4_4;
        if (t === THREE.UnsignedShort5551Type)
            return G.UNSIGNED_SHORT_5_5_5_1;
        if (t === THREE.UnsignedShort565Type)
            return G.UNSIGNED_SHORT_5_6_5;
        if (t === THREE.ByteType)
            return G.BYTE;
        if (t === THREE.ShortType)
            return G.SHORT;
        if (t === THREE.UnsignedShortType)
            return G.UNSIGNED_SHORT;
        if (t === THREE.IntType)
            return G.INT;
        if (t === THREE.UnsignedIntType)
            return G.UNSIGNED_INT;
        if (t === THREE.FloatType)
            return G.FLOAT;
        if (t === THREE.AlphaFormat)
            return G.ALPHA;
        if (t === THREE.RGBFormat)
            return G.RGB;
        if (t === THREE.RGBAFormat)
            return G.RGBA;
        if (t === THREE.LuminanceFormat)
            return G.LUMINANCE;
        if (t === THREE.LuminanceAlphaFormat)
            return G.LUMINANCE_ALPHA;
        if (t === THREE.AddEquation)
            return G.FUNC_ADD;
        if (t === THREE.SubtractEquation)
            return G.FUNC_SUBTRACT;
        if (t === THREE.ReverseSubtractEquation)
            return G.FUNC_REVERSE_SUBTRACT;
        if (t === THREE.ZeroFactor)
            return G.ZERO;
        if (t === THREE.OneFactor)
            return G.ONE;
        if (t === THREE.SrcColorFactor)
            return G.SRC_COLOR;
        if (t === THREE.OneMinusSrcColorFactor)
            return G.ONE_MINUS_SRC_COLOR;
        if (t === THREE.SrcAlphaFactor)
            return G.SRC_ALPHA;
        if (t === THREE.OneMinusSrcAlphaFactor)
            return G.ONE_MINUS_SRC_ALPHA;
        if (t === THREE.DstAlphaFactor)
            return G.DST_ALPHA;
        if (t === THREE.OneMinusDstAlphaFactor)
            return G.ONE_MINUS_DST_ALPHA;
        if (t === THREE.DstColorFactor)
            return G.DST_COLOR;
        if (t === THREE.OneMinusDstColorFactor)
            return G.ONE_MINUS_DST_COLOR;
        if (t === THREE.SrcAlphaSaturateFactor)
            return G.SRC_ALPHA_SATURATE;
        if (void 0 !== Y) {
            if (t === THREE.RGB_S3TC_DXT1_Format)
                return Y.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (t === THREE.RGBA_S3TC_DXT1_Format)
                return Y.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (t === THREE.RGBA_S3TC_DXT3_Format)
                return Y.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (t === THREE.RGBA_S3TC_DXT5_Format)
                return Y.COMPRESSED_RGBA_S3TC_DXT5_EXT
        }
        return 0
    }
    console.log("THREE.WebGLRenderer", THREE.REVISION),
    t = t || {};
    var L = void 0 !== t.canvas ? t.canvas : document.createElement("canvas")
      , D = void 0 !== t.context ? t.context : null 
      , k = void 0 !== t.precision ? t.precision : "highp"
      , O = void 0 !== t.alpha ? t.alpha : !1
      , F = void 0 !== t.depth ? t.depth : !0
      , N = void 0 !== t.stencil ? t.stencil : !0
      , z = void 0 !== t.antialias ? t.antialias : !1
      , V = void 0 !== t.premultipliedAlpha ? t.premultipliedAlpha : !0
      , I = void 0 !== t.preserveDrawingBuffer ? t.preserveDrawingBuffer : !1
      , U = void 0 !== t.logarithmicDepthBuffer ? t.logarithmicDepthBuffer : !1
      , B = new THREE.Color(0)
      , j = 0;
    this.domElement = L,
    this.context = null ,
    this.devicePixelRatio = void 0 !== t.devicePixelRatio ? t.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1,
    this.autoUpdateObjects = this.sortObjects = this.autoClearStencil = this.autoClearDepth = this.autoClearColor = this.autoClear = !0,
    this.shadowMapEnabled = this.gammaOutput = this.gammaInput = !1,
    this.shadowMapAutoUpdate = !0,
    this.shadowMapType = THREE.PCFShadowMap,
    this.shadowMapCullFace = THREE.CullFaceFront,
    this.shadowMapCascade = this.shadowMapDebug = !1,
    this.maxMorphTargets = 8,
    this.maxMorphNormals = 4,
    this.autoScaleCubemaps = !0,
    this.renderPluginsPre = [],
    this.renderPluginsPost = [],
    this.info = {
        memory: {
            programs: 0,
            geometries: 0,
            textures: 0
        },
        render: {
            calls: 0,
            vertices: 0,
            faces: 0,
            points: 0
        }
    };
    var G, W, X, q, Y, $, Q = this, K = [], Z = null , J = null , tt = -1, et = null , it = null , rt = 0, nt = -1, ot = -1, at = -1, st = -1, lt = -1, ht = -1, ct = -1, ut = -1, pt = null , dt = null , ft = null , mt = null , gt = 0, Et = 0, yt = L.width, vt = L.height, _t = 0, xt = 0, Tt = new Uint8Array(16), wt = new Uint8Array(16), bt = new THREE.Frustum, Rt = new THREE.Matrix4, Ht = new THREE.Matrix4, St = new THREE.Vector3, Mt = new THREE.Vector3, Ct = !0, At = {
        ambient: [0, 0, 0],
        directional: {
            length: 0,
            colors: [],
            positions: []
        },
        point: {
            length: 0,
            colors: [],
            positions: [],
            distances: []
        },
        spot: {
            length: 0,
            colors: [],
            positions: [],
            distances: [],
            directions: [],
            anglesCos: [],
            exponents: []
        },
        hemi: {
            length: 0,
            skyColors: [],
            groundColors: [],
            positions: []
        }
    };
    !function() {
        try {
            var t = {
                alpha: O,
                depth: F,
                stencil: N,
                antialias: z,
                premultipliedAlpha: V,
                preserveDrawingBuffer: I
            };
            if (G = D || L.getContext("webgl", t) || L.getContext("experimental-webgl", t),
            null  === G)
                throw "Error creating WebGL context."
        } catch (e) {
            console.error(e)
        }
        W = G.getExtension("OES_texture_float"),
        G.getExtension("OES_texture_float_linear"),
        X = G.getExtension("OES_standard_derivatives"),
        q = G.getExtension("EXT_texture_filter_anisotropic") || G.getExtension("MOZ_EXT_texture_filter_anisotropic") || G.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),
        Y = G.getExtension("WEBGL_compressed_texture_s3tc") || G.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || G.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),
        $ = G.getExtension("OES_element_index_uint"),
        null  === W && console.log("THREE.WebGLRenderer: Float textures not supported."),
        null  === X && console.log("THREE.WebGLRenderer: Standard derivatives not supported."),
        null  === q && console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),
        null  === Y && console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),
        null  === $ && console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),
        void 0 === G.getShaderPrecisionFormat && (G.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            }
        }
        ),
        U && G.getExtension("EXT_frag_depth")
    }
    (),
    G.clearColor(0, 0, 0, 1),
    G.clearDepth(1),
    G.clearStencil(0),
    G.enable(G.DEPTH_TEST),
    G.depthFunc(G.LEQUAL),
    G.frontFace(G.CCW),
    G.cullFace(G.BACK),
    G.enable(G.CULL_FACE),
    G.enable(G.BLEND),
    G.blendEquation(G.FUNC_ADD),
    G.blendFunc(G.SRC_ALPHA, G.ONE_MINUS_SRC_ALPHA),
    G.viewport(gt, Et, yt, vt),
    G.clearColor(B.r, B.g, B.b, j),
    this.context = G;
    var Pt = G.getParameter(G.MAX_TEXTURE_IMAGE_UNITS)
      , Lt = G.getParameter(G.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
    G.getParameter(G.MAX_TEXTURE_SIZE);
    var Dt = G.getParameter(G.MAX_CUBE_MAP_TEXTURE_SIZE)
      , kt = q ? G.getParameter(q.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
      , Ot = Lt > 0
      , Ft = Ot && W;
    Y && G.getParameter(G.COMPRESSED_TEXTURE_FORMATS);
    var Nt = G.getShaderPrecisionFormat(G.VERTEX_SHADER, G.HIGH_FLOAT)
      , zt = G.getShaderPrecisionFormat(G.VERTEX_SHADER, G.MEDIUM_FLOAT);
    G.getShaderPrecisionFormat(G.VERTEX_SHADER, G.LOW_FLOAT);
    var Vt = G.getShaderPrecisionFormat(G.FRAGMENT_SHADER, G.HIGH_FLOAT)
      , It = G.getShaderPrecisionFormat(G.FRAGMENT_SHADER, G.MEDIUM_FLOAT);
    G.getShaderPrecisionFormat(G.FRAGMENT_SHADER, G.LOW_FLOAT);
    var Ut = 0 < Nt.precision && 0 < Vt.precision
      , Bt = 0 < zt.precision && 0 < It.precision;
    "highp" !== k || Ut || (Bt ? (k = "mediump",
    console.warn("WebGLRenderer: highp not supported, using mediump")) : (k = "lowp",
    console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),
    "mediump" !== k || Bt || (k = "lowp",
    console.warn("WebGLRenderer: mediump not supported, using lowp")),
    this.getContext = function() {
        return G
    }
    ,
    this.supportsVertexTextures = function() {
        return Ot
    }
    ,
    this.supportsFloatTextures = function() {
        return W
    }
    ,
    this.supportsStandardDerivatives = function() {
        return X
    }
    ,
    this.supportsCompressedTextureS3TC = function() {
        return Y
    }
    ,
    this.getMaxAnisotropy = function() {
        return kt
    }
    ,
    this.getPrecision = function() {
        return k
    }
    ,
    this.setSize = function(t, e, i) {
        L.width = t * this.devicePixelRatio,
        L.height = e * this.devicePixelRatio,
        !1 !== i && (L.style.width = t + "px",
        L.style.height = e + "px"),
        this.setViewport(0, 0, t, e)
    }
    ,
    this.setViewport = function(t, e, i, r) {
        gt = t * this.devicePixelRatio,
        Et = e * this.devicePixelRatio,
        yt = i * this.devicePixelRatio,
        vt = r * this.devicePixelRatio,
        G.viewport(gt, Et, yt, vt)
    }
    ,
    this.setScissor = function(t, e, i, r) {
        G.scissor(t * this.devicePixelRatio, e * this.devicePixelRatio, i * this.devicePixelRatio, r * this.devicePixelRatio)
    }
    ,
    this.enableScissorTest = function(t) {
        t ? G.enable(G.SCISSOR_TEST) : G.disable(G.SCISSOR_TEST)
    }
    ,
    this.setClearColor = function(t, e) {
        B.set(t),
        j = void 0 !== e ? e : 1,
        G.clearColor(B.r, B.g, B.b, j)
    }
    ,
    this.setClearColorHex = function(t, e) {
        console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),
        this.setClearColor(t, e)
    }
    ,
    this.getClearColor = function() {
        return B
    }
    ,
    this.getClearAlpha = function() {
        return j
    }
    ,
    this.clear = function(t, e, i) {
        var r = 0;
        (void 0 === t || t) && (r |= G.COLOR_BUFFER_BIT),
        (void 0 === e || e) && (r |= G.DEPTH_BUFFER_BIT),
        (void 0 === i || i) && (r |= G.STENCIL_BUFFER_BIT),
        G.clear(r)
    }
    ,
    this.clearColor = function() {
        G.clear(G.COLOR_BUFFER_BIT)
    }
    ,
    this.clearDepth = function() {
        G.clear(G.DEPTH_BUFFER_BIT)
    }
    ,
    this.clearStencil = function() {
        G.clear(G.STENCIL_BUFFER_BIT)
    }
    ,
    this.clearTarget = function(t, e, i, r) {
        this.setRenderTarget(t),
        this.clear(e, i, r)
    }
    ,
    this.addPostPlugin = function(t) {
        t.init(this),
        this.renderPluginsPost.push(t)
    }
    ,
    this.addPrePlugin = function(t) {
        t.init(this),
        this.renderPluginsPre.push(t)
    }
    ,
    this.updateShadowMap = function(t, e) {
        Z = null ,
        tt = et = ut = ct = at = -1,
        Ct = !0,
        ot = nt = -1,
        this.shadowMapPlugin.update(t, e)
    }
    ;
    var jt = function(t) {
        if (t = t.target,
        t.removeEventListener("dispose", jt),
        t.__webglInit = void 0,
        t instanceof THREE.BufferGeometry) {
            var e, i = t.attributes;
            for (e in i)
                void 0 !== i[e].buffer && G.deleteBuffer(i[e].buffer);
            Q.info.memory.geometries--
        } else if (void 0 !== t.geometryGroups)
            for (i in t.geometryGroups) {
                if (e = t.geometryGroups[i],
                void 0 !== e.numMorphTargets)
                    for (var r = 0, n = e.numMorphTargets; n > r; r++)
                        G.deleteBuffer(e.__webglMorphTargetsBuffers[r]);
                if (void 0 !== e.numMorphNormals)
                    for (r = 0,
                    n = e.numMorphNormals; n > r; r++)
                        G.deleteBuffer(e.__webglMorphNormalsBuffers[r]);
                qt(e)
            }
        else
            qt(t)
    }
      , Gt = function(t) {
        t = t.target,
        t.removeEventListener("dispose", Gt),
        t.image && t.image.__webglTextureCube ? G.deleteTexture(t.image.__webglTextureCube) : t.__webglInit && (t.__webglInit = !1,
        G.deleteTexture(t.__webglTexture)),
        Q.info.memory.textures--
    }
      , Wt = function(t) {
        if (t = t.target,
        t.removeEventListener("dispose", Wt),
        t && t.__webglTexture)
            if (G.deleteTexture(t.__webglTexture),
            t instanceof THREE.WebGLRenderTargetCube)
                for (var e = 0; 6 > e; e++)
                    G.deleteFramebuffer(t.__webglFramebuffer[e]),
                    G.deleteRenderbuffer(t.__webglRenderbuffer[e]);
            else
                G.deleteFramebuffer(t.__webglFramebuffer),
                G.deleteRenderbuffer(t.__webglRenderbuffer);
        Q.info.memory.textures--
    }
      , Xt = function(t) {
        t = t.target,
        t.removeEventListener("dispose", Xt),
        Yt(t)
    }
      , qt = function(t) {
        if (void 0 !== t.__webglVertexBuffer && G.deleteBuffer(t.__webglVertexBuffer),
        void 0 !== t.__webglNormalBuffer && G.deleteBuffer(t.__webglNormalBuffer),
        void 0 !== t.__webglTangentBuffer && G.deleteBuffer(t.__webglTangentBuffer),
        void 0 !== t.__webglColorBuffer && G.deleteBuffer(t.__webglColorBuffer),
        void 0 !== t.__webglUVBuffer && G.deleteBuffer(t.__webglUVBuffer),
        void 0 !== t.__webglUV2Buffer && G.deleteBuffer(t.__webglUV2Buffer),
        void 0 !== t.__webglSkinIndicesBuffer && G.deleteBuffer(t.__webglSkinIndicesBuffer),
        void 0 !== t.__webglSkinWeightsBuffer && G.deleteBuffer(t.__webglSkinWeightsBuffer),
        void 0 !== t.__webglFaceBuffer && G.deleteBuffer(t.__webglFaceBuffer),
        void 0 !== t.__webglLineBuffer && G.deleteBuffer(t.__webglLineBuffer),
        void 0 !== t.__webglLineDistanceBuffer && G.deleteBuffer(t.__webglLineDistanceBuffer),
        void 0 !== t.__webglCustomAttributesList)
            for (var e in t.__webglCustomAttributesList)
                G.deleteBuffer(t.__webglCustomAttributesList[e].buffer);
        Q.info.memory.geometries--
    }
      , Yt = function(t) {
        var e = t.program;
        if (void 0 !== e) {
            t.program = void 0;
            var i, r, n = !1;
            for (t = 0,
            i = K.length; i > t; t++)
                if (r = K[t],
                r.program === e) {
                    r.usedTimes--,
                    0 === r.usedTimes && (n = !0);
                    break
                }
            if (!0 === n) {
                for (n = [],
                t = 0,
                i = K.length; i > t; t++)
                    r = K[t],
                    r.program !== e && n.push(r);
                K = n,
                G.deleteProgram(e),
                Q.info.memory.programs--
            }
        }
    }
    ;
    this.renderBufferImmediate = function(t, e, i) {
        if (s(),
        t.hasPositions && !t.__webglVertexBuffer && (t.__webglVertexBuffer = G.createBuffer()),
        t.hasNormals && !t.__webglNormalBuffer && (t.__webglNormalBuffer = G.createBuffer()),
        t.hasUvs && !t.__webglUvBuffer && (t.__webglUvBuffer = G.createBuffer()),
        t.hasColors && !t.__webglColorBuffer && (t.__webglColorBuffer = G.createBuffer()),
        t.hasPositions && (G.bindBuffer(G.ARRAY_BUFFER, t.__webglVertexBuffer),
        G.bufferData(G.ARRAY_BUFFER, t.positionArray, G.DYNAMIC_DRAW),
        l(e.attributes.position),
        G.vertexAttribPointer(e.attributes.position, 3, G.FLOAT, !1, 0, 0)),
        t.hasNormals) {
            if (G.bindBuffer(G.ARRAY_BUFFER, t.__webglNormalBuffer),
            i.shading === THREE.FlatShading) {
                var r, n, o, a, c, u, p, d, f, m, g, E = 3 * t.count;
                for (g = 0; E > g; g += 9)
                    m = t.normalArray,
                    r = m[g],
                    n = m[g + 1],
                    o = m[g + 2],
                    a = m[g + 3],
                    u = m[g + 4],
                    d = m[g + 5],
                    c = m[g + 6],
                    p = m[g + 7],
                    f = m[g + 8],
                    r = (r + a + c) / 3,
                    n = (n + u + p) / 3,
                    o = (o + d + f) / 3,
                    m[g] = r,
                    m[g + 1] = n,
                    m[g + 2] = o,
                    m[g + 3] = r,
                    m[g + 4] = n,
                    m[g + 5] = o,
                    m[g + 6] = r,
                    m[g + 7] = n,
                    m[g + 8] = o
            }
            G.bufferData(G.ARRAY_BUFFER, t.normalArray, G.DYNAMIC_DRAW),
            l(e.attributes.normal),
            G.vertexAttribPointer(e.attributes.normal, 3, G.FLOAT, !1, 0, 0)
        }
        t.hasUvs && i.map && (G.bindBuffer(G.ARRAY_BUFFER, t.__webglUvBuffer),
        G.bufferData(G.ARRAY_BUFFER, t.uvArray, G.DYNAMIC_DRAW),
        l(e.attributes.uv),
        G.vertexAttribPointer(e.attributes.uv, 2, G.FLOAT, !1, 0, 0)),
        t.hasColors && i.vertexColors !== THREE.NoColors && (G.bindBuffer(G.ARRAY_BUFFER, t.__webglColorBuffer),
        G.bufferData(G.ARRAY_BUFFER, t.colorArray, G.DYNAMIC_DRAW),
        l(e.attributes.color),
        G.vertexAttribPointer(e.attributes.color, 3, G.FLOAT, !1, 0, 0)),
        h(),
        G.drawArrays(G.TRIANGLES, 0, t.count),
        t.count = 0
    }
    ,
    this.renderBufferDirect = function(t, e, i, r, n, o) {
        if (!1 !== r.visible) {
            var l = T(t, e, i, r, o);
            if (t = l.attributes,
            e = n.attributes,
            i = !1,
            l = 16777215 * n.id + 2 * l.id + (r.wireframe ? 1 : 0),
            l !== et && (et = l,
            i = !0),
            i && s(),
            o instanceof THREE.Mesh)
                if (o = e.index) {
                    var h;
                    if (o.array instanceof Uint32Array ? (l = G.UNSIGNED_INT,
                    h = 4) : (l = G.UNSIGNED_SHORT,
                    h = 2),
                    n = n.offsets,
                    0 === n.length)
                        i && (a(r, t, e, 0),
                        G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, o.buffer)),
                        G.drawElements(G.TRIANGLES, o.array.length, l, 0),
                        Q.info.render.calls++,
                        Q.info.render.vertices += o.array.length,
                        Q.info.render.faces += o.array.length / 3;
                    else {
                        i = !0;
                        for (var c = 0, u = n.length; u > c; c++) {
                            var p = n[c].index;
                            i && (a(r, t, e, p),
                            G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, o.buffer)),
                            G.drawElements(G.TRIANGLES, n[c].count, l, n[c].start * h),
                            Q.info.render.calls++,
                            Q.info.render.vertices += n[c].count,
                            Q.info.render.faces += n[c].count / 3
                        }
                    }
                } else
                    i && a(r, t, e, 0),
                    r = n.attributes.position,
                    G.drawArrays(G.TRIANGLES, 0, r.array.length / 3),
                    Q.info.render.calls++,
                    Q.info.render.vertices += r.array.length / 3,
                    Q.info.render.faces += r.array.length / 9;
            else if (o instanceof THREE.ParticleSystem)
                i && a(r, t, e, 0),
                r = e.position,
                G.drawArrays(G.POINTS, 0, r.array.length / 3),
                Q.info.render.calls++,
                Q.info.render.points += r.array.length / 3;
            else if (o instanceof THREE.Line)
                if (l = o.type === THREE.LineStrip ? G.LINE_STRIP : G.LINES,
                H(r.linewidth),
                o = e.index)
                    if (o.array instanceof Uint32Array ? (l = G.UNSIGNED_INT,
                    h = 4) : (l = G.UNSIGNED_SHORT,
                    h = 2),
                    n = n.offsets,
                    0 === n.length)
                        i && (a(r, t, e, 0),
                        G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, o.buffer)),
                        G.drawElements(G.LINES, o.array.length, l, 0),
                        Q.info.render.calls++,
                        Q.info.render.vertices += o.array.length;
                    else
                        for (1 < n.length && (i = !0),
                        c = 0,
                        u = n.length; u > c; c++)
                            p = n[c].index,
                            i && (a(r, t, e, p),
                            G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, o.buffer)),
                            G.drawElements(G.LINES, n[c].count, l, n[c].start * h),
                            Q.info.render.calls++,
                            Q.info.render.vertices += n[c].count;
                else
                    i && a(r, t, e, 0),
                    r = e.position,
                    G.drawArrays(l, 0, r.array.length / 3),
                    Q.info.render.calls++,
                    Q.info.render.points += r.array.length / 3
        }
    }
    ,
    this.renderBuffer = function(t, e, i, r, n, o) {
        if (!1 !== r.visible) {
            var a, c;
            if (i = T(t, e, i, r, o),
            e = i.attributes,
            t = !1,
            i = 16777215 * n.id + 2 * i.id + (r.wireframe ? 1 : 0),
            i !== et && (et = i,
            t = !0),
            t && s(),
            !r.morphTargets && 0 <= e.position)
                t && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglVertexBuffer),
                l(e.position),
                G.vertexAttribPointer(e.position, 3, G.FLOAT, !1, 0, 0));
            else if (o.morphTargetBase) {
                if (i = r.program.attributes,
                -1 !== o.morphTargetBase && 0 <= i.position ? (G.bindBuffer(G.ARRAY_BUFFER, n.__webglMorphTargetsBuffers[o.morphTargetBase]),
                l(i.position),
                G.vertexAttribPointer(i.position, 3, G.FLOAT, !1, 0, 0)) : 0 <= i.position && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglVertexBuffer),
                l(i.position),
                G.vertexAttribPointer(i.position, 3, G.FLOAT, !1, 0, 0)),
                o.morphTargetForcedOrder.length) {
                    var p = 0;
                    for (c = o.morphTargetForcedOrder,
                    a = o.morphTargetInfluences; p < r.numSupportedMorphTargets && p < c.length; )
                        0 <= i["morphTarget" + p] && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglMorphTargetsBuffers[c[p]]),
                        l(i["morphTarget" + p]),
                        G.vertexAttribPointer(i["morphTarget" + p], 3, G.FLOAT, !1, 0, 0)),
                        0 <= i["morphNormal" + p] && r.morphNormals && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglMorphNormalsBuffers[c[p]]),
                        l(i["morphNormal" + p]),
                        G.vertexAttribPointer(i["morphNormal" + p], 3, G.FLOAT, !1, 0, 0)),
                        o.__webglMorphTargetInfluences[p] = a[c[p]],
                        p++
                } else {
                    c = [],
                    a = o.morphTargetInfluences;
                    var d, f = a.length;
                    for (d = 0; f > d; d++)
                        p = a[d],
                        p > 0 && c.push([p, d]);
                    for (c.length > r.numSupportedMorphTargets ? (c.sort(u),
                    c.length = r.numSupportedMorphTargets) : c.length > r.numSupportedMorphNormals ? c.sort(u) : 0 === c.length && c.push([0, 0]),
                    p = 0; p < r.numSupportedMorphTargets; )
                        c[p] ? (d = c[p][1],
                        0 <= i["morphTarget" + p] && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglMorphTargetsBuffers[d]),
                        l(i["morphTarget" + p]),
                        G.vertexAttribPointer(i["morphTarget" + p], 3, G.FLOAT, !1, 0, 0)),
                        0 <= i["morphNormal" + p] && r.morphNormals && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglMorphNormalsBuffers[d]),
                        l(i["morphNormal" + p]),
                        G.vertexAttribPointer(i["morphNormal" + p], 3, G.FLOAT, !1, 0, 0)),
                        o.__webglMorphTargetInfluences[p] = a[d]) : o.__webglMorphTargetInfluences[p] = 0,
                        p++
                }
                null  !== r.program.uniforms.morphTargetInfluences && G.uniform1fv(r.program.uniforms.morphTargetInfluences, o.__webglMorphTargetInfluences)
            }
            if (t) {
                if (n.__webglCustomAttributesList)
                    for (a = 0,
                    c = n.__webglCustomAttributesList.length; c > a; a++)
                        i = n.__webglCustomAttributesList[a],
                        0 <= e[i.buffer.belongsToAttribute] && (G.bindBuffer(G.ARRAY_BUFFER, i.buffer),
                        l(e[i.buffer.belongsToAttribute]),
                        G.vertexAttribPointer(e[i.buffer.belongsToAttribute], i.size, G.FLOAT, !1, 0, 0));
                0 <= e.color && (0 < o.geometry.colors.length || 0 < o.geometry.faces.length ? (G.bindBuffer(G.ARRAY_BUFFER, n.__webglColorBuffer),
                l(e.color),
                G.vertexAttribPointer(e.color, 3, G.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && G.vertexAttrib3fv(e.color, r.defaultAttributeValues.color)),
                0 <= e.normal && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglNormalBuffer),
                l(e.normal),
                G.vertexAttribPointer(e.normal, 3, G.FLOAT, !1, 0, 0)),
                0 <= e.tangent && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglTangentBuffer),
                l(e.tangent),
                G.vertexAttribPointer(e.tangent, 4, G.FLOAT, !1, 0, 0)),
                0 <= e.uv && (o.geometry.faceVertexUvs[0] ? (G.bindBuffer(G.ARRAY_BUFFER, n.__webglUVBuffer),
                l(e.uv),
                G.vertexAttribPointer(e.uv, 2, G.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && G.vertexAttrib2fv(e.uv, r.defaultAttributeValues.uv)),
                0 <= e.uv2 && (o.geometry.faceVertexUvs[1] ? (G.bindBuffer(G.ARRAY_BUFFER, n.__webglUV2Buffer),
                l(e.uv2),
                G.vertexAttribPointer(e.uv2, 2, G.FLOAT, !1, 0, 0)) : r.defaultAttributeValues && G.vertexAttrib2fv(e.uv2, r.defaultAttributeValues.uv2)),
                r.skinning && 0 <= e.skinIndex && 0 <= e.skinWeight && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglSkinIndicesBuffer),
                l(e.skinIndex),
                G.vertexAttribPointer(e.skinIndex, 4, G.FLOAT, !1, 0, 0),
                G.bindBuffer(G.ARRAY_BUFFER, n.__webglSkinWeightsBuffer),
                l(e.skinWeight),
                G.vertexAttribPointer(e.skinWeight, 4, G.FLOAT, !1, 0, 0)),
                0 <= e.lineDistance && (G.bindBuffer(G.ARRAY_BUFFER, n.__webglLineDistanceBuffer),
                l(e.lineDistance),
                G.vertexAttribPointer(e.lineDistance, 1, G.FLOAT, !1, 0, 0))
            }
            h(),
            o instanceof THREE.Mesh ? (o = n.__typeArray === Uint32Array ? G.UNSIGNED_INT : G.UNSIGNED_SHORT,
            r.wireframe ? (H(r.wireframeLinewidth),
            t && G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, n.__webglLineBuffer),
            G.drawElements(G.LINES, n.__webglLineCount, o, 0)) : (t && G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, n.__webglFaceBuffer),
            G.drawElements(G.TRIANGLES, n.__webglFaceCount, o, 0)),
            Q.info.render.calls++,
            Q.info.render.vertices += n.__webglFaceCount,
            Q.info.render.faces += n.__webglFaceCount / 3) : o instanceof THREE.Line ? (o = o.type === THREE.LineStrip ? G.LINE_STRIP : G.LINES,
            H(r.linewidth),
            G.drawArrays(o, 0, n.__webglLineCount),
            Q.info.render.calls++) : o instanceof THREE.ParticleSystem && (G.drawArrays(G.POINTS, 0, n.__webglParticleCount),
            Q.info.render.calls++,
            Q.info.render.points += n.__webglParticleCount)
        }
    }
    ,
    this.render = function(t, e, i, r) {
        if (!1 == e instanceof THREE.Camera)
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        else {
            var n, o, a, s, l = t.__lights, h = t.fog;
            for (tt = -1,
            Ct = !0,
            !0 === t.autoUpdate && t.updateMatrixWorld(),
            void 0 === e.parent && e.updateMatrixWorld(),
            e.matrixWorldInverse.getInverse(e.matrixWorld),
            Rt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
            bt.setFromMatrix(Rt),
            this.autoUpdateObjects && this.initWebGLObjects(t),
            p(this.renderPluginsPre, t, e),
            Q.info.render.calls = 0,
            Q.info.render.vertices = 0,
            Q.info.render.faces = 0,
            Q.info.render.points = 0,
            this.setRenderTarget(i),
            (this.autoClear || r) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
            s = t.__webglObjects,
            r = 0,
            n = s.length; n > r; r++)
                if (o = s[r],
                a = o.object,
                o.id = r,
                o.render = !1,
                a.visible && (!(a instanceof THREE.Mesh || a instanceof THREE.ParticleSystem) || !a.frustumCulled || bt.intersectsObject(a))) {
                    var u = a;
                    u._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, u.matrixWorld),
                    u._normalMatrix.getNormalMatrix(u._modelViewMatrix);
                    var u = o
                      , m = u.object
                      , g = u.buffer
                      , E = m.geometry
                      , m = m.material;
                    m instanceof THREE.MeshFaceMaterial ? (m = m.materials[E instanceof THREE.BufferGeometry ? 0 : g.materialIndex],
                    m.transparent ? (u.transparent = m,
                    u.opaque = null ) : (u.opaque = m,
                    u.transparent = null )) : m && (m.transparent ? (u.transparent = m,
                    u.opaque = null ) : (u.opaque = m,
                    u.transparent = null )),
                    o.render = !0,
                    !0 === this.sortObjects && (null  !== a.renderDepth ? o.z = a.renderDepth : (St.setFromMatrixPosition(a.matrixWorld),
                    St.applyProjection(Rt),
                    o.z = St.z))
                }
            for (this.sortObjects && s.sort(c),
            s = t.__webglObjectsImmediate,
            r = 0,
            n = s.length; n > r; r++)
                o = s[r],
                a = o.object,
                a.visible && (a._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, a.matrixWorld),
                a._normalMatrix.getNormalMatrix(a._modelViewMatrix),
                a = o.object.material,
                a.transparent ? (o.transparent = a,
                o.opaque = null ) : (o.opaque = a,
                o.transparent = null ));
            t.overrideMaterial ? (r = t.overrideMaterial,
            this.setBlending(r.blending, r.blendEquation, r.blendSrc, r.blendDst),
            this.setDepthTest(r.depthTest),
            this.setDepthWrite(r.depthWrite),
            S(r.polygonOffset, r.polygonOffsetFactor, r.polygonOffsetUnits),
            d(t.__webglObjects, !1, "", e, l, h, !0, r),
            f(t.__webglObjectsImmediate, "", e, l, h, !1, r)) : (r = null ,
            this.setBlending(THREE.NoBlending),
            d(t.__webglObjects, !0, "opaque", e, l, h, !1, r),
            f(t.__webglObjectsImmediate, "opaque", e, l, h, !1, r),
            d(t.__webglObjects, !1, "transparent", e, l, h, !0, r),
            f(t.__webglObjectsImmediate, "transparent", e, l, h, !0, r)),
            p(this.renderPluginsPost, t, e),
            i && i.generateMipmaps && i.minFilter !== THREE.NearestFilter && i.minFilter !== THREE.LinearFilter && (i instanceof THREE.WebGLRenderTargetCube ? (G.bindTexture(G.TEXTURE_CUBE_MAP, i.__webglTexture),
            G.generateMipmap(G.TEXTURE_CUBE_MAP),
            G.bindTexture(G.TEXTURE_CUBE_MAP, null )) : (G.bindTexture(G.TEXTURE_2D, i.__webglTexture),
            G.generateMipmap(G.TEXTURE_2D),
            G.bindTexture(G.TEXTURE_2D, null ))),
            this.setDepthTest(!0),
            this.setDepthWrite(!0)
        }
    }
    ,
    this.renderImmediateObject = function(t, e, i, r, n) {
        var o = T(t, e, i, r, n);
        et = -1,
        Q.setMaterialFaces(r),
        n.immediateRenderCallback ? n.immediateRenderCallback(o, G, bt) : n.render(function(t) {
            Q.renderBufferImmediate(t, o, r)
        }
        )
    }
    ,
    this.initWebGLObjects = function(t) {
        for (t.__webglObjects || (t.__webglObjects = [],
        t.__webglObjectsImmediate = [],
        t.__webglSprites = [],
        t.__webglFlares = []); t.__objectsAdded.length; )
            m(t.__objectsAdded[0], t),
            t.__objectsAdded.splice(0, 1);
        for (; t.__objectsRemoved.length; )
            v(t.__objectsRemoved[0], t),
            t.__objectsRemoved.splice(0, 1);
        for (var e = 0, a = t.__webglObjects.length; a > e; e++) {
            var s = t.__webglObjects[e].object;
            void 0 === s.__webglInit && (void 0 !== s.__webglActive && v(s, t),
            m(s, t));
            var l = s
              , h = l.geometry
              , c = void 0
              , p = void 0
              , d = void 0;
            if (h instanceof THREE.BufferGeometry) {
                var f = G.DYNAMIC_DRAW
                  , g = h.attributes
                  , _ = void 0
                  , x = void 0;
                for (_ in g)
                    x = g[_],
                    x.needsUpdate && ("index" === _ ? (G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, x.buffer),
                    G.bufferData(G.ELEMENT_ARRAY_BUFFER, x.array, f)) : (G.bindBuffer(G.ARRAY_BUFFER, x.buffer),
                    G.bufferData(G.ARRAY_BUFFER, x.array, f)),
                    x.needsUpdate = !1)
            } else if (l instanceof THREE.Mesh) {
                for (var T = 0, w = h.geometryGroupsList.length; w > T; T++)
                    if (c = h.geometryGroupsList[T],
                    d = r(l, c),
                    h.buffersNeedUpdate && i(c, l),
                    p = d.attributes && E(d),
                    h.verticesNeedUpdate || h.morphTargetsNeedUpdate || h.elementsNeedUpdate || h.uvsNeedUpdate || h.normalsNeedUpdate || h.colorsNeedUpdate || h.tangentsNeedUpdate || p) {
                        var b = c
                          , R = l
                          , H = G.DYNAMIC_DRAW
                          , S = !h.dynamic
                          , M = d;
                        if (b.__inittedArrays) {
                            var C = n(M)
                              , A = M.vertexColors ? M.vertexColors : !1
                              , P = o(M)
                              , L = C === THREE.SmoothShading
                              , D = void 0
                              , k = void 0
                              , O = void 0
                              , F = void 0
                              , N = void 0
                              , z = void 0
                              , V = void 0
                              , I = void 0
                              , U = void 0
                              , B = void 0
                              , j = void 0
                              , W = void 0
                              , X = void 0
                              , q = void 0
                              , Y = void 0
                              , $ = void 0
                              , Q = void 0
                              , K = void 0
                              , Z = void 0
                              , J = void 0
                              , tt = void 0
                              , et = void 0
                              , it = void 0
                              , rt = void 0
                              , nt = void 0
                              , ot = void 0
                              , at = void 0
                              , st = void 0
                              , lt = void 0
                              , ht = void 0
                              , ct = void 0
                              , ut = void 0
                              , pt = void 0
                              , dt = void 0
                              , ft = void 0
                              , mt = void 0
                              , gt = void 0
                              , Et = void 0
                              , yt = void 0
                              , vt = void 0
                              , _t = 0
                              , xt = 0
                              , Tt = 0
                              , wt = 0
                              , bt = 0
                              , Mt = 0
                              , Ct = 0
                              , At = 0
                              , Pt = 0
                              , Lt = 0
                              , Dt = 0
                              , kt = 0
                              , Ot = void 0
                              , Ft = b.__vertexArray
                              , Nt = b.__uvArray
                              , zt = b.__uv2Array
                              , Vt = b.__normalArray
                              , It = b.__tangentArray
                              , Ut = b.__colorArray
                              , Bt = b.__skinIndexArray
                              , jt = b.__skinWeightArray
                              , Gt = b.__morphTargetsArrays
                              , Wt = b.__morphNormalsArrays
                              , Xt = b.__webglCustomAttributesList
                              , qt = void 0
                              , Yt = b.__faceArray
                              , $t = b.__lineArray
                              , Qt = R.geometry
                              , Kt = Qt.elementsNeedUpdate
                              , Zt = Qt.uvsNeedUpdate
                              , Jt = Qt.normalsNeedUpdate
                              , te = Qt.tangentsNeedUpdate
                              , ee = Qt.colorsNeedUpdate
                              , ie = Qt.morphTargetsNeedUpdate
                              , re = Qt.vertices
                              , ne = b.faces3
                              , oe = Qt.faces
                              , ae = Qt.faceVertexUvs[0]
                              , se = Qt.faceVertexUvs[1]
                              , le = Qt.skinIndices
                              , he = Qt.skinWeights
                              , ce = Qt.morphTargets
                              , ue = Qt.morphNormals;
                            if (Qt.verticesNeedUpdate) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    F = oe[ne[D]],
                                    W = re[F.a],
                                    X = re[F.b],
                                    q = re[F.c],
                                    Ft[xt] = W.x,
                                    Ft[xt + 1] = W.y,
                                    Ft[xt + 2] = W.z,
                                    Ft[xt + 3] = X.x,
                                    Ft[xt + 4] = X.y,
                                    Ft[xt + 5] = X.z,
                                    Ft[xt + 6] = q.x,
                                    Ft[xt + 7] = q.y,
                                    Ft[xt + 8] = q.z,
                                    xt += 9;
                                G.bindBuffer(G.ARRAY_BUFFER, b.__webglVertexBuffer),
                                G.bufferData(G.ARRAY_BUFFER, Ft, H)
                            }
                            if (ie)
                                for (ft = 0,
                                mt = ce.length; mt > ft; ft++) {
                                    for (D = Dt = 0,
                                    k = ne.length; k > D; D++)
                                        yt = ne[D],
                                        F = oe[yt],
                                        W = ce[ft].vertices[F.a],
                                        X = ce[ft].vertices[F.b],
                                        q = ce[ft].vertices[F.c],
                                        gt = Gt[ft],
                                        gt[Dt] = W.x,
                                        gt[Dt + 1] = W.y,
                                        gt[Dt + 2] = W.z,
                                        gt[Dt + 3] = X.x,
                                        gt[Dt + 4] = X.y,
                                        gt[Dt + 5] = X.z,
                                        gt[Dt + 6] = q.x,
                                        gt[Dt + 7] = q.y,
                                        gt[Dt + 8] = q.z,
                                        M.morphNormals && (L ? (vt = ue[ft].vertexNormals[yt],
                                        K = vt.a,
                                        Z = vt.b,
                                        J = vt.c) : J = Z = K = ue[ft].faceNormals[yt],
                                        Et = Wt[ft],
                                        Et[Dt] = K.x,
                                        Et[Dt + 1] = K.y,
                                        Et[Dt + 2] = K.z,
                                        Et[Dt + 3] = Z.x,
                                        Et[Dt + 4] = Z.y,
                                        Et[Dt + 5] = Z.z,
                                        Et[Dt + 6] = J.x,
                                        Et[Dt + 7] = J.y,
                                        Et[Dt + 8] = J.z),
                                        Dt += 9;
                                    G.bindBuffer(G.ARRAY_BUFFER, b.__webglMorphTargetsBuffers[ft]),
                                    G.bufferData(G.ARRAY_BUFFER, Gt[ft], H),
                                    M.morphNormals && (G.bindBuffer(G.ARRAY_BUFFER, b.__webglMorphNormalsBuffers[ft]),
                                    G.bufferData(G.ARRAY_BUFFER, Wt[ft], H))
                                }
                            if (he.length) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    F = oe[ne[D]],
                                    rt = he[F.a],
                                    nt = he[F.b],
                                    ot = he[F.c],
                                    jt[Lt] = rt.x,
                                    jt[Lt + 1] = rt.y,
                                    jt[Lt + 2] = rt.z,
                                    jt[Lt + 3] = rt.w,
                                    jt[Lt + 4] = nt.x,
                                    jt[Lt + 5] = nt.y,
                                    jt[Lt + 6] = nt.z,
                                    jt[Lt + 7] = nt.w,
                                    jt[Lt + 8] = ot.x,
                                    jt[Lt + 9] = ot.y,
                                    jt[Lt + 10] = ot.z,
                                    jt[Lt + 11] = ot.w,
                                    at = le[F.a],
                                    st = le[F.b],
                                    lt = le[F.c],
                                    Bt[Lt] = at.x,
                                    Bt[Lt + 1] = at.y,
                                    Bt[Lt + 2] = at.z,
                                    Bt[Lt + 3] = at.w,
                                    Bt[Lt + 4] = st.x,
                                    Bt[Lt + 5] = st.y,
                                    Bt[Lt + 6] = st.z,
                                    Bt[Lt + 7] = st.w,
                                    Bt[Lt + 8] = lt.x,
                                    Bt[Lt + 9] = lt.y,
                                    Bt[Lt + 10] = lt.z,
                                    Bt[Lt + 11] = lt.w,
                                    Lt += 12;
                                Lt > 0 && (G.bindBuffer(G.ARRAY_BUFFER, b.__webglSkinIndicesBuffer),
                                G.bufferData(G.ARRAY_BUFFER, Bt, H),
                                G.bindBuffer(G.ARRAY_BUFFER, b.__webglSkinWeightsBuffer),
                                G.bufferData(G.ARRAY_BUFFER, jt, H))
                            }
                            if (ee && A) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    F = oe[ne[D]],
                                    V = F.vertexColors,
                                    I = F.color,
                                    3 === V.length && A === THREE.VertexColors ? (tt = V[0],
                                    et = V[1],
                                    it = V[2]) : it = et = tt = I,
                                    Ut[Pt] = tt.r,
                                    Ut[Pt + 1] = tt.g,
                                    Ut[Pt + 2] = tt.b,
                                    Ut[Pt + 3] = et.r,
                                    Ut[Pt + 4] = et.g,
                                    Ut[Pt + 5] = et.b,
                                    Ut[Pt + 6] = it.r,
                                    Ut[Pt + 7] = it.g,
                                    Ut[Pt + 8] = it.b,
                                    Pt += 9;
                                Pt > 0 && (G.bindBuffer(G.ARRAY_BUFFER, b.__webglColorBuffer),
                                G.bufferData(G.ARRAY_BUFFER, Ut, H))
                            }
                            if (te && Qt.hasTangents) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    F = oe[ne[D]],
                                    U = F.vertexTangents,
                                    Y = U[0],
                                    $ = U[1],
                                    Q = U[2],
                                    It[Ct] = Y.x,
                                    It[Ct + 1] = Y.y,
                                    It[Ct + 2] = Y.z,
                                    It[Ct + 3] = Y.w,
                                    It[Ct + 4] = $.x,
                                    It[Ct + 5] = $.y,
                                    It[Ct + 6] = $.z,
                                    It[Ct + 7] = $.w,
                                    It[Ct + 8] = Q.x,
                                    It[Ct + 9] = Q.y,
                                    It[Ct + 10] = Q.z,
                                    It[Ct + 11] = Q.w,
                                    Ct += 12;
                                G.bindBuffer(G.ARRAY_BUFFER, b.__webglTangentBuffer),
                                G.bufferData(G.ARRAY_BUFFER, It, H)
                            }
                            if (Jt && C) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    if (F = oe[ne[D]],
                                    N = F.vertexNormals,
                                    z = F.normal,
                                    3 === N.length && L)
                                        for (ht = 0; 3 > ht; ht++)
                                            ut = N[ht],
                                            Vt[Mt] = ut.x,
                                            Vt[Mt + 1] = ut.y,
                                            Vt[Mt + 2] = ut.z,
                                            Mt += 3;
                                    else
                                        for (ht = 0; 3 > ht; ht++)
                                            Vt[Mt] = z.x,
                                            Vt[Mt + 1] = z.y,
                                            Vt[Mt + 2] = z.z,
                                            Mt += 3;
                                G.bindBuffer(G.ARRAY_BUFFER, b.__webglNormalBuffer),
                                G.bufferData(G.ARRAY_BUFFER, Vt, H)
                            }
                            if (Zt && ae && P) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    if (O = ne[D],
                                    B = ae[O],
                                    void 0 !== B)
                                        for (ht = 0; 3 > ht; ht++)
                                            pt = B[ht],
                                            Nt[Tt] = pt.x,
                                            Nt[Tt + 1] = pt.y,
                                            Tt += 2;
                                Tt > 0 && (G.bindBuffer(G.ARRAY_BUFFER, b.__webglUVBuffer),
                                G.bufferData(G.ARRAY_BUFFER, Nt, H))
                            }
                            if (Zt && se && P) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    if (O = ne[D],
                                    j = se[O],
                                    void 0 !== j)
                                        for (ht = 0; 3 > ht; ht++)
                                            dt = j[ht],
                                            zt[wt] = dt.x,
                                            zt[wt + 1] = dt.y,
                                            wt += 2;
                                wt > 0 && (G.bindBuffer(G.ARRAY_BUFFER, b.__webglUV2Buffer),
                                G.bufferData(G.ARRAY_BUFFER, zt, H))
                            }
                            if (Kt) {
                                for (D = 0,
                                k = ne.length; k > D; D++)
                                    Yt[bt] = _t,
                                    Yt[bt + 1] = _t + 1,
                                    Yt[bt + 2] = _t + 2,
                                    bt += 3,
                                    $t[At] = _t,
                                    $t[At + 1] = _t + 1,
                                    $t[At + 2] = _t,
                                    $t[At + 3] = _t + 2,
                                    $t[At + 4] = _t + 1,
                                    $t[At + 5] = _t + 2,
                                    At += 6,
                                    _t += 3;
                                G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, b.__webglFaceBuffer),
                                G.bufferData(G.ELEMENT_ARRAY_BUFFER, Yt, H),
                                G.bindBuffer(G.ELEMENT_ARRAY_BUFFER, b.__webglLineBuffer),
                                G.bufferData(G.ELEMENT_ARRAY_BUFFER, $t, H)
                            }
                            if (Xt)
                                for (ht = 0,
                                ct = Xt.length; ct > ht; ht++)
                                    if (qt = Xt[ht],
                                    qt.__original.needsUpdate) {
                                        if (kt = 0,
                                        1 === qt.size) {
                                            if (void 0 === qt.boundTo || "vertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    F = oe[ne[D]],
                                                    qt.array[kt] = qt.value[F.a],
                                                    qt.array[kt + 1] = qt.value[F.b],
                                                    qt.array[kt + 2] = qt.value[F.c],
                                                    kt += 3;
                                            else if ("faces" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    Ot = qt.value[ne[D]],
                                                    qt.array[kt] = Ot,
                                                    qt.array[kt + 1] = Ot,
                                                    qt.array[kt + 2] = Ot,
                                                    kt += 3
                                        } else if (2 === qt.size) {
                                            if (void 0 === qt.boundTo || "vertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    F = oe[ne[D]],
                                                    W = qt.value[F.a],
                                                    X = qt.value[F.b],
                                                    q = qt.value[F.c],
                                                    qt.array[kt] = W.x,
                                                    qt.array[kt + 1] = W.y,
                                                    qt.array[kt + 2] = X.x,
                                                    qt.array[kt + 3] = X.y,
                                                    qt.array[kt + 4] = q.x,
                                                    qt.array[kt + 5] = q.y,
                                                    kt += 6;
                                            else if ("faces" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    q = X = W = Ot = qt.value[ne[D]],
                                                    qt.array[kt] = W.x,
                                                    qt.array[kt + 1] = W.y,
                                                    qt.array[kt + 2] = X.x,
                                                    qt.array[kt + 3] = X.y,
                                                    qt.array[kt + 4] = q.x,
                                                    qt.array[kt + 5] = q.y,
                                                    kt += 6
                                        } else if (3 === qt.size) {
                                            var pe;
                                            if (pe = "c" === qt.type ? ["r", "g", "b"] : ["x", "y", "z"],
                                            void 0 === qt.boundTo || "vertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    F = oe[ne[D]],
                                                    W = qt.value[F.a],
                                                    X = qt.value[F.b],
                                                    q = qt.value[F.c],
                                                    qt.array[kt] = W[pe[0]],
                                                    qt.array[kt + 1] = W[pe[1]],
                                                    qt.array[kt + 2] = W[pe[2]],
                                                    qt.array[kt + 3] = X[pe[0]],
                                                    qt.array[kt + 4] = X[pe[1]],
                                                    qt.array[kt + 5] = X[pe[2]],
                                                    qt.array[kt + 6] = q[pe[0]],
                                                    qt.array[kt + 7] = q[pe[1]],
                                                    qt.array[kt + 8] = q[pe[2]],
                                                    kt += 9;
                                            else if ("faces" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    q = X = W = Ot = qt.value[ne[D]],
                                                    qt.array[kt] = W[pe[0]],
                                                    qt.array[kt + 1] = W[pe[1]],
                                                    qt.array[kt + 2] = W[pe[2]],
                                                    qt.array[kt + 3] = X[pe[0]],
                                                    qt.array[kt + 4] = X[pe[1]],
                                                    qt.array[kt + 5] = X[pe[2]],
                                                    qt.array[kt + 6] = q[pe[0]],
                                                    qt.array[kt + 7] = q[pe[1]],
                                                    qt.array[kt + 8] = q[pe[2]],
                                                    kt += 9;
                                            else if ("faceVertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    Ot = qt.value[ne[D]],
                                                    W = Ot[0],
                                                    X = Ot[1],
                                                    q = Ot[2],
                                                    qt.array[kt] = W[pe[0]],
                                                    qt.array[kt + 1] = W[pe[1]],
                                                    qt.array[kt + 2] = W[pe[2]],
                                                    qt.array[kt + 3] = X[pe[0]],
                                                    qt.array[kt + 4] = X[pe[1]],
                                                    qt.array[kt + 5] = X[pe[2]],
                                                    qt.array[kt + 6] = q[pe[0]],
                                                    qt.array[kt + 7] = q[pe[1]],
                                                    qt.array[kt + 8] = q[pe[2]],
                                                    kt += 9
                                        } else if (4 === qt.size)
                                            if (void 0 === qt.boundTo || "vertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    F = oe[ne[D]],
                                                    W = qt.value[F.a],
                                                    X = qt.value[F.b],
                                                    q = qt.value[F.c],
                                                    qt.array[kt] = W.x,
                                                    qt.array[kt + 1] = W.y,
                                                    qt.array[kt + 2] = W.z,
                                                    qt.array[kt + 3] = W.w,
                                                    qt.array[kt + 4] = X.x,
                                                    qt.array[kt + 5] = X.y,
                                                    qt.array[kt + 6] = X.z,
                                                    qt.array[kt + 7] = X.w,
                                                    qt.array[kt + 8] = q.x,
                                                    qt.array[kt + 9] = q.y,
                                                    qt.array[kt + 10] = q.z,
                                                    qt.array[kt + 11] = q.w,
                                                    kt += 12;
                                            else if ("faces" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    q = X = W = Ot = qt.value[ne[D]],
                                                    qt.array[kt] = W.x,
                                                    qt.array[kt + 1] = W.y,
                                                    qt.array[kt + 2] = W.z,
                                                    qt.array[kt + 3] = W.w,
                                                    qt.array[kt + 4] = X.x,
                                                    qt.array[kt + 5] = X.y,
                                                    qt.array[kt + 6] = X.z,
                                                    qt.array[kt + 7] = X.w,
                                                    qt.array[kt + 8] = q.x,
                                                    qt.array[kt + 9] = q.y,
                                                    qt.array[kt + 10] = q.z,
                                                    qt.array[kt + 11] = q.w,
                                                    kt += 12;
                                            else if ("faceVertices" === qt.boundTo)
                                                for (D = 0,
                                                k = ne.length; k > D; D++)
                                                    Ot = qt.value[ne[D]],
                                                    W = Ot[0],
                                                    X = Ot[1],
                                                    q = Ot[2],
                                                    qt.array[kt] = W.x,
                                                    qt.array[kt + 1] = W.y,
                                                    qt.array[kt + 2] = W.z,
                                                    qt.array[kt + 3] = W.w,
                                                    qt.array[kt + 4] = X.x,
                                                    qt.array[kt + 5] = X.y,
                                                    qt.array[kt + 6] = X.z,
                                                    qt.array[kt + 7] = X.w,
                                                    qt.array[kt + 8] = q.x,
                                                    qt.array[kt + 9] = q.y,
                                                    qt.array[kt + 10] = q.z,
                                                    qt.array[kt + 11] = q.w,
                                                    kt += 12;
                                        G.bindBuffer(G.ARRAY_BUFFER, qt.buffer),
                                        G.bufferData(G.ARRAY_BUFFER, qt.array, H)
                                    }
                            S && (delete b.__inittedArrays,
                            delete b.__colorArray,
                            delete b.__normalArray,
                            delete b.__tangentArray,
                            delete b.__uvArray,
                            delete b.__uv2Array,
                            delete b.__faceArray,
                            delete b.__vertexArray,
                            delete b.__lineArray,
                            delete b.__skinIndexArray,
                            delete b.__skinWeightArray)
                        }
                    }
                h.verticesNeedUpdate = !1,
                h.morphTargetsNeedUpdate = !1,
                h.elementsNeedUpdate = !1,
                h.uvsNeedUpdate = !1,
                h.normalsNeedUpdate = !1,
                h.colorsNeedUpdate = !1,
                h.tangentsNeedUpdate = !1,
                h.buffersNeedUpdate = !1,
                d.attributes && y(d)
            } else if (l instanceof THREE.Line) {
                if (d = r(l, h),
                p = d.attributes && E(d),
                h.verticesNeedUpdate || h.colorsNeedUpdate || h.lineDistancesNeedUpdate || p) {
                    var de = h
                      , fe = G.DYNAMIC_DRAW
                      , me = void 0
                      , ge = void 0
                      , Ee = void 0
                      , ye = void 0
                      , ve = void 0
                      , _e = void 0
                      , xe = de.vertices
                      , Te = de.colors
                      , we = de.lineDistances
                      , be = xe.length
                      , Re = Te.length
                      , He = we.length
                      , Se = de.__vertexArray
                      , Me = de.__colorArray
                      , Ce = de.__lineDistanceArray
                      , Ae = de.colorsNeedUpdate
                      , Pe = de.lineDistancesNeedUpdate
                      , Le = de.__webglCustomAttributesList
                      , De = void 0
                      , ke = void 0
                      , Oe = void 0
                      , Fe = void 0
                      , Ne = void 0
                      , ze = void 0;
                    if (de.verticesNeedUpdate) {
                        for (me = 0; be > me; me++)
                            ye = xe[me],
                            ve = 3 * me,
                            Se[ve] = ye.x,
                            Se[ve + 1] = ye.y,
                            Se[ve + 2] = ye.z;
                        G.bindBuffer(G.ARRAY_BUFFER, de.__webglVertexBuffer),
                        G.bufferData(G.ARRAY_BUFFER, Se, fe)
                    }
                    if (Ae) {
                        for (ge = 0; Re > ge; ge++)
                            _e = Te[ge],
                            ve = 3 * ge,
                            Me[ve] = _e.r,
                            Me[ve + 1] = _e.g,
                            Me[ve + 2] = _e.b;
                        G.bindBuffer(G.ARRAY_BUFFER, de.__webglColorBuffer),
                        G.bufferData(G.ARRAY_BUFFER, Me, fe)
                    }
                    if (Pe) {
                        for (Ee = 0; He > Ee; Ee++)
                            Ce[Ee] = we[Ee];
                        G.bindBuffer(G.ARRAY_BUFFER, de.__webglLineDistanceBuffer),
                        G.bufferData(G.ARRAY_BUFFER, Ce, fe)
                    }
                    if (Le)
                        for (De = 0,
                        ke = Le.length; ke > De; De++)
                            if (ze = Le[De],
                            ze.needsUpdate && (void 0 === ze.boundTo || "vertices" === ze.boundTo)) {
                                if (ve = 0,
                                Fe = ze.value.length,
                                1 === ze.size)
                                    for (Oe = 0; Fe > Oe; Oe++)
                                        ze.array[Oe] = ze.value[Oe];
                                else if (2 === ze.size)
                                    for (Oe = 0; Fe > Oe; Oe++)
                                        Ne = ze.value[Oe],
                                        ze.array[ve] = Ne.x,
                                        ze.array[ve + 1] = Ne.y,
                                        ve += 2;
                                else if (3 === ze.size)
                                    if ("c" === ze.type)
                                        for (Oe = 0; Fe > Oe; Oe++)
                                            Ne = ze.value[Oe],
                                            ze.array[ve] = Ne.r,
                                            ze.array[ve + 1] = Ne.g,
                                            ze.array[ve + 2] = Ne.b,
                                            ve += 3;
                                    else
                                        for (Oe = 0; Fe > Oe; Oe++)
                                            Ne = ze.value[Oe],
                                            ze.array[ve] = Ne.x,
                                            ze.array[ve + 1] = Ne.y,
                                            ze.array[ve + 2] = Ne.z,
                                            ve += 3;
                                else if (4 === ze.size)
                                    for (Oe = 0; Fe > Oe; Oe++)
                                        Ne = ze.value[Oe],
                                        ze.array[ve] = Ne.x,
                                        ze.array[ve + 1] = Ne.y,
                                        ze.array[ve + 2] = Ne.z,
                                        ze.array[ve + 3] = Ne.w,
                                        ve += 4;
                                G.bindBuffer(G.ARRAY_BUFFER, ze.buffer),
                                G.bufferData(G.ARRAY_BUFFER, ze.array, fe)
                            }
                }
                h.verticesNeedUpdate = !1,
                h.colorsNeedUpdate = !1,
                h.lineDistancesNeedUpdate = !1,
                d.attributes && y(d)
            } else if (l instanceof THREE.ParticleSystem) {
                if (d = r(l, h),
                p = d.attributes && E(d),
                h.verticesNeedUpdate || h.colorsNeedUpdate || l.sortParticles || p) {
                    var Ve = h
                      , Ie = G.DYNAMIC_DRAW
                      , Ue = l
                      , Be = void 0
                      , je = void 0
                      , Ge = void 0
                      , We = void 0
                      , Xe = void 0
                      , qe = void 0
                      , Ye = Ve.vertices
                      , $e = Ye.length
                      , Qe = Ve.colors
                      , Ke = Qe.length
                      , Ze = Ve.__vertexArray
                      , Je = Ve.__colorArray
                      , ti = Ve.__sortArray
                      , ei = Ve.verticesNeedUpdate
                      , ii = Ve.colorsNeedUpdate
                      , ri = Ve.__webglCustomAttributesList
                      , ni = void 0
                      , oi = void 0
                      , ai = void 0
                      , si = void 0
                      , li = void 0
                      , hi = void 0;
                    if (Ue.sortParticles) {
                        for (Ht.copy(Rt),
                        Ht.multiply(Ue.matrixWorld),
                        Be = 0; $e > Be; Be++)
                            Ge = Ye[Be],
                            St.copy(Ge),
                            St.applyProjection(Ht),
                            ti[Be] = [St.z, Be];
                        for (ti.sort(u),
                        Be = 0; $e > Be; Be++)
                            Ge = Ye[ti[Be][1]],
                            We = 3 * Be,
                            Ze[We] = Ge.x,
                            Ze[We + 1] = Ge.y,
                            Ze[We + 2] = Ge.z;
                        for (je = 0; Ke > je; je++)
                            We = 3 * je,
                            qe = Qe[ti[je][1]],
                            Je[We] = qe.r,
                            Je[We + 1] = qe.g,
                            Je[We + 2] = qe.b;
                        if (ri)
                            for (ni = 0,
                            oi = ri.length; oi > ni; ni++)
                                if (hi = ri[ni],
                                void 0 === hi.boundTo || "vertices" === hi.boundTo)
                                    if (We = 0,
                                    si = hi.value.length,
                                    1 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            Xe = ti[ai][1],
                                            hi.array[ai] = hi.value[Xe];
                                    else if (2 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            Xe = ti[ai][1],
                                            li = hi.value[Xe],
                                            hi.array[We] = li.x,
                                            hi.array[We + 1] = li.y,
                                            We += 2;
                                    else if (3 === hi.size)
                                        if ("c" === hi.type)
                                            for (ai = 0; si > ai; ai++)
                                                Xe = ti[ai][1],
                                                li = hi.value[Xe],
                                                hi.array[We] = li.r,
                                                hi.array[We + 1] = li.g,
                                                hi.array[We + 2] = li.b,
                                                We += 3;
                                        else
                                            for (ai = 0; si > ai; ai++)
                                                Xe = ti[ai][1],
                                                li = hi.value[Xe],
                                                hi.array[We] = li.x,
                                                hi.array[We + 1] = li.y,
                                                hi.array[We + 2] = li.z,
                                                We += 3;
                                    else if (4 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            Xe = ti[ai][1],
                                            li = hi.value[Xe],
                                            hi.array[We] = li.x,
                                            hi.array[We + 1] = li.y,
                                            hi.array[We + 2] = li.z,
                                            hi.array[We + 3] = li.w,
                                            We += 4
                    } else {
                        if (ei)
                            for (Be = 0; $e > Be; Be++)
                                Ge = Ye[Be],
                                We = 3 * Be,
                                Ze[We] = Ge.x,
                                Ze[We + 1] = Ge.y,
                                Ze[We + 2] = Ge.z;
                        if (ii)
                            for (je = 0; Ke > je; je++)
                                qe = Qe[je],
                                We = 3 * je,
                                Je[We] = qe.r,
                                Je[We + 1] = qe.g,
                                Je[We + 2] = qe.b;
                        if (ri)
                            for (ni = 0,
                            oi = ri.length; oi > ni; ni++)
                                if (hi = ri[ni],
                                hi.needsUpdate && (void 0 === hi.boundTo || "vertices" === hi.boundTo))
                                    if (si = hi.value.length,
                                    We = 0,
                                    1 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            hi.array[ai] = hi.value[ai];
                                    else if (2 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            li = hi.value[ai],
                                            hi.array[We] = li.x,
                                            hi.array[We + 1] = li.y,
                                            We += 2;
                                    else if (3 === hi.size)
                                        if ("c" === hi.type)
                                            for (ai = 0; si > ai; ai++)
                                                li = hi.value[ai],
                                                hi.array[We] = li.r,
                                                hi.array[We + 1] = li.g,
                                                hi.array[We + 2] = li.b,
                                                We += 3;
                                        else
                                            for (ai = 0; si > ai; ai++)
                                                li = hi.value[ai],
                                                hi.array[We] = li.x,
                                                hi.array[We + 1] = li.y,
                                                hi.array[We + 2] = li.z,
                                                We += 3;
                                    else if (4 === hi.size)
                                        for (ai = 0; si > ai; ai++)
                                            li = hi.value[ai],
                                            hi.array[We] = li.x,
                                            hi.array[We + 1] = li.y,
                                            hi.array[We + 2] = li.z,
                                            hi.array[We + 3] = li.w,
                                            We += 4
                    }
                    if ((ei || Ue.sortParticles) && (G.bindBuffer(G.ARRAY_BUFFER, Ve.__webglVertexBuffer),
                    G.bufferData(G.ARRAY_BUFFER, Ze, Ie)),
                    (ii || Ue.sortParticles) && (G.bindBuffer(G.ARRAY_BUFFER, Ve.__webglColorBuffer),
                    G.bufferData(G.ARRAY_BUFFER, Je, Ie)),
                    ri)
                        for (ni = 0,
                        oi = ri.length; oi > ni; ni++)
                            hi = ri[ni],
                            (hi.needsUpdate || Ue.sortParticles) && (G.bindBuffer(G.ARRAY_BUFFER, hi.buffer),
                            G.bufferData(G.ARRAY_BUFFER, hi.array, Ie))
                }
                h.verticesNeedUpdate = !1,
                h.colorsNeedUpdate = !1,
                d.attributes && y(d)
            }
        }
    }
    ,
    this.initMaterial = function(t, e, i, r) {
        var n, o, a, s;
        t.addEventListener("dispose", Xt);
        var l, h, c, u;
        t instanceof THREE.MeshDepthMaterial ? u = "depth" : t instanceof THREE.MeshNormalMaterial ? u = "normal" : t instanceof THREE.MeshBasicMaterial ? u = "basic" : t instanceof THREE.MeshLambertMaterial ? u = "lambert" : t instanceof THREE.MeshPhongMaterial ? u = "phong" : t instanceof THREE.LineBasicMaterial ? u = "basic" : t instanceof THREE.LineDashedMaterial ? u = "dashed" : t instanceof THREE.ParticleSystemMaterial && (u = "particle_basic"),
        u && (n = THREE.ShaderLib[u],
        t.uniforms = THREE.UniformsUtils.clone(n.uniforms),
        t.vertexShader = n.vertexShader,
        t.fragmentShader = n.fragmentShader),
        c = s = a = o = n = 0;
        for (var p = e.length; p > c; c++) {
            var d = e[c];
            d.onlyShadow || !1 === d.visible || (d instanceof THREE.DirectionalLight && n++,
            d instanceof THREE.PointLight && o++,
            d instanceof THREE.SpotLight && a++,
            d instanceof THREE.HemisphereLight && s++)
        }
        for (p = c = 0,
        d = e.length; d > p; p++) {
            var f = e[p];
            f.castShadow && (f instanceof THREE.SpotLight && c++,
            f instanceof THREE.DirectionalLight && !f.shadowCascade && c++)
        }
        e = c,
        Ft && r && r.skeleton && r.skeleton.useVertexTexture ? c = 1024 : (c = G.getParameter(G.MAX_VERTEX_UNIFORM_VECTORS),
        c = Math.floor((c - 20) / 4),
        void 0 !== r && r instanceof THREE.SkinnedMesh && (c = Math.min(r.skeleton.bones.length, c),
        c < r.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + r.skeleton.bones.length + ", this GPU supports just " + c + " (try OpenGL instead of ANGLE)"))),
        i = {
            precision: k,
            supportsVertexTextures: Ot,
            map: !!t.map,
            envMap: !!t.envMap,
            lightMap: !!t.lightMap,
            bumpMap: !!t.bumpMap,
            normalMap: !!t.normalMap,
            specularMap: !!t.specularMap,
            vertexColors: t.vertexColors,
            fog: i,
            useFog: t.fog,
            fogExp: i instanceof THREE.FogExp2,
            sizeAttenuation: t.sizeAttenuation,
            logarithmicDepthBuffer: U,
            skinning: t.skinning,
            maxBones: c,
            useVertexTexture: Ft && r && r.skeleton && r.skeleton.useVertexTexture,
            morphTargets: t.morphTargets,
            morphNormals: t.morphNormals,
            maxMorphTargets: this.maxMorphTargets,
            maxMorphNormals: this.maxMorphNormals,
            maxDirLights: n,
            maxPointLights: o,
            maxSpotLights: a,
            maxHemiLights: s,
            maxShadows: e,
            shadowMapEnabled: this.shadowMapEnabled && r.receiveShadow && e > 0,
            shadowMapType: this.shadowMapType,
            shadowMapDebug: this.shadowMapDebug,
            shadowMapCascade: this.shadowMapCascade,
            alphaTest: t.alphaTest,
            metal: t.metal,
            wrapAround: t.wrapAround,
            doubleSided: t.side === THREE.DoubleSide,
            flipSided: t.side === THREE.BackSide
        },
        r = [],
        u ? r.push(u) : (r.push(t.fragmentShader),
        r.push(t.vertexShader));
        for (var m in t.defines)
            r.push(m),
            r.push(t.defines[m]);
        for (h in i)
            r.push(h),
            r.push(i[h]);
        u = r.join();
        var g;
        for (h = 0,
        m = K.length; m > h; h++)
            if (r = K[h],
            r.code === u) {
                g = r,
                g.usedTimes++;
                break
            }
        if (void 0 === g && (g = new THREE.WebGLProgram(this,u,t,i),
        K.push(g),
        Q.info.memory.programs = K.length),
        t.program = g,
        g = t.program.attributes,
        t.morphTargets)
            for (t.numSupportedMorphTargets = 0,
            m = "morphTarget",
            h = 0; h < this.maxMorphTargets; h++)
                u = m + h,
                0 <= g[u] && t.numSupportedMorphTargets++;
        if (t.morphNormals)
            for (t.numSupportedMorphNormals = 0,
            m = "morphNormal",
            h = 0; h < this.maxMorphNormals; h++)
                u = m + h,
                0 <= g[u] && t.numSupportedMorphNormals++;
        t.uniformsList = [];
        for (l in t.uniforms)
            t.uniformsList.push([t.uniforms[l], l])
    }
    ,
    this.setFaceCulling = function(t, e) {
        t === THREE.CullFaceNone ? G.disable(G.CULL_FACE) : (G.frontFace(e === THREE.FrontFaceDirectionCW ? G.CW : G.CCW),
        G.cullFace(t === THREE.CullFaceBack ? G.BACK : t === THREE.CullFaceFront ? G.FRONT : G.FRONT_AND_BACK),
        G.enable(G.CULL_FACE))
    }
    ,
    this.setMaterialFaces = function(t) {
        var e = t.side === THREE.DoubleSide;
        t = t.side === THREE.BackSide,
        nt !== e && (e ? G.disable(G.CULL_FACE) : G.enable(G.CULL_FACE),
        nt = e),
        ot !== t && (G.frontFace(t ? G.CW : G.CCW),
        ot = t)
    }
    ,
    this.setDepthTest = function(t) {
        ct !== t && (t ? G.enable(G.DEPTH_TEST) : G.disable(G.DEPTH_TEST),
        ct = t)
    }
    ,
    this.setDepthWrite = function(t) {
        ut !== t && (G.depthMask(t),
        ut = t)
    }
    ,
    this.setBlending = function(t, e, i, r) {
        t !== at && (t === THREE.NoBlending ? G.disable(G.BLEND) : t === THREE.AdditiveBlending ? (G.enable(G.BLEND),
        G.blendEquation(G.FUNC_ADD),
        G.blendFunc(G.SRC_ALPHA, G.ONE)) : t === THREE.SubtractiveBlending ? (G.enable(G.BLEND),
        G.blendEquation(G.FUNC_ADD),
        G.blendFunc(G.ZERO, G.ONE_MINUS_SRC_COLOR)) : t === THREE.MultiplyBlending ? (G.enable(G.BLEND),
        G.blendEquation(G.FUNC_ADD),
        G.blendFunc(G.ZERO, G.SRC_COLOR)) : t === THREE.CustomBlending ? G.enable(G.BLEND) : (G.enable(G.BLEND),
        G.blendEquationSeparate(G.FUNC_ADD, G.FUNC_ADD),
        G.blendFuncSeparate(G.SRC_ALPHA, G.ONE_MINUS_SRC_ALPHA, G.ONE, G.ONE_MINUS_SRC_ALPHA)),
        at = t),
        t === THREE.CustomBlending ? (e !== st && (G.blendEquation(P(e)),
        st = e),
        (i !== lt || r !== ht) && (G.blendFunc(P(i), P(r)),
        lt = i,
        ht = r)) : ht = lt = st = null 
    }
    ,
    this.setTexture = function(t, e) {
        if (t.needsUpdate) {
            t.__webglInit || (t.__webglInit = !0,
            t.addEventListener("dispose", Gt),
            t.__webglTexture = G.createTexture(),
            Q.info.memory.textures++),
            G.activeTexture(G.TEXTURE0 + e),
            G.bindTexture(G.TEXTURE_2D, t.__webglTexture),
            G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL, t.flipY),
            G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha),
            G.pixelStorei(G.UNPACK_ALIGNMENT, t.unpackAlignment);
            var i = t.image
              , r = THREE.Math.isPowerOfTwo(i.width) && THREE.Math.isPowerOfTwo(i.height)
              , n = P(t.format)
              , o = P(t.type);
            M(G.TEXTURE_2D, t, r);
            var a = t.mipmaps;
            if (t instanceof THREE.DataTexture)
                if (0 < a.length && r) {
                    for (var s = 0, l = a.length; l > s; s++)
                        i = a[s],
                        G.texImage2D(G.TEXTURE_2D, s, n, i.width, i.height, 0, n, o, i.data);
                    t.generateMipmaps = !1
                } else
                    G.texImage2D(G.TEXTURE_2D, 0, n, i.width, i.height, 0, n, o, i.data);
            else if (t instanceof THREE.CompressedTexture)
                for (s = 0,
                l = a.length; l > s; s++)
                    i = a[s],
                    t.format !== THREE.RGBAFormat ? G.compressedTexImage2D(G.TEXTURE_2D, s, n, i.width, i.height, 0, i.data) : G.texImage2D(G.TEXTURE_2D, s, n, i.width, i.height, 0, n, o, i.data);
            else if (0 < a.length && r) {
                for (s = 0,
                l = a.length; l > s; s++)
                    i = a[s],
                    G.texImage2D(G.TEXTURE_2D, s, n, n, o, i);
                t.generateMipmaps = !1
            } else
                G.texImage2D(G.TEXTURE_2D, 0, n, n, o, t.image);
            t.generateMipmaps && r && G.generateMipmap(G.TEXTURE_2D),
            t.needsUpdate = !1,
            t.onUpdate && t.onUpdate()
        } else
            G.activeTexture(G.TEXTURE0 + e),
            G.bindTexture(G.TEXTURE_2D, t.__webglTexture)
    }
    ,
    this.setRenderTarget = function(t) {
        var e = t instanceof THREE.WebGLRenderTargetCube;
        if (t && !t.__webglFramebuffer) {
            void 0 === t.depthBuffer && (t.depthBuffer = !0),
            void 0 === t.stencilBuffer && (t.stencilBuffer = !0),
            t.addEventListener("dispose", Wt),
            t.__webglTexture = G.createTexture(),
            Q.info.memory.textures++;
            var i = THREE.Math.isPowerOfTwo(t.width) && THREE.Math.isPowerOfTwo(t.height)
              , r = P(t.format)
              , n = P(t.type);
            if (e) {
                t.__webglFramebuffer = [],
                t.__webglRenderbuffer = [],
                G.bindTexture(G.TEXTURE_CUBE_MAP, t.__webglTexture),
                M(G.TEXTURE_CUBE_MAP, t, i);
                for (var o = 0; 6 > o; o++) {
                    t.__webglFramebuffer[o] = G.createFramebuffer(),
                    t.__webglRenderbuffer[o] = G.createRenderbuffer(),
                    G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, r, t.width, t.height, 0, r, n, null );
                    var a = t
                      , s = G.TEXTURE_CUBE_MAP_POSITIVE_X + o;
                    G.bindFramebuffer(G.FRAMEBUFFER, t.__webglFramebuffer[o]),
                    G.framebufferTexture2D(G.FRAMEBUFFER, G.COLOR_ATTACHMENT0, s, a.__webglTexture, 0),
                    C(t.__webglRenderbuffer[o], t)
                }
                i && G.generateMipmap(G.TEXTURE_CUBE_MAP)
            } else
                t.__webglFramebuffer = G.createFramebuffer(),
                t.__webglRenderbuffer = t.shareDepthFrom ? t.shareDepthFrom.__webglRenderbuffer : G.createRenderbuffer(),
                G.bindTexture(G.TEXTURE_2D, t.__webglTexture),
                M(G.TEXTURE_2D, t, i),
                G.texImage2D(G.TEXTURE_2D, 0, r, t.width, t.height, 0, r, n, null ),
                r = G.TEXTURE_2D,
                G.bindFramebuffer(G.FRAMEBUFFER, t.__webglFramebuffer),
                G.framebufferTexture2D(G.FRAMEBUFFER, G.COLOR_ATTACHMENT0, r, t.__webglTexture, 0),
                t.shareDepthFrom ? t.depthBuffer && !t.stencilBuffer ? G.framebufferRenderbuffer(G.FRAMEBUFFER, G.DEPTH_ATTACHMENT, G.RENDERBUFFER, t.__webglRenderbuffer) : t.depthBuffer && t.stencilBuffer && G.framebufferRenderbuffer(G.FRAMEBUFFER, G.DEPTH_STENCIL_ATTACHMENT, G.RENDERBUFFER, t.__webglRenderbuffer) : C(t.__webglRenderbuffer, t),
                i && G.generateMipmap(G.TEXTURE_2D);
            e ? G.bindTexture(G.TEXTURE_CUBE_MAP, null ) : G.bindTexture(G.TEXTURE_2D, null ),
            G.bindRenderbuffer(G.RENDERBUFFER, null ),
            G.bindFramebuffer(G.FRAMEBUFFER, null )
        }
        t ? (e = e ? t.__webglFramebuffer[t.activeCubeFace] : t.__webglFramebuffer,
        i = t.width,
        t = t.height,
        n = r = 0) : (e = null ,
        i = yt,
        t = vt,
        r = gt,
        n = Et),
        e !== J && (G.bindFramebuffer(G.FRAMEBUFFER, e),
        G.viewport(r, n, i, t),
        J = e),
        _t = i,
        xt = t
    }
    ,
    this.shadowMapPlugin = new THREE.ShadowMapPlugin,
    this.addPrePlugin(this.shadowMapPlugin),
    this.addPostPlugin(new THREE.SpritePlugin),
    this.addPostPlugin(new THREE.LensFlarePlugin)
}
,
THREE.WebGLRenderTarget = function(t, e, i) {
    this.width = t,
    this.height = e,
    i = i || {},
    this.wrapS = void 0 !== i.wrapS ? i.wrapS : THREE.ClampToEdgeWrapping,
    this.wrapT = void 0 !== i.wrapT ? i.wrapT : THREE.ClampToEdgeWrapping,
    this.magFilter = void 0 !== i.magFilter ? i.magFilter : THREE.LinearFilter,
    this.minFilter = void 0 !== i.minFilter ? i.minFilter : THREE.LinearMipMapLinearFilter,
    this.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1,
    this.offset = new THREE.Vector2(0,0),
    this.repeat = new THREE.Vector2(1,1),
    this.format = void 0 !== i.format ? i.format : THREE.RGBAFormat,
    this.type = void 0 !== i.type ? i.type : THREE.UnsignedByteType,
    this.depthBuffer = void 0 !== i.depthBuffer ? i.depthBuffer : !0,
    this.stencilBuffer = void 0 !== i.stencilBuffer ? i.stencilBuffer : !0,
    this.generateMipmaps = !0,
    this.shareDepthFrom = null 
}
,
THREE.WebGLRenderTarget.prototype = {
    constructor: THREE.WebGLRenderTarget,
    setSize: function(t, e) {
        this.width = t,
        this.height = e
    },
    clone: function() {
        var t = new THREE.WebGLRenderTarget(this.width,this.height);
        return t.wrapS = this.wrapS,
        t.wrapT = this.wrapT,
        t.magFilter = this.magFilter,
        t.minFilter = this.minFilter,
        t.anisotropy = this.anisotropy,
        t.offset.copy(this.offset),
        t.repeat.copy(this.repeat),
        t.format = this.format,
        t.type = this.type,
        t.depthBuffer = this.depthBuffer,
        t.stencilBuffer = this.stencilBuffer,
        t.generateMipmaps = this.generateMipmaps,
        t.shareDepthFrom = this.shareDepthFrom,
        t
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),
THREE.WebGLRenderTargetCube = function(t, e, i) {
    THREE.WebGLRenderTarget.call(this, t, e, i),
    this.activeCubeFace = 0
}
,
THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype),
THREE.WebGLProgram = function() {
    var t = 0;
    return function(e, i, r, n) {
        var o = e.context
          , a = r.fragmentShader
          , s = r.vertexShader
          , l = r.uniforms
          , h = r.attributes
          , c = r.defines
          , u = r.index0AttributeName;
        void 0 === u && !0 === n.morphTargets && (u = "position");
        var p = "SHADOWMAP_TYPE_BASIC";
        n.shadowMapType === THREE.PCFShadowMap ? p = "SHADOWMAP_TYPE_PCF" : n.shadowMapType === THREE.PCFSoftShadowMap && (p = "SHADOWMAP_TYPE_PCF_SOFT");
        var d, f;
        d = [];
        for (var m in c)
            f = c[m],
            !1 !== f && (f = "#define " + m + " " + f,
            d.push(f));
        d = d.join("\n"),
        c = o.createProgram(),
        r instanceof THREE.RawShaderMaterial ? e = r = "" : (r = ["precision " + n.precision + " float;", "precision " + n.precision + " int;", d, n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", e.gammaInput ? "#define GAMMA_INPUT" : "", e.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define MAX_DIR_LIGHTS " + n.maxDirLights, "#define MAX_POINT_LIGHTS " + n.maxPointLights, "#define MAX_SPOT_LIGHTS " + n.maxSpotLights, "#define MAX_HEMI_LIGHTS " + n.maxHemiLights, "#define MAX_SHADOWS " + n.maxShadows, "#define MAX_BONES " + n.maxBones, n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.vertexColors ? "#define USE_COLOR" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals ? "#define USE_MORPHNORMALS" : "", n.wrapAround ? "#define WRAP_AROUND" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", n.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n"].join("\n"),
        e = ["precision " + n.precision + " float;", "precision " + n.precision + " int;", n.bumpMap || n.normalMap ? "#extension GL_OES_standard_derivatives : enable" : "", d, "#define MAX_DIR_LIGHTS " + n.maxDirLights, "#define MAX_POINT_LIGHTS " + n.maxPointLights, "#define MAX_SPOT_LIGHTS " + n.maxSpotLights, "#define MAX_HEMI_LIGHTS " + n.maxHemiLights, "#define MAX_SHADOWS " + n.maxShadows, n.alphaTest ? "#define ALPHATEST " + n.alphaTest : "", e.gammaInput ? "#define GAMMA_INPUT" : "", e.gammaOutput ? "#define GAMMA_OUTPUT" : "", n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.vertexColors ? "#define USE_COLOR" : "", n.metal ? "#define METAL" : "", n.wrapAround ? "#define WRAP_AROUND" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", n.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n")),
        s = new THREE.WebGLShader(o,o.VERTEX_SHADER,r + s),
        a = new THREE.WebGLShader(o,o.FRAGMENT_SHADER,e + a),
        o.attachShader(c, s),
        o.attachShader(c, a),
        void 0 !== u && o.bindAttribLocation(c, 0, u),
        o.linkProgram(c),
        !1 === o.getProgramParameter(c, o.LINK_STATUS) && (console.error("Could not initialise shader"),
        console.error("gl.VALIDATE_STATUS", o.getProgramParameter(c, o.VALIDATE_STATUS)),
        console.error("gl.getError()", o.getError())),
        "" !== o.getProgramInfoLog(c) && console.error("gl.getProgramInfoLog()", o.getProgramInfoLog(c)),
        o.deleteShader(s),
        o.deleteShader(a),
        u = "viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),
        n.useVertexTexture ? (u.push("boneTexture"),
        u.push("boneTextureWidth"),
        u.push("boneTextureHeight")) : u.push("boneGlobalMatrices"),
        n.logarithmicDepthBuffer && u.push("logDepthBufFC");
        for (var g in l)
            u.push(g);
        for (l = u,
        g = {},
        u = 0,
        e = l.length; e > u; u++)
            p = l[u],
            g[p] = o.getUniformLocation(c, p);
        for (this.uniforms = g,
        u = "position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),
        l = 0; l < n.maxMorphTargets; l++)
            u.push("morphTarget" + l);
        for (l = 0; l < n.maxMorphNormals; l++)
            u.push("morphNormal" + l);
        for (var E in h)
            u.push(E);
        for (n = u,
        h = {},
        E = 0,
        l = n.length; l > E; E++)
            g = n[E],
            h[g] = o.getAttribLocation(c, g);
        return this.attributes = h,
        this.id = t++,
        this.code = i,
        this.usedTimes = 1,
        this.program = c,
        this.vertexShader = s,
        this.fragmentShader = a,
        this
    }
}
(),
THREE.WebGLShader = function() {
    var t = function(t) {
        t = t.split("\n");
        for (var e = 0; e < t.length; e++)
            t[e] = e + 1 + ": " + t[e];
        return t.join("\n")
    }
    ;
    return function(e, i, r) {
        return i = e.createShader(i),
        e.shaderSource(i, r),
        e.compileShader(i),
        !1 === e.getShaderParameter(i, e.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== e.getShaderInfoLog(i) && (console.error("THREE.WebGLShader:", "gl.getShaderInfoLog()", e.getShaderInfoLog(i)),
        console.error(t(r))),
        i
    }
}
(),
THREE.RenderableVertex = function() {
    this.position = new THREE.Vector3,
    this.positionWorld = new THREE.Vector3,
    this.positionScreen = new THREE.Vector4,
    this.visible = !0
}
,
THREE.RenderableVertex.prototype.copy = function(t) {
    this.positionWorld.copy(t.positionWorld),
    this.positionScreen.copy(t.positionScreen)
}
,
THREE.RenderableFace = function() {
    this.id = 0,
    this.v1 = new THREE.RenderableVertex,
    this.v2 = new THREE.RenderableVertex,
    this.v3 = new THREE.RenderableVertex,
    this.normalModel = new THREE.Vector3,
    this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3],
    this.vertexNormalsLength = 0,
    this.material = this.color = null ,
    this.uvs = [new THREE.Vector2, new THREE.Vector2, new THREE.Vector2],
    this.z = 0
}
,
THREE.RenderableObject = function() {
    this.id = 0,
    this.object = null ,
    this.z = 0
}
,
THREE.RenderableSprite = function() {
    this.id = 0,
    this.object = null ,
    this.rotation = this.z = this.y = this.x = 0,
    this.scale = new THREE.Vector2,
    this.material = null 
}
,
THREE.RenderableLine = function() {
    this.id = 0,
    this.v1 = new THREE.RenderableVertex,
    this.v2 = new THREE.RenderableVertex,
    this.vertexColors = [new THREE.Color, new THREE.Color],
    this.material = null ,
    this.z = 0
}
,
THREE.GeometryUtils = {
    merge: function(t, e, i) {
        console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var r;
        e instanceof THREE.Mesh && (e.matrixAutoUpdate && e.updateMatrix(),
        r = e.matrix,
        e = e.geometry),
        t.merge(e, r, i)
    },
    randomPointInTriangle: function() {
        var t = new THREE.Vector3;
        return function(e, i, r) {
            var n = new THREE.Vector3
              , o = THREE.Math.random16()
              , a = THREE.Math.random16();
            o + a > 1 && (o = 1 - o,
            a = 1 - a);
            var s = 1 - o - a;
            return n.copy(e),
            n.multiplyScalar(o),
            t.copy(i),
            t.multiplyScalar(a),
            n.add(t),
            t.copy(r),
            t.multiplyScalar(s),
            n.add(t),
            n
        }
    }
    (),
    randomPointInFace: function(t, e, i) {
        return THREE.GeometryUtils.randomPointInTriangle(e.vertices[t.a], e.vertices[t.b], e.vertices[t.c])
    },
    randomPointsInGeometry: function(t, e) {
        function i(t) {
            function e(i, r) {
                if (i > r)
                    return i;
                var n = i + Math.floor((r - i) / 2);
                return p[n] > t ? e(i, n - 1) : p[n] < t ? e(n + 1, r) : n
            }
            return e(0, p.length - 1)
        }
        var r, n, o, a, s, l = t.faces, h = t.vertices, c = l.length, u = 0, p = [];
        for (n = 0; c > n; n++)
            r = l[n],
            o = h[r.a],
            a = h[r.b],
            s = h[r.c],
            r._area = THREE.GeometryUtils.triangleArea(o, a, s),
            u += r._area,
            p[n] = u;
        for (r = [],
        n = 0; e > n; n++)
            h = THREE.Math.random16() * u,
            h = i(h),
            r[n] = THREE.GeometryUtils.randomPointInFace(l[h], t, !0);
        return r
    },
    triangleArea: function() {
        var t = new THREE.Vector3
          , e = new THREE.Vector3;
        return function(i, r, n) {
            return t.subVectors(r, i),
            e.subVectors(n, i),
            t.cross(e),
            .5 * t.length()
        }
    }
    (),
    center: function(t) {
        t.computeBoundingBox();
        var e = t.boundingBox
          , i = new THREE.Vector3;
        return i.addVectors(e.min, e.max),
        i.multiplyScalar(-.5),
        t.applyMatrix((new THREE.Matrix4).makeTranslation(i.x, i.y, i.z)),
        t.computeBoundingBox(),
        i
    }
},
THREE.ImageUtils = {
    crossOrigin: void 0,
    loadTexture: function(t, e, i, r) {
        var n = new THREE.ImageLoader;
        n.crossOrigin = this.crossOrigin;
        var o = new THREE.Texture(void 0,e);
        return e = n.load(t, function() {
            o.needsUpdate = !0,
            i && i(o)
        }
        , void 0, function(t) {
            r && r(t)
        }
        ),
        o.image = e,
        o.sourceFile = t,
        o
    },
    loadCompressedTexture: function(t, e, i, r) {
        var n = new THREE.CompressedTexture;
        n.mapping = e;
        var o = new XMLHttpRequest;
        return o.onload = function() {
            var t = THREE.ImageUtils.parseDDS(o.response, !0);
            n.format = t.format,
            n.mipmaps = t.mipmaps,
            n.image.width = t.width,
            n.image.height = t.height,
            n.generateMipmaps = !1,
            n.needsUpdate = !0,
            i && i(n)
        }
        ,
        o.onerror = r,
        o.open("GET", t, !0),
        o.responseType = "arraybuffer",
        o.send(null ),
        n
    },
    loadTextureCube: function(t, e, i, r) {
        var n = [];
        n.loadCount = 0,
        r = new THREE.ImageLoader,
        r.crossOrigin = this.crossOrigin;
        var o = new THREE.Texture;
        o.image = n,
        void 0 !== e && (o.mapping = e),
        o.flipY = !1,
        e = 0;
        for (var a = t.length; a > e; ++e) {
            var s = r.load(t[e], function() {
                n.loadCount += 1,
                6 === n.loadCount && (o.needsUpdate = !0,
                i && i(o))
            }
            );
            n[e] = s
        }
        return o
    },
    loadCompressedTextureCube: function(t, e, i, r) {
        var n = [];
        n.loadCount = 0;
        var o = new THREE.CompressedTexture;
        if (o.image = n,
        void 0 !== e && (o.mapping = e),
        o.flipY = !1,
        o.generateMipmaps = !1,
        e = function(t, e) {
            return function() {
                var r = THREE.ImageUtils.parseDDS(t.response, !0);
                e.format = r.format,
                e.mipmaps = r.mipmaps,
                e.width = r.width,
                e.height = r.height,
                n.loadCount += 1,
                6 === n.loadCount && (o.format = r.format,
                o.needsUpdate = !0,
                i && i(o))
            }
        }
        ,
        t instanceof Array)
            for (var a = 0, s = t.length; s > a; ++a) {
                var l = {};
                n[a] = l;
                var h = new XMLHttpRequest;
                h.onload = e(h, l),
                h.onerror = r,
                l = t[a],
                h.open("GET", l, !0),
                h.responseType = "arraybuffer",
                h.send(null )
            }
        else
            h = new XMLHttpRequest,
            h.onload = function() {
                var t = THREE.ImageUtils.parseDDS(h.response, !0);
                if (t.isCubemap) {
                    for (var e = t.mipmaps.length / t.mipmapCount, r = 0; e > r; r++) {
                        n[r] = {
                            mipmaps: []
                        };
                        for (var a = 0; a < t.mipmapCount; a++)
                            n[r].mipmaps.push(t.mipmaps[r * t.mipmapCount + a]),
                            n[r].format = t.format,
                            n[r].width = t.width,
                            n[r].height = t.height
                    }
                    o.format = t.format,
                    o.needsUpdate = !0,
                    i && i(o)
                }
            }
            ,
            h.onerror = r,
            h.open("GET", t, !0),
            h.responseType = "arraybuffer",
            h.send(null );
        return o
    },
    loadDDSTexture: function(t, e, i, r) {
        var n = [];
        n.loadCount = 0;
        var o = new THREE.CompressedTexture;
        o.image = n,
        void 0 !== e && (o.mapping = e),
        o.flipY = !1,
        o.generateMipmaps = !1;
        var a = new XMLHttpRequest;
        return a.onload = function() {
            var t = THREE.ImageUtils.parseDDS(a.response, !0);
            if (t.isCubemap)
                for (var e = t.mipmaps.length / t.mipmapCount, r = 0; e > r; r++) {
                    n[r] = {
                        mipmaps: []
                    };
                    for (var s = 0; s < t.mipmapCount; s++)
                        n[r].mipmaps.push(t.mipmaps[r * t.mipmapCount + s]),
                        n[r].format = t.format,
                        n[r].width = t.width,
                        n[r].height = t.height
                }
            else
                o.image.width = t.width,
                o.image.height = t.height,
                o.mipmaps = t.mipmaps;
            o.format = t.format,
            o.needsUpdate = !0,
            i && i(o)
        }
        ,
        a.onerror = r,
        a.open("GET", t, !0),
        a.responseType = "arraybuffer",
        a.send(null ),
        o
    },
    parseDDS: function(t, e) {
        function i(t) {
            return t.charCodeAt(0) + (t.charCodeAt(1) << 8) + (t.charCodeAt(2) << 16) + (t.charCodeAt(3) << 24)
        }
        function r(t, e, i, r) {
            var n = i * r * 4;
            t = new Uint8Array(t,e,n);
            for (var n = new Uint8Array(n), o = e = 0, a = 0; r > a; a++)
                for (var s = 0; i > s; s++) {
                    var l = t[o];
                    o++;
                    var h = t[o];
                    o++;
                    var c = t[o];
                    o++;
                    var u = t[o];
                    o++,
                    n[e] = c,
                    e++,
                    n[e] = h,
                    e++,
                    n[e] = l,
                    e++,
                    n[e] = u,
                    e++
                }
            return n
        }
        var n = {
            mipmaps: [],
            width: 0,
            height: 0,
            format: null ,
            mipmapCount: 1
        }
          , o = i("DXT1")
          , a = i("DXT3")
          , s = i("DXT5")
          , l = new Int32Array(t,0,31);
        if (542327876 !== l[0])
            return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),
            n;
        if (4 & !l[20])
            return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
            n;
        var h = l[21]
          , c = !1;
        switch (h) {
        case o:
            o = 8,
            n.format = THREE.RGB_S3TC_DXT1_Format;
            break;
        case a:
            o = 16,
            n.format = THREE.RGBA_S3TC_DXT3_Format;
            break;
        case s:
            o = 16,
            n.format = THREE.RGBA_S3TC_DXT5_Format;
            break;
        default:
            if (!(32 == l[22] && 16711680 & l[23] && 65280 & l[24] && 255 & l[25] && 4278190080 & l[26]))
                return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ", String.fromCharCode(255 & h, h >> 8 & 255, h >> 16 & 255, h >> 24 & 255)),
                n;
            c = !0,
            o = 64,
            n.format = THREE.RGBAFormat
        }
        n.mipmapCount = 1,
        131072 & l[2] && !1 !== e && (n.mipmapCount = Math.max(1, l[7])),
        n.isCubemap = 512 & l[28] ? !0 : !1,
        n.width = l[4],
        n.height = l[3];
        for (var l = l[1] + 4, a = n.width, s = n.height, h = n.isCubemap ? 6 : 1, u = 0; h > u; u++) {
            for (var p = 0; p < n.mipmapCount; p++) {
                if (c)
                    var d = r(t, l, a, s)
                      , f = d.length;
                else
                    f = Math.max(4, a) / 4 * Math.max(4, s) / 4 * o,
                    d = new Uint8Array(t,l,f);
                n.mipmaps.push({
                    data: d,
                    width: a,
                    height: s
                }),
                l += f,
                a = Math.max(.5 * a, 1),
                s = Math.max(.5 * s, 1)
            }
            a = n.width,
            s = n.height
        }
        return n
    },
    getNormalMap: function(t, e) {
        var i = function(t) {
            var e = Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
            return [t[0] / e, t[1] / e, t[2] / e]
        }
        ;
        e |= 1;
        var r = t.width
          , n = t.height
          , o = document.createElement("canvas");
        o.width = r,
        o.height = n;
        var a = o.getContext("2d");
        a.drawImage(t, 0, 0);
        for (var s = a.getImageData(0, 0, r, n).data, l = a.createImageData(r, n), h = l.data, c = 0; r > c; c++)
            for (var u = 0; n > u; u++) {
                var p = 0 > u - 1 ? 0 : u - 1
                  , d = u + 1 > n - 1 ? n - 1 : u + 1
                  , f = 0 > c - 1 ? 0 : c - 1
                  , m = c + 1 > r - 1 ? r - 1 : c + 1
                  , g = []
                  , E = [0, 0, s[4 * (u * r + c)] / 255 * e];
                for (g.push([-1, 0, s[4 * (u * r + f)] / 255 * e]),
                g.push([-1, -1, s[4 * (p * r + f)] / 255 * e]),
                g.push([0, -1, s[4 * (p * r + c)] / 255 * e]),
                g.push([1, -1, s[4 * (p * r + m)] / 255 * e]),
                g.push([1, 0, s[4 * (u * r + m)] / 255 * e]),
                g.push([1, 1, s[4 * (d * r + m)] / 255 * e]),
                g.push([0, 1, s[4 * (d * r + c)] / 255 * e]),
                g.push([-1, 1, s[4 * (d * r + f)] / 255 * e]),
                p = [],
                f = g.length,
                d = 0; f > d; d++) {
                    var m = g[d]
                      , y = g[(d + 1) % f]
                      , m = [m[0] - E[0], m[1] - E[1], m[2] - E[2]]
                      , y = [y[0] - E[0], y[1] - E[1], y[2] - E[2]];
                    p.push(i([m[1] * y[2] - m[2] * y[1], m[2] * y[0] - m[0] * y[2], m[0] * y[1] - m[1] * y[0]]))
                }
                for (g = [0, 0, 0],
                d = 0; d < p.length; d++)
                    g[0] += p[d][0],
                    g[1] += p[d][1],
                    g[2] += p[d][2];
                g[0] /= p.length,
                g[1] /= p.length,
                g[2] /= p.length,
                E = 4 * (u * r + c),
                h[E] = (g[0] + 1) / 2 * 255 | 0,
                h[E + 1] = (g[1] + 1) / 2 * 255 | 0,
                h[E + 2] = 255 * g[2] | 0,
                h[E + 3] = 255
            }
        return a.putImageData(l, 0, 0),
        o
    },
    generateDataTexture: function(t, e, i) {
        var r = t * e
          , n = new Uint8Array(3 * r)
          , o = Math.floor(255 * i.r)
          , a = Math.floor(255 * i.g);
        i = Math.floor(255 * i.b);
        for (var s = 0; r > s; s++)
            n[3 * s] = o,
            n[3 * s + 1] = a,
            n[3 * s + 2] = i;
        return t = new THREE.DataTexture(n,t,e,THREE.RGBFormat),
        t.needsUpdate = !0,
        t
    }
},
THREE.SceneUtils = {
    createMultiMaterialObject: function(t, e) {
        for (var i = new THREE.Object3D, r = 0, n = e.length; n > r; r++)
            i.add(new THREE.Mesh(t,e[r]));
        return i
    },
    detach: function(t, e, i) {
        t.applyMatrix(e.matrixWorld),
        e.remove(t),
        i.add(t)
    },
    attach: function(t, e, i) {
        var r = new THREE.Matrix4;
        r.getInverse(i.matrixWorld),
        t.applyMatrix(r),
        e.remove(t),
        i.add(t)
    }
},
THREE.FontUtils = {
    faces: {},
    face: "helvetiker",
    weight: "normal",
    style: "normal",
    size: 150,
    divisions: 10,
    getFace: function() {
        return this.faces[this.face][this.weight][this.style]
    },
    loadFace: function(t) {
        var e = t.familyName.toLowerCase();
        return this.faces[e] = this.faces[e] || {},
        this.faces[e][t.cssFontWeight] = this.faces[e][t.cssFontWeight] || {},
        this.faces[e][t.cssFontWeight][t.cssFontStyle] = t,
        this.faces[e][t.cssFontWeight][t.cssFontStyle] = t
    },
    drawText: function(t) {
        var e = this.getFace()
          , i = this.size / e.resolution
          , r = 0
          , n = String(t).split("")
          , o = n.length
          , a = [];
        for (t = 0; o > t; t++) {
            var s = new THREE.Path
              , s = this.extractGlyphPoints(n[t], e, i, r, s)
              , r = r + s.offset;
            a.push(s.path)
        }
        return {
            paths: a,
            offset: r / 2
        }
    },
    extractGlyphPoints: function(t, e, i, r, n) {
        var o, a, s, l, h, c, u, p, d, f, m, g = [], E = e.glyphs[t] || e.glyphs["?"];
        if (E) {
            if (E.o)
                for (e = E._cachedOutline || (E._cachedOutline = E.o.split(" ")),
                l = e.length,
                t = 0; l > t; )
                    switch (s = e[t++]) {
                    case "m":
                        s = e[t++] * i + r,
                        h = e[t++] * i,
                        n.moveTo(s, h);
                        break;
                    case "l":
                        s = e[t++] * i + r,
                        h = e[t++] * i,
                        n.lineTo(s, h);
                        break;
                    case "q":
                        if (s = e[t++] * i + r,
                        h = e[t++] * i,
                        p = e[t++] * i + r,
                        d = e[t++] * i,
                        n.quadraticCurveTo(p, d, s, h),
                        o = g[g.length - 1])
                            for (c = o.x,
                            u = o.y,
                            o = 1,
                            a = this.divisions; a >= o; o++) {
                                var y = o / a;
                                THREE.Shape.Utils.b2(y, c, p, s),
                                THREE.Shape.Utils.b2(y, u, d, h)
                            }
                        break;
                    case "b":
                        if (s = e[t++] * i + r,
                        h = e[t++] * i,
                        p = e[t++] * i + r,
                        d = e[t++] * -i,
                        f = e[t++] * i + r,
                        m = e[t++] * -i,
                        n.bezierCurveTo(s, h, p, d, f, m),
                        o = g[g.length - 1])
                            for (c = o.x,
                            u = o.y,
                            o = 1,
                            a = this.divisions; a >= o; o++)
                                y = o / a,
                                THREE.Shape.Utils.b3(y, c, p, f, s),
                                THREE.Shape.Utils.b3(y, u, d, m, h)
                    }
            return {
                offset: E.ha * i,
                path: n
            }
        }
    }
},
THREE.FontUtils.generateShapes = function(t, e) {
    e = e || {};
    var i = void 0 !== e.curveSegments ? e.curveSegments : 4
      , r = void 0 !== e.font ? e.font : "helvetiker"
      , n = void 0 !== e.weight ? e.weight : "normal"
      , o = void 0 !== e.style ? e.style : "normal";
    for (THREE.FontUtils.size = void 0 !== e.size ? e.size : 100,
    THREE.FontUtils.divisions = i,
    THREE.FontUtils.face = r,
    THREE.FontUtils.weight = n,
    THREE.FontUtils.style = o,
    i = THREE.FontUtils.drawText(t).paths,
    r = [],
    n = 0,
    o = i.length; o > n; n++)
        Array.prototype.push.apply(r, i[n].toShapes());
    return r
}
,
function(t) {
    var e = function(t) {
        for (var e = t.length, i = 0, r = e - 1, n = 0; e > n; r = n++)
            i += t[r].x * t[n].y - t[n].x * t[r].y;
        return .5 * i
    }
    ;
    return t.Triangulate = function(t, i) {
        var r = t.length;
        if (3 > r)
            return null ;
        var n, o, a, s = [], l = [], h = [];
        if (0 < e(t))
            for (o = 0; r > o; o++)
                l[o] = o;
        else
            for (o = 0; r > o; o++)
                l[o] = r - 1 - o;
        var c = 2 * r;
        for (o = r - 1; r > 2; ) {
            if (0 >= c--) {
                console.log("Warning, unable to triangulate polygon!");
                break
            }
            n = o,
            n >= r && (n = 0),
            o = n + 1,
            o >= r && (o = 0),
            a = o + 1,
            a >= r && (a = 0);
            var u;
            t: {
                var p = u = void 0
                  , d = void 0
                  , f = void 0
                  , m = void 0
                  , g = void 0
                  , E = void 0
                  , y = void 0
                  , v = void 0
                  , p = t[l[n]].x
                  , d = t[l[n]].y
                  , f = t[l[o]].x
                  , m = t[l[o]].y
                  , g = t[l[a]].x
                  , E = t[l[a]].y;
                if (1e-10 > (f - p) * (E - d) - (m - d) * (g - p))
                    u = !1;
                else {
                    var _ = void 0
                      , x = void 0
                      , T = void 0
                      , w = void 0
                      , b = void 0
                      , R = void 0
                      , H = void 0
                      , S = void 0
                      , M = void 0
                      , C = void 0
                      , M = S = H = v = y = void 0
                      , _ = g - f
                      , x = E - m
                      , T = p - g
                      , w = d - E
                      , b = f - p
                      , R = m - d;
                    for (u = 0; r > u; u++)
                        if (y = t[l[u]].x,
                        v = t[l[u]].y,
                        !(y === p && v === d || y === f && v === m || y === g && v === E) && (H = y - p,
                        S = v - d,
                        M = y - f,
                        C = v - m,
                        y -= g,
                        v -= E,
                        M = _ * C - x * M,
                        H = b * S - R * H,
                        S = T * v - w * y,
                        M >= -1e-10 && S >= -1e-10 && H >= -1e-10)) {
                            u = !1;
                            break t
                        }
                    u = !0
                }
            }
            if (u) {
                for (s.push([t[l[n]], t[l[o]], t[l[a]]]),
                h.push([l[n], l[o], l[a]]),
                n = o,
                a = o + 1; r > a; n++,
                a++)
                    l[n] = l[a];
                r--,
                c = 2 * r
            }
        }
        return i ? h : s
    }
    ,
    t.Triangulate.area = e,
    t
}
(THREE.FontUtils),
self._typeface_js = {
    faces: THREE.FontUtils.faces,
    loadFace: THREE.FontUtils.loadFace
},
THREE.typeface_js = self._typeface_js,
THREE.Curve = function() {}
,
THREE.Curve.prototype.getPoint = function(t) {
    return console.log("Warning, getPoint() not implemented!"),
    null 
}
,
THREE.Curve.prototype.getPointAt = function(t) {
    return t = this.getUtoTmapping(t),
    this.getPoint(t)
}
,
THREE.Curve.prototype.getPoints = function(t) {
    t || (t = 5);
    var e, i = [];
    for (e = 0; t >= e; e++)
        i.push(this.getPoint(e / t));
    return i
}
,
THREE.Curve.prototype.getSpacedPoints = function(t) {
    t || (t = 5);
    var e, i = [];
    for (e = 0; t >= e; e++)
        i.push(this.getPointAt(e / t));
    return i
}
,
THREE.Curve.prototype.getLength = function() {
    var t = this.getLengths();
    return t[t.length - 1]
}
,
THREE.Curve.prototype.getLengths = function(t) {
    if (t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
    this.cacheArcLengths && this.cacheArcLengths.length == t + 1 && !this.needsUpdate)
        return this.cacheArcLengths;
    this.needsUpdate = !1;
    var e, i, r = [], n = this.getPoint(0), o = 0;
    for (r.push(0),
    i = 1; t >= i; i++)
        e = this.getPoint(i / t),
        o += e.distanceTo(n),
        r.push(o),
        n = e;
    return this.cacheArcLengths = r
}
,
THREE.Curve.prototype.updateArcLengths = function() {
    this.needsUpdate = !0,
    this.getLengths()
}
,
THREE.Curve.prototype.getUtoTmapping = function(t, e) {
    var i, r = this.getLengths(), n = 0, o = r.length;
    i = e ? e : t * r[o - 1];
    for (var a, s = 0, l = o - 1; l >= s; )
        if (n = Math.floor(s + (l - s) / 2),
        a = r[n] - i,
        0 > a)
            s = n + 1;
        else {
            if (!(a > 0)) {
                l = n;
                break
            }
            l = n - 1
        }
    return n = l,
    r[n] == i ? n / (o - 1) : (s = r[n],
    r = (n + (i - s) / (r[n + 1] - s)) / (o - 1))
}
,
THREE.Curve.prototype.getTangent = function(t) {
    var e = t - 1e-4;
    return t += 1e-4,
    0 > e && (e = 0),
    t > 1 && (t = 1),
    e = this.getPoint(e),
    this.getPoint(t).clone().sub(e).normalize()
}
,
THREE.Curve.prototype.getTangentAt = function(t) {
    return t = this.getUtoTmapping(t),
    this.getTangent(t)
}
,
THREE.Curve.Utils = {
    tangentQuadraticBezier: function(t, e, i, r) {
        return 2 * (1 - t) * (i - e) + 2 * t * (r - i)
    },
    tangentCubicBezier: function(t, e, i, r, n) {
        return -3 * e * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) - 6 * t * i * (1 - t) + 6 * t * r * (1 - t) - 3 * t * t * r + 3 * t * t * n
    },
    tangentSpline: function(t, e, i, r, n) {
        return 6 * t * t - 6 * t + (3 * t * t - 4 * t + 1) + (-6 * t * t + 6 * t) + (3 * t * t - 2 * t)
    },
    interpolate: function(t, e, i, r, n) {
        t = .5 * (i - t),
        r = .5 * (r - e);
        var o = n * n;
        return (2 * e - 2 * i + t + r) * n * o + (-3 * e + 3 * i - 2 * t - r) * o + t * n + e
    }
},
THREE.Curve.create = function(t, e) {
    return t.prototype = Object.create(THREE.Curve.prototype),
    t.prototype.getPoint = e,
    t
}
,
THREE.CurvePath = function() {
    this.curves = [],
    this.bends = [],
    this.autoClose = !1
}
,
THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype),
THREE.CurvePath.prototype.add = function(t) {
    this.curves.push(t)
}
,
THREE.CurvePath.prototype.checkConnection = function() {}
,
THREE.CurvePath.prototype.closePath = function() {
    var t = this.curves[0].getPoint(0)
      , e = this.curves[this.curves.length - 1].getPoint(1);
    t.equals(e) || this.curves.push(new THREE.LineCurve(e,t))
}
,
THREE.CurvePath.prototype.getPoint = function(t) {
    var e = t * this.getLength()
      , i = this.getCurveLengths();
    for (t = 0; t < i.length; ) {
        if (i[t] >= e)
            return e = i[t] - e,
            t = this.curves[t],
            e = 1 - e / t.getLength(),
            t.getPointAt(e);
        t++
    }
    return null 
}
,
THREE.CurvePath.prototype.getLength = function() {
    var t = this.getCurveLengths();
    return t[t.length - 1]
}
,
THREE.CurvePath.prototype.getCurveLengths = function() {
    if (this.cacheLengths && this.cacheLengths.length == this.curves.length)
        return this.cacheLengths;
    var t, e = [], i = 0, r = this.curves.length;
    for (t = 0; r > t; t++)
        i += this.curves[t].getLength(),
        e.push(i);
    return this.cacheLengths = e
}
,
THREE.CurvePath.prototype.getBoundingBox = function() {
    var t, e, i, r, n, o, a = this.getPoints();
    t = e = Number.NEGATIVE_INFINITY,
    r = n = Number.POSITIVE_INFINITY;
    var s, l, h, c, u = a[0] instanceof THREE.Vector3;
    for (c = u ? new THREE.Vector3 : new THREE.Vector2,
    l = 0,
    h = a.length; h > l; l++)
        s = a[l],
        s.x > t ? t = s.x : s.x < r && (r = s.x),
        s.y > e ? e = s.y : s.y < n && (n = s.y),
        u && (s.z > i ? i = s.z : s.z < o && (o = s.z)),
        c.add(s);
    return a = {
        minX: r,
        minY: n,
        maxX: t,
        maxY: e
    },
    u && (a.maxZ = i,
    a.minZ = o),
    a
}
,
THREE.CurvePath.prototype.createPointsGeometry = function(t) {
    return t = this.getPoints(t, !0),
    this.createGeometry(t)
}
,
THREE.CurvePath.prototype.createSpacedPointsGeometry = function(t) {
    return t = this.getSpacedPoints(t, !0),
    this.createGeometry(t)
}
,
THREE.CurvePath.prototype.createGeometry = function(t) {
    for (var e = new THREE.Geometry, i = 0; i < t.length; i++)
        e.vertices.push(new THREE.Vector3(t[i].x,t[i].y,t[i].z || 0));
    return e
}
,
THREE.CurvePath.prototype.addWrapPath = function(t) {
    this.bends.push(t)
}
,
THREE.CurvePath.prototype.getTransformedPoints = function(t, e) {
    var i, r, n = this.getPoints(t);
    for (e || (e = this.bends),
    i = 0,
    r = e.length; r > i; i++)
        n = this.getWrapPoints(n, e[i]);
    return n
}
,
THREE.CurvePath.prototype.getTransformedSpacedPoints = function(t, e) {
    var i, r, n = this.getSpacedPoints(t);
    for (e || (e = this.bends),
    i = 0,
    r = e.length; r > i; i++)
        n = this.getWrapPoints(n, e[i]);
    return n
}
,
THREE.CurvePath.prototype.getWrapPoints = function(t, e) {
    var i, r, n, o, a, s, l = this.getBoundingBox();
    for (i = 0,
    r = t.length; r > i; i++)
        n = t[i],
        o = n.x,
        a = n.y,
        s = o / l.maxX,
        s = e.getUtoTmapping(s, o),
        o = e.getPoint(s),
        s = e.getTangent(s),
        s.set(-s.y, s.x).multiplyScalar(a),
        n.x = o.x + s.x,
        n.y = o.y + s.y;
    return t
}
,
THREE.Gyroscope = function() {
    THREE.Object3D.call(this)
}
,
THREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype),
THREE.Gyroscope.prototype.updateMatrixWorld = function(t) {
    this.matrixAutoUpdate && this.updateMatrix(),
    (this.matrixWorldNeedsUpdate || t) && (this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
    this.matrixWorld.decompose(this.translationWorld, this.quaternionWorld, this.scaleWorld),
    this.matrix.decompose(this.translationObject, this.quaternionObject, this.scaleObject),
    this.matrixWorld.compose(this.translationWorld, this.quaternionObject, this.scaleWorld)) : this.matrixWorld.copy(this.matrix),
    this.matrixWorldNeedsUpdate = !1,
    t = !0);
    for (var e = 0, i = this.children.length; i > e; e++)
        this.children[e].updateMatrixWorld(t)
}
,
THREE.Gyroscope.prototype.translationWorld = new THREE.Vector3,
THREE.Gyroscope.prototype.translationObject = new THREE.Vector3,
THREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion,
THREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion,
THREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3,
THREE.Gyroscope.prototype.scaleObject = new THREE.Vector3,
THREE.Path = function(t) {
    THREE.CurvePath.call(this),
    this.actions = [],
    t && this.fromPoints(t)
}
,
THREE.Path.prototype = Object.create(THREE.CurvePath.prototype),
THREE.PathActions = {
    MOVE_TO: "moveTo",
    LINE_TO: "lineTo",
    QUADRATIC_CURVE_TO: "quadraticCurveTo",
    BEZIER_CURVE_TO: "bezierCurveTo",
    CSPLINE_THRU: "splineThru",
    ARC: "arc",
    ELLIPSE: "ellipse"
},
THREE.Path.prototype.fromPoints = function(t) {
    this.moveTo(t[0].x, t[0].y);
    for (var e = 1, i = t.length; i > e; e++)
        this.lineTo(t[e].x, t[e].y)
}
,
THREE.Path.prototype.moveTo = function(t, e) {
    var i = Array.prototype.slice.call(arguments);
    this.actions.push({
        action: THREE.PathActions.MOVE_TO,
        args: i
    })
}
,
THREE.Path.prototype.lineTo = function(t, e) {
    var i = Array.prototype.slice.call(arguments)
      , r = this.actions[this.actions.length - 1].args
      , r = new THREE.LineCurve(new THREE.Vector2(r[r.length - 2],r[r.length - 1]),new THREE.Vector2(t,e));
    this.curves.push(r),
    this.actions.push({
        action: THREE.PathActions.LINE_TO,
        args: i
    })
}
,
THREE.Path.prototype.quadraticCurveTo = function(t, e, i, r) {
    var n = Array.prototype.slice.call(arguments)
      , o = this.actions[this.actions.length - 1].args
      , o = new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length - 2],o[o.length - 1]),new THREE.Vector2(t,e),new THREE.Vector2(i,r));
    this.curves.push(o),
    this.actions.push({
        action: THREE.PathActions.QUADRATIC_CURVE_TO,
        args: n
    })
}
,
THREE.Path.prototype.bezierCurveTo = function(t, e, i, r, n, o) {
    var a = Array.prototype.slice.call(arguments)
      , s = this.actions[this.actions.length - 1].args
      , s = new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length - 2],s[s.length - 1]),new THREE.Vector2(t,e),new THREE.Vector2(i,r),new THREE.Vector2(n,o));
    this.curves.push(s),
    this.actions.push({
        action: THREE.PathActions.BEZIER_CURVE_TO,
        args: a
    })
}
,
THREE.Path.prototype.splineThru = function(t) {
    var e = Array.prototype.slice.call(arguments)
      , i = this.actions[this.actions.length - 1].args
      , i = [new THREE.Vector2(i[i.length - 2],i[i.length - 1])];
    Array.prototype.push.apply(i, t),
    i = new THREE.SplineCurve(i),
    this.curves.push(i),
    this.actions.push({
        action: THREE.PathActions.CSPLINE_THRU,
        args: e
    })
}
,
THREE.Path.prototype.arc = function(t, e, i, r, n, o) {
    var a = this.actions[this.actions.length - 1].args;
    this.absarc(t + a[a.length - 2], e + a[a.length - 1], i, r, n, o)
}
,
THREE.Path.prototype.absarc = function(t, e, i, r, n, o) {
    this.absellipse(t, e, i, i, r, n, o)
}
,
THREE.Path.prototype.ellipse = function(t, e, i, r, n, o, a) {
    var s = this.actions[this.actions.length - 1].args;
    this.absellipse(t + s[s.length - 2], e + s[s.length - 1], i, r, n, o, a)
}
,
THREE.Path.prototype.absellipse = function(t, e, i, r, n, o, a) {
    var s = Array.prototype.slice.call(arguments)
      , l = new THREE.EllipseCurve(t,e,i,r,n,o,a);
    this.curves.push(l),
    l = l.getPoint(1),
    s.push(l.x),
    s.push(l.y),
    this.actions.push({
        action: THREE.PathActions.ELLIPSE,
        args: s
    })
}
,
THREE.Path.prototype.getSpacedPoints = function(t, e) {
    t || (t = 40);
    for (var i = [], r = 0; t > r; r++)
        i.push(this.getPoint(r / t));
    return i
}
,
THREE.Path.prototype.getPoints = function(t, e) {
    if (this.useSpacedPoints)
        return console.log("tata"),
        this.getSpacedPoints(t, e);
    t = t || 12;
    var i, r, n, o, a, s, l, h, c, u, p, d, f, m = [];
    for (i = 0,
    r = this.actions.length; r > i; i++)
        switch (n = this.actions[i],
        o = n.action,
        n = n.args,
        o) {
        case THREE.PathActions.MOVE_TO:
            m.push(new THREE.Vector2(n[0],n[1]));
            break;
        case THREE.PathActions.LINE_TO:
            m.push(new THREE.Vector2(n[0],n[1]));
            break;
        case THREE.PathActions.QUADRATIC_CURVE_TO:
            for (a = n[2],
            s = n[3],
            c = n[0],
            u = n[1],
            0 < m.length ? (o = m[m.length - 1],
            p = o.x,
            d = o.y) : (o = this.actions[i - 1].args,
            p = o[o.length - 2],
            d = o[o.length - 1]),
            n = 1; t >= n; n++)
                f = n / t,
                o = THREE.Shape.Utils.b2(f, p, c, a),
                f = THREE.Shape.Utils.b2(f, d, u, s),
                m.push(new THREE.Vector2(o,f));
            break;
        case THREE.PathActions.BEZIER_CURVE_TO:
            for (a = n[4],
            s = n[5],
            c = n[0],
            u = n[1],
            l = n[2],
            h = n[3],
            0 < m.length ? (o = m[m.length - 1],
            p = o.x,
            d = o.y) : (o = this.actions[i - 1].args,
            p = o[o.length - 2],
            d = o[o.length - 1]),
            n = 1; t >= n; n++)
                f = n / t,
                o = THREE.Shape.Utils.b3(f, p, c, l, a),
                f = THREE.Shape.Utils.b3(f, d, u, h, s),
                m.push(new THREE.Vector2(o,f));
            break;
        case THREE.PathActions.CSPLINE_THRU:
            for (o = this.actions[i - 1].args,
            f = [new THREE.Vector2(o[o.length - 2],o[o.length - 1])],
            o = t * n[0].length,
            f = f.concat(n[0]),
            f = new THREE.SplineCurve(f),
            n = 1; o >= n; n++)
                m.push(f.getPointAt(n / o));
            break;
        case THREE.PathActions.ARC:
            for (a = n[0],
            s = n[1],
            u = n[2],
            l = n[3],
            o = n[4],
            c = !!n[5],
            p = o - l,
            d = 2 * t,
            n = 1; d >= n; n++)
                f = n / d,
                c || (f = 1 - f),
                f = l + f * p,
                o = a + u * Math.cos(f),
                f = s + u * Math.sin(f),
                m.push(new THREE.Vector2(o,f));
            break;
        case THREE.PathActions.ELLIPSE:
            for (a = n[0],
            s = n[1],
            u = n[2],
            h = n[3],
            l = n[4],
            o = n[5],
            c = !!n[6],
            p = o - l,
            d = 2 * t,
            n = 1; d >= n; n++)
                f = n / d,
                c || (f = 1 - f),
                f = l + f * p,
                o = a + u * Math.cos(f),
                f = s + h * Math.sin(f),
                m.push(new THREE.Vector2(o,f))
        }
    return i = m[m.length - 1],
    1e-10 > Math.abs(i.x - m[0].x) && 1e-10 > Math.abs(i.y - m[0].y) && m.splice(m.length - 1, 1),
    e && m.push(m[0]),
    m
}
,
THREE.Path.prototype.toShapes = function(t, e) {
    function i(t) {
        for (var e = [], i = 0, r = t.length; r > i; i++) {
            var n = t[i]
              , o = new THREE.Shape;
            o.actions = n.actions,
            o.curves = n.curves,
            e.push(o)
        }
        return e
    }
    function r(t, e) {
        for (var i = e.length, r = !1, n = i - 1, o = 0; i > o; n = o++) {
            var a = e[n]
              , s = e[o]
              , l = s.x - a.x
              , h = s.y - a.y;
            if (1e-10 < Math.abs(h)) {
                if (0 > h && (a = e[o],
                l = -l,
                s = e[n],
                h = -h),
                !(t.y < a.y || t.y > s.y))
                    if (t.y == a.y) {
                        if (t.x == a.x)
                            return !0
                    } else {
                        if (n = h * (t.x - a.x) - l * (t.y - a.y),
                        0 == n)
                            return !0;
                        0 > n || (r = !r)
                    }
            } else if (t.y == a.y && (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x))
                return !0
        }
        return r
    }
    var n = function(t) {
        var e, i, r, n, o = [], a = new THREE.Path;
        for (e = 0,
        i = t.length; i > e; e++)
            r = t[e],
            n = r.args,
            r = r.action,
            r == THREE.PathActions.MOVE_TO && 0 != a.actions.length && (o.push(a),
            a = new THREE.Path),
            a[r].apply(a, n);
        return 0 != a.actions.length && o.push(a),
        o
    }
    (this.actions);
    if (0 == n.length)
        return [];
    if (!0 === e)
        return i(n);
    var o, a, s, l = [];
    if (1 == n.length)
        return a = n[0],
        s = new THREE.Shape,
        s.actions = a.actions,
        s.curves = a.curves,
        l.push(s),
        l;
    var h = !THREE.Shape.Utils.isClockWise(n[0].getPoints())
      , h = t ? !h : h;
    s = [];
    var c, u = [], p = [], d = 0;
    u[d] = void 0,
    p[d] = [];
    var f, m;
    for (f = 0,
    m = n.length; m > f; f++)
        a = n[f],
        c = a.getPoints(),
        o = THREE.Shape.Utils.isClockWise(c),
        (o = t ? !o : o) ? (!h && u[d] && d++,
        u[d] = {
            s: new THREE.Shape,
            p: c
        },
        u[d].s.actions = a.actions,
        u[d].s.curves = a.curves,
        h && d++,
        p[d] = []) : p[d].push({
            h: a,
            p: c[0]
        });
    if (!u[0])
        return i(n);
    if (1 < u.length) {
        for (f = !1,
        m = [],
        a = 0,
        n = u.length; n > a; a++)
            s[a] = [];
        for (a = 0,
        n = u.length; n > a; a++)
            for (o = p[a],
            h = 0; h < o.length; h++) {
                d = o[h],
                c = !0;
                for (var g = 0; g < u.length; g++)
                    r(d.p, u[g].p) && (a != g && m.push({
                        froms: a,
                        tos: g,
                        hole: h
                    }),
                    c ? (c = !1,
                    s[g].push(d)) : f = !0);
                c && s[a].push(d)
            }
        0 < m.length && (f || (p = s))
    }
    for (f = 0,
    m = u.length; m > f; f++)
        for (s = u[f].s,
        l.push(s),
        a = p[f],
        n = 0,
        o = a.length; o > n; n++)
            s.holes.push(a[n].h);
    return l
}
,
THREE.Shape = function() {
    THREE.Path.apply(this, arguments),
    this.holes = []
}
,
THREE.Shape.prototype = Object.create(THREE.Path.prototype),
THREE.Shape.prototype.extrude = function(t) {
    return new THREE.ExtrudeGeometry(this,t)
}
,
THREE.Shape.prototype.makeGeometry = function(t) {
    return new THREE.ShapeGeometry(this,t)
}
,
THREE.Shape.prototype.getPointsHoles = function(t) {
    var e, i = this.holes.length, r = [];
    for (e = 0; i > e; e++)
        r[e] = this.holes[e].getTransformedPoints(t, this.bends);
    return r
}
,
THREE.Shape.prototype.getSpacedPointsHoles = function(t) {
    var e, i = this.holes.length, r = [];
    for (e = 0; i > e; e++)
        r[e] = this.holes[e].getTransformedSpacedPoints(t, this.bends);
    return r
}
,
THREE.Shape.prototype.extractAllPoints = function(t) {
    return {
        shape: this.getTransformedPoints(t),
        holes: this.getPointsHoles(t)
    }
}
,
THREE.Shape.prototype.extractPoints = function(t) {
    return this.useSpacedPoints ? this.extractAllSpacedPoints(t) : this.extractAllPoints(t)
}
,
THREE.Shape.prototype.extractAllSpacedPoints = function(t) {
    return {
        shape: this.getTransformedSpacedPoints(t),
        holes: this.getSpacedPointsHoles(t)
    }
}
,
THREE.Shape.Utils = {
    triangulateShape: function(t, e) {
        function i(t, e, i) {
            return t.x != e.x ? t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y
        }
        function r(t, e, r, n, o) {
            var a = e.x - t.x
              , s = e.y - t.y
              , l = n.x - r.x
              , h = n.y - r.y
              , c = t.x - r.x
              , u = t.y - r.y
              , p = s * l - a * h
              , d = s * c - a * u;
            if (1e-10 < Math.abs(p)) {
                if (p > 0) {
                    if (0 > d || d > p)
                        return [];
                    if (l = h * c - l * u,
                    0 > l || l > p)
                        return []
                } else {
                    if (d > 0 || p > d)
                        return [];
                    if (l = h * c - l * u,
                    l > 0 || p > l)
                        return []
                }
                return 0 == l ? !o || 0 != d && d != p ? [t] : [] : l == p ? !o || 0 != d && d != p ? [e] : [] : 0 == d ? [r] : d == p ? [n] : (o = l / p,
                [{
                    x: t.x + o * a,
                    y: t.y + o * s
                }])
            }
            return 0 != d || h * c != l * u ? [] : (s = 0 == a && 0 == s,
            l = 0 == l && 0 == h,
            s && l ? t.x != r.x || t.y != r.y ? [] : [t] : s ? i(r, n, t) ? [t] : [] : l ? i(t, e, r) ? [r] : [] : (0 != a ? (t.x < e.x ? (a = t,
            l = t.x,
            s = e,
            t = e.x) : (a = e,
            l = e.x,
            s = t,
            t = t.x),
            r.x < n.x ? (e = r,
            p = r.x,
            h = n,
            r = n.x) : (e = n,
            p = n.x,
            h = r,
            r = r.x)) : (t.y < e.y ? (a = t,
            l = t.y,
            s = e,
            t = e.y) : (a = e,
            l = e.y,
            s = t,
            t = t.y),
            r.y < n.y ? (e = r,
            p = r.y,
            h = n,
            r = n.y) : (e = n,
            p = n.y,
            h = r,
            r = r.y)),
            p >= l ? p > t ? [] : t == p ? o ? [] : [e] : r >= t ? [e, s] : [e, h] : l > r ? [] : l == r ? o ? [] : [a] : r >= t ? [a, s] : [a, h]))
        }
        function n(t, e, i, r) {
            var n = e.x - t.x
              , o = e.y - t.y;
            e = i.x - t.x,
            i = i.y - t.y;
            var a = r.x - t.x;
            return r = r.y - t.y,
            t = n * i - o * e,
            n = n * r - o * a,
            1e-10 < Math.abs(t) ? (e = a * i - r * e,
            t > 0 ? n >= 0 && e >= 0 : n >= 0 || e >= 0) : n > 0
        }
        var o, a, s, l, h, c = {};
        for (s = t.concat(),
        o = 0,
        a = e.length; a > o; o++)
            Array.prototype.push.apply(s, e[o]);
        for (o = 0,
        a = s.length; a > o; o++)
            h = s[o].x + ":" + s[o].y,
            void 0 !== c[h] && console.log("Duplicate point", h),
            c[h] = o;
        o = function(t, e) {
            function i(t, e) {
                var i = g.length - 1
                  , r = t - 1;
                0 > r && (r = i);
                var o = t + 1;
                return o > i && (o = 0),
                (i = n(g[t], g[r], g[o], s[e])) ? (i = s.length - 1,
                r = e - 1,
                0 > r && (r = i),
                o = e + 1,
                o > i && (o = 0),
                (i = n(s[e], s[r], s[o], g[t])) ? !0 : !1) : !1
            }
            function o(t, e) {
                var i, n;
                for (i = 0; i < g.length; i++)
                    if (n = i + 1,
                    n %= g.length,
                    n = r(t, e, g[i], g[n], !0),
                    0 < n.length)
                        return !0;
                return !1
            }
            function a(t, i) {
                var n, o, a, s;
                for (n = 0; n < E.length; n++)
                    for (o = e[E[n]],
                    a = 0; a < o.length; a++)
                        if (s = a + 1,
                        s %= o.length,
                        s = r(t, i, o[a], o[s], !0),
                        0 < s.length)
                            return !0;
                return !1
            }
            var s, l, h, c, u, p, d, f, m, g = t.concat(), E = [], y = [], v = 0;
            for (l = e.length; l > v; v++)
                E.push(v);
            d = 0;
            for (var _ = 2 * E.length; 0 < E.length; ) {
                if (_--,
                0 > _) {
                    console.log("Infinite Loop! Holes left:" + E.length + ", Probably Hole outside Shape!");
                    break
                }
                for (h = d; h < g.length; h++) {
                    for (c = g[h],
                    l = -1,
                    v = 0; v < E.length; v++)
                        if (u = E[v],
                        p = c.x + ":" + c.y + ":" + u,
                        void 0 === y[p]) {
                            for (s = e[u],
                            f = 0; f < s.length; f++)
                                if (u = s[f],
                                i(h, f) && !o(c, u) && !a(c, u)) {
                                    l = f,
                                    E.splice(v, 1),
                                    d = g.slice(0, h + 1),
                                    u = g.slice(h),
                                    f = s.slice(l),
                                    m = s.slice(0, l + 1),
                                    g = d.concat(f).concat(m).concat(u),
                                    d = h;
                                    break
                                }
                            if (l >= 0)
                                break;
                            y[p] = !0
                        }
                    if (l >= 0)
                        break
                }
            }
            return g
        }
        (t, e);
        var u = THREE.FontUtils.Triangulate(o, !1);
        for (o = 0,
        a = u.length; a > o; o++)
            for (l = u[o],
            s = 0; 3 > s; s++)
                h = l[s].x + ":" + l[s].y,
                h = c[h],
                void 0 !== h && (l[s] = h);
        return u.concat()
    },
    isClockWise: function(t) {
        return 0 > THREE.FontUtils.Triangulate.area(t)
    },
    b2p0: function(t, e) {
        var i = 1 - t;
        return i * i * e
    },
    b2p1: function(t, e) {
        return 2 * (1 - t) * t * e
    },
    b2p2: function(t, e) {
        return t * t * e
    },
    b2: function(t, e, i, r) {
        return this.b2p0(t, e) + this.b2p1(t, i) + this.b2p2(t, r)
    },
    b3p0: function(t, e) {
        var i = 1 - t;
        return i * i * i * e
    },
    b3p1: function(t, e) {
        var i = 1 - t;
        return 3 * i * i * t * e
    },
    b3p2: function(t, e) {
        return 3 * (1 - t) * t * t * e
    },
    b3p3: function(t, e) {
        return t * t * t * e
    },
    b3: function(t, e, i, r, n) {
        return this.b3p0(t, e) + this.b3p1(t, i) + this.b3p2(t, r) + this.b3p3(t, n)
    }
},
THREE.LineCurve = function(t, e) {
    this.v1 = t,
    this.v2 = e
}
,
THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.LineCurve.prototype.getPoint = function(t) {
    var e = this.v2.clone().sub(this.v1);
    return e.multiplyScalar(t).add(this.v1),
    e
}
,
THREE.LineCurve.prototype.getPointAt = function(t) {
    return this.getPoint(t)
}
,
THREE.LineCurve.prototype.getTangent = function(t) {
    return this.v2.clone().sub(this.v1).normalize()
}
,
THREE.QuadraticBezierCurve = function(t, e, i) {
    this.v0 = t,
    this.v1 = e,
    this.v2 = i
}
,
THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.QuadraticBezierCurve.prototype.getPoint = function(t) {
    var e;
    return e = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x),
    t = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y),
    new THREE.Vector2(e,t)
}
,
THREE.QuadraticBezierCurve.prototype.getTangent = function(t) {
    var e;
    return e = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x),
    t = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y),
    e = new THREE.Vector2(e,t),
    e.normalize(),
    e
}
,
THREE.CubicBezierCurve = function(t, e, i, r) {
    this.v0 = t,
    this.v1 = e,
    this.v2 = i,
    this.v3 = r
}
,
THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.CubicBezierCurve.prototype.getPoint = function(t) {
    var e;
    return e = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    t = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),
    new THREE.Vector2(e,t)
}
,
THREE.CubicBezierCurve.prototype.getTangent = function(t) {
    var e;
    return e = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    t = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),
    e = new THREE.Vector2(e,t),
    e.normalize(),
    e
}
,
THREE.SplineCurve = function(t) {
    this.points = void 0 == t ? [] : t
}
,
THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.SplineCurve.prototype.getPoint = function(t) {
    var e, i = new THREE.Vector2, r = [], n = this.points;
    return e = (n.length - 1) * t,
    t = Math.floor(e),
    e -= t,
    r[0] = 0 == t ? t : t - 1,
    r[1] = t,
    r[2] = t > n.length - 2 ? n.length - 1 : t + 1,
    r[3] = t > n.length - 3 ? n.length - 1 : t + 2,
    i.x = THREE.Curve.Utils.interpolate(n[r[0]].x, n[r[1]].x, n[r[2]].x, n[r[3]].x, e),
    i.y = THREE.Curve.Utils.interpolate(n[r[0]].y, n[r[1]].y, n[r[2]].y, n[r[3]].y, e),
    i
}
,
THREE.EllipseCurve = function(t, e, i, r, n, o, a) {
    this.aX = t,
    this.aY = e,
    this.xRadius = i,
    this.yRadius = r,
    this.aStartAngle = n,
    this.aEndAngle = o,
    this.aClockwise = a
}
,
THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.EllipseCurve.prototype.getPoint = function(t) {
    var e;
    return e = this.aEndAngle - this.aStartAngle,
    0 > e && (e += 2 * Math.PI),
    e > 2 * Math.PI && (e -= 2 * Math.PI),
    e = !0 === this.aClockwise ? this.aEndAngle + (1 - t) * (2 * Math.PI - e) : this.aStartAngle + t * e,
    t = this.aX + this.xRadius * Math.cos(e),
    e = this.aY + this.yRadius * Math.sin(e),
    new THREE.Vector2(t,e)
}
,
THREE.ArcCurve = function(t, e, i, r, n, o) {
    THREE.EllipseCurve.call(this, t, e, i, i, r, n, o)
}
,
THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype),
THREE.LineCurve3 = THREE.Curve.create(function(t, e) {
    this.v1 = t,
    this.v2 = e
}
, function(t) {
    var e = new THREE.Vector3;
    return e.subVectors(this.v2, this.v1),
    e.multiplyScalar(t),
    e.add(this.v1),
    e
}
),
THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(t, e, i) {
    this.v0 = t,
    this.v1 = e,
    this.v2 = i
}
, function(t) {
    var e, i;
    return e = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x),
    i = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y),
    t = THREE.Shape.Utils.b2(t, this.v0.z, this.v1.z, this.v2.z),
    new THREE.Vector3(e,i,t)
}
),
THREE.CubicBezierCurve3 = THREE.Curve.create(function(t, e, i, r) {
    this.v0 = t,
    this.v1 = e,
    this.v2 = i,
    this.v3 = r
}
, function(t) {
    var e, i;
    return e = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    i = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y),
    t = THREE.Shape.Utils.b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z),
    new THREE.Vector3(e,i,t)
}
),
THREE.SplineCurve3 = THREE.Curve.create(function(t) {
    this.points = void 0 == t ? [] : t
}
, function(t) {
    var e, i = new THREE.Vector3, r = [], n = this.points;
    t *= n.length - 1,
    e = Math.floor(t),
    t -= e,
    r[0] = 0 == e ? e : e - 1,
    r[1] = e,
    r[2] = e > n.length - 2 ? n.length - 1 : e + 1,
    r[3] = e > n.length - 3 ? n.length - 1 : e + 2,
    e = n[r[0]];
    var o = n[r[1]]
      , a = n[r[2]]
      , r = n[r[3]];
    return i.x = THREE.Curve.Utils.interpolate(e.x, o.x, a.x, r.x, t),
    i.y = THREE.Curve.Utils.interpolate(e.y, o.y, a.y, r.y, t),
    i.z = THREE.Curve.Utils.interpolate(e.z, o.z, a.z, r.z, t),
    i
}
),
THREE.ClosedSplineCurve3 = THREE.Curve.create(function(t) {
    this.points = void 0 == t ? [] : t
}
, function(t) {
    var e, i = new THREE.Vector3, r = [], n = this.points;
    return e = (n.length - 0) * t,
    t = Math.floor(e),
    e -= t,
    t += t > 0 ? 0 : (Math.floor(Math.abs(t) / n.length) + 1) * n.length,
    r[0] = (t - 1) % n.length,
    r[1] = t % n.length,
    r[2] = (t + 1) % n.length,
    r[3] = (t + 2) % n.length,
    i.x = THREE.Curve.Utils.interpolate(n[r[0]].x, n[r[1]].x, n[r[2]].x, n[r[3]].x, e),
    i.y = THREE.Curve.Utils.interpolate(n[r[0]].y, n[r[1]].y, n[r[2]].y, n[r[3]].y, e),
    i.z = THREE.Curve.Utils.interpolate(n[r[0]].z, n[r[1]].z, n[r[2]].z, n[r[3]].z, e),
    i
}
),
THREE.AnimationHandler = function() {
    var t = []
      , e = {}
      , i = {
        update: function(e) {
            for (var i = 0; i < t.length; i++)
                t[i].update(e)
        },
        addToUpdate: function(e) {
            -1 === t.indexOf(e) && t.push(e)
        },
        removeFromUpdate: function(e) {
            e = t.indexOf(e),
            -1 !== e && t.splice(e, 1)
        },
        add: function(t) {
            if (void 0 !== e[t.name] && console.log("THREE.AnimationHandler.add: Warning! " + t.name + " already exists in library. Overwriting."),
            e[t.name] = t,
            !0 !== t.initialized) {
                for (var i = 0; i < t.hierarchy.length; i++) {
                    for (var r = 0; r < t.hierarchy[i].keys.length; r++)
                        if (0 > t.hierarchy[i].keys[r].time && (t.hierarchy[i].keys[r].time = 0),
                        void 0 !== t.hierarchy[i].keys[r].rot && !(t.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)) {
                            var n = t.hierarchy[i].keys[r].rot;
                            t.hierarchy[i].keys[r].rot = (new THREE.Quaternion).fromArray(n)
                        }
                    if (t.hierarchy[i].keys.length && void 0 !== t.hierarchy[i].keys[0].morphTargets) {
                        for (n = {},
                        r = 0; r < t.hierarchy[i].keys.length; r++)
                            for (var o = 0; o < t.hierarchy[i].keys[r].morphTargets.length; o++) {
                                var a = t.hierarchy[i].keys[r].morphTargets[o];
                                n[a] = -1
                            }
                        for (t.hierarchy[i].usedMorphTargets = n,
                        r = 0; r < t.hierarchy[i].keys.length; r++) {
                            var s = {};
                            for (a in n) {
                                for (o = 0; o < t.hierarchy[i].keys[r].morphTargets.length; o++)
                                    if (t.hierarchy[i].keys[r].morphTargets[o] === a) {
                                        s[a] = t.hierarchy[i].keys[r].morphTargetsInfluences[o];
                                        break
                                    }
                                o === t.hierarchy[i].keys[r].morphTargets.length && (s[a] = 0)
                            }
                            t.hierarchy[i].keys[r].morphTargetsInfluences = s
                        }
                    }
                    for (r = 1; r < t.hierarchy[i].keys.length; r++)
                        t.hierarchy[i].keys[r].time === t.hierarchy[i].keys[r - 1].time && (t.hierarchy[i].keys.splice(r, 1),
                        r--);
                    for (r = 0; r < t.hierarchy[i].keys.length; r++)
                        t.hierarchy[i].keys[r].index = r
                }
                t.initialized = !0
            }
        },
        remove: function(t) {
            void 0 === e[t] && console.log("THREE.AnimationHandler.add: Warning! " + t + " doesn't exists in library. Doing nothing."),
            e[t] = void 0
        },
        get: function(t) {
            return "string" == typeof t ? e[t] ? e[t] : null  : void 0
        },
        parse: function(t) {
            var e = [];
            if (t instanceof THREE.SkinnedMesh)
                for (var i = 0; i < t.skeleton.bones.length; i++)
                    e.push(t.skeleton.bones[i]);
            else
                r(t, e);
            return e
        }
    }
      , r = function(t, e) {
        e.push(t);
        for (var i = 0; i < t.children.length; i++)
            r(t.children[i], e)
    }
    ;
    return i.LINEAR = 0,
    i.CATMULLROM = 1,
    i.CATMULLROM_FORWARD = 2,
    i
}
(),
THREE.Animation = function(t, e) {
    this.root = t,
    this.data = THREE.AnimationHandler.get(e),
    this.hierarchy = THREE.AnimationHandler.parse(t),
    this.currentTime = 0,
    this.timeScale = 1,
    this.isPlaying = !1,
    this.loop = this.isPaused = !0,
    this.weight = 0,
    this.interpolationType = THREE.AnimationHandler.LINEAR
}
,
THREE.Animation.prototype.keyTypes = ["pos", "rot", "scl"],
THREE.Animation.prototype.play = function(t, e) {
    this.currentTime = void 0 !== t ? t : 0,
    this.weight = void 0 !== e ? e : 1,
    this.isPlaying = !0,
    this.isPaused = !1,
    this.reset(),
    THREE.AnimationHandler.addToUpdate(this)
}
,
THREE.Animation.prototype.pause = function() {
    !0 === this.isPaused ? THREE.AnimationHandler.addToUpdate(this) : THREE.AnimationHandler.removeFromUpdate(this),
    this.isPaused = !this.isPaused
}
,
THREE.Animation.prototype.stop = function() {
    this.isPaused = this.isPlaying = !1,
    THREE.AnimationHandler.removeFromUpdate(this)
}
,
THREE.Animation.prototype.reset = function() {
    for (var t = 0, e = this.hierarchy.length; e > t; t++) {
        var i = this.hierarchy[t];
        i.matrixAutoUpdate = !0,
        void 0 === i.animationCache && (i.animationCache = {}),
        void 0 === i.animationCache[this.data.name] && (i.animationCache[this.data.name] = {},
        i.animationCache[this.data.name].prevKey = {
            pos: 0,
            rot: 0,
            scl: 0
        },
        i.animationCache[this.data.name].nextKey = {
            pos: 0,
            rot: 0,
            scl: 0
        },
        i.animationCache[this.data.name].originalMatrix = i instanceof THREE.Bone ? i.skinMatrix : i.matrix);
        for (var i = i.animationCache[this.data.name], r = 0; 3 > r; r++) {
            for (var n = this.keyTypes[r], o = this.data.hierarchy[t].keys[0], a = this.getNextKeyWith(n, t, 1); a.time < this.currentTime && a.index > o.index; )
                o = a,
                a = this.getNextKeyWith(n, t, a.index + 1);
            i.prevKey[n] = o,
            i.nextKey[n] = a
        }
    }
}
,
THREE.Animation.prototype.update = function() {
    var t = []
      , e = new THREE.Vector3
      , i = new THREE.Vector3
      , r = new THREE.Quaternion
      , n = function(t, e) {
        var i, r, n, a, s, l, h = [], c = [];
        return i = (t.length - 1) * e,
        r = Math.floor(i),
        i -= r,
        h[0] = 0 === r ? r : r - 1,
        h[1] = r,
        h[2] = r > t.length - 2 ? r : r + 1,
        h[3] = r > t.length - 3 ? r : r + 2,
        r = t[h[0]],
        a = t[h[1]],
        s = t[h[2]],
        l = t[h[3]],
        h = i * i,
        n = i * h,
        c[0] = o(r[0], a[0], s[0], l[0], i, h, n),
        c[1] = o(r[1], a[1], s[1], l[1], i, h, n),
        c[2] = o(r[2], a[2], s[2], l[2], i, h, n),
        c
    }
      , o = function(t, e, i, r, n, o, a) {
        return t = .5 * (i - t),
        r = .5 * (r - e),
        (2 * (e - i) + t + r) * a + (-3 * (e - i) - 2 * t - r) * o + t * n + e
    }
    ;
    return function(o) {
        if (!1 !== this.isPlaying && (this.currentTime += o * this.timeScale,
        0 !== this.weight)) {
            var a;
            if (o = this.data.length,
            !0 === this.loop && this.currentTime > o)
                this.currentTime %= o,
                this.reset();
            else if (!1 === this.loop && this.currentTime > o)
                return void this.stop();
            o = 0;
            for (var s = this.hierarchy.length; s > o; o++)
                for (var l = this.hierarchy[o], h = l.animationCache[this.data.name], c = 0; 3 > c; c++) {
                    a = this.keyTypes[c];
                    var u = h.prevKey[a]
                      , p = h.nextKey[a];
                    if (p.time <= this.currentTime) {
                        for (u = this.data.hierarchy[o].keys[0],
                        p = this.getNextKeyWith(a, o, 1); p.time < this.currentTime && p.index > u.index; )
                            u = p,
                            p = this.getNextKeyWith(a, o, p.index + 1);
                        h.prevKey[a] = u,
                        h.nextKey[a] = p
                    }
                    l.matrixAutoUpdate = !0,
                    l.matrixWorldNeedsUpdate = !0;
                    var d = (this.currentTime - u.time) / (p.time - u.time)
                      , f = u[a]
                      , m = p[a];
                    0 > d && (d = 0),
                    d > 1 && (d = 1),
                    "pos" === a ? (a = l.position,
                    this.interpolationType === THREE.AnimationHandler.LINEAR ? (i.x = f[0] + (m[0] - f[0]) * d,
                    i.y = f[1] + (m[1] - f[1]) * d,
                    i.z = f[2] + (m[2] - f[2]) * d,
                    l instanceof THREE.Bone && (u = this.weight / (this.weight + l.accumulatedPosWeight),
                    a.lerp(i, u),
                    l.accumulatedPosWeight += this.weight)) : (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) && (t[0] = this.getPrevKeyWith("pos", o, u.index - 1).pos,
                    t[1] = f,
                    t[2] = m,
                    t[3] = this.getNextKeyWith("pos", o, p.index + 1).pos,
                    d = .33 * d + .33,
                    p = n(t, d),
                    l instanceof THREE.Bone ? (u = this.weight / (this.weight + l.accumulatedPosWeight),
                    l.accumulatedPosWeight += this.weight) : u = 1,
                    a.x += (p[0] - a.x) * u,
                    a.y += (p[1] - a.y) * u,
                    a.z += (p[2] - a.z) * u,
                    this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD && (d = n(t, 1.01 * d),
                    e.set(d[0], d[1], d[2]),
                    e.sub(a),
                    e.y = 0,
                    e.normalize(),
                    a = Math.atan2(e.x, e.z),
                    l.rotation.set(0, a, 0)))) : "rot" === a ? (THREE.Quaternion.slerp(f, m, r, d),
                    l instanceof THREE.Bone ? 0 === l.accumulatedRotWeight ? (l.quaternion.copy(r),
                    l.accumulatedRotWeight = this.weight) : (u = this.weight / (this.weight + l.accumulatedRotWeight),
                    THREE.Quaternion.slerp(l.quaternion, r, l.quaternion, u),
                    l.accumulatedRotWeight += this.weight) : l.quaternion.copy(r)) : "scl" === a && (a = l.scale,
                    i.x = f[0] + (m[0] - f[0]) * d,
                    i.y = f[1] + (m[1] - f[1]) * d,
                    i.z = f[2] + (m[2] - f[2]) * d,
                    l instanceof THREE.Bone && (u = this.weight / (this.weight + l.accumulatedSclWeight),
                    a.lerp(i, u),
                    l.accumulatedSclWeight += this.weight))
                }
            return !0
        }
    }
}
(),
THREE.Animation.prototype.getNextKeyWith = function(t, e, i) {
    var r = this.data.hierarchy[e].keys;
    for (i = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? i < r.length - 1 ? i : r.length - 1 : i % r.length; i < r.length; i++)
        if (void 0 !== r[i][t])
            return r[i];
    return this.data.hierarchy[e].keys[0]
}
,
THREE.Animation.prototype.getPrevKeyWith = function(t, e, i) {
    var r = this.data.hierarchy[e].keys;
    for (i = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? i > 0 ? i : 0 : i >= 0 ? i : i + r.length; i >= 0; i--)
        if (void 0 !== r[i][t])
            return r[i];
    return this.data.hierarchy[e].keys[r.length - 1]
}
,
THREE.KeyFrameAnimation = function(t, e) {
    this.root = t,
    this.data = THREE.AnimationHandler.get(e),
    this.hierarchy = THREE.AnimationHandler.parse(t),
    this.currentTime = 0,
    this.timeScale = .001,
    this.isPlaying = !1,
    this.loop = this.isPaused = !0;
    for (var i = 0, r = this.hierarchy.length; r > i; i++) {
        var n = this.data.hierarchy[i].sids
          , o = this.hierarchy[i];
        if (this.data.hierarchy[i].keys.length && n) {
            for (var a = 0; a < n.length; a++) {
                var s = n[a]
                  , l = this.getNextKeyWith(s, i, 0);
                l && l.apply(s)
            }
            o.matrixAutoUpdate = !1,
            this.data.hierarchy[i].node.updateMatrix(),
            o.matrixWorldNeedsUpdate = !0
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.play = function(t) {
    if (this.currentTime = void 0 !== t ? t : 0,
    !1 === this.isPlaying) {
        this.isPlaying = !0;
        var e, i, r = this.hierarchy.length;
        for (t = 0; r > t; t++)
            e = this.hierarchy[t],
            i = this.data.hierarchy[t],
            void 0 === i.animationCache && (i.animationCache = {},
            i.animationCache.prevKey = null ,
            i.animationCache.nextKey = null ,
            i.animationCache.originalMatrix = e instanceof THREE.Bone ? e.skinMatrix : e.matrix),
            e = this.data.hierarchy[t].keys,
            e.length && (i.animationCache.prevKey = e[0],
            i.animationCache.nextKey = e[1],
            this.startTime = Math.min(e[0].time, this.startTime),
            this.endTime = Math.max(e[e.length - 1].time, this.endTime));
        this.update(0)
    }
    this.isPaused = !1,
    THREE.AnimationHandler.addToUpdate(this)
}
,
THREE.KeyFrameAnimation.prototype.pause = function() {
    this.isPaused ? THREE.AnimationHandler.addToUpdate(this) : THREE.AnimationHandler.removeFromUpdate(this),
    this.isPaused = !this.isPaused
}
,
THREE.KeyFrameAnimation.prototype.stop = function() {
    this.isPaused = this.isPlaying = !1,
    THREE.AnimationHandler.removeFromUpdate(this);
    for (var t = 0; t < this.data.hierarchy.length; t++) {
        var e = this.hierarchy[t]
          , i = this.data.hierarchy[t];
        if (void 0 !== i.animationCache) {
            var r = i.animationCache.originalMatrix;
            e instanceof THREE.Bone ? (r.copy(e.skinMatrix),
            e.skinMatrix = r) : (r.copy(e.matrix),
            e.matrix = r),
            delete i.animationCache
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.update = function(t) {
    if (!1 !== this.isPlaying) {
        this.currentTime += t * this.timeScale,
        t = this.data.length,
        !0 === this.loop && this.currentTime > t && (this.currentTime %= t),
        this.currentTime = Math.min(this.currentTime, t),
        t = 0;
        for (var e = this.hierarchy.length; e > t; t++) {
            var i = this.hierarchy[t]
              , r = this.data.hierarchy[t]
              , n = r.keys
              , r = r.animationCache;
            if (n.length) {
                var o = r.prevKey
                  , a = r.nextKey;
                if (a.time <= this.currentTime) {
                    for (; a.time < this.currentTime && a.index > o.index; )
                        o = a,
                        a = n[o.index + 1];
                    r.prevKey = o,
                    r.nextKey = a
                }
                a.time >= this.currentTime ? o.interpolate(a, this.currentTime) : o.interpolate(a, a.time),
                this.data.hierarchy[t].node.updateMatrix(),
                i.matrixWorldNeedsUpdate = !0
            }
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.getNextKeyWith = function(t, e, i) {
    for (e = this.data.hierarchy[e].keys,
    i %= e.length; i < e.length; i++)
        if (e[i].hasTarget(t))
            return e[i];
    return e[0]
}
,
THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function(t, e, i) {
    for (e = this.data.hierarchy[e].keys,
    i = i >= 0 ? i : i + e.length; i >= 0; i--)
        if (e[i].hasTarget(t))
            return e[i];
    return e[e.length - 1]
}
,
THREE.MorphAnimation = function(t) {
    this.mesh = t,
    this.frames = t.morphTargetInfluences.length,
    this.currentTime = 0,
    this.duration = 1e3,
    this.loop = !0,
    this.isPlaying = !1
}
,
THREE.MorphAnimation.prototype = {
    play: function() {
        this.isPlaying = !0
    },
    pause: function() {
        this.isPlaying = !1
    },
    update: function() {
        var t = 0
          , e = 0;
        return function(i) {
            if (!1 !== this.isPlaying) {
                this.currentTime += i,
                !0 === this.loop && this.currentTime > this.duration && (this.currentTime %= this.duration),
                this.currentTime = Math.min(this.currentTime, this.duration),
                i = this.duration / this.frames;
                var r = Math.floor(this.currentTime / i);
                r != e && (this.mesh.morphTargetInfluences[t] = 0,
                this.mesh.morphTargetInfluences[e] = 1,
                this.mesh.morphTargetInfluences[r] = 0,
                t = e,
                e = r),
                this.mesh.morphTargetInfluences[r] = this.currentTime % i / i,
                this.mesh.morphTargetInfluences[t] = 1 - this.mesh.morphTargetInfluences[r]
            }
        }
    }
    ()
},
THREE.CubeCamera = function(t, e, i) {
    THREE.Object3D.call(this);
    var r = new THREE.PerspectiveCamera(90,1,t,e);
    r.up.set(0, -1, 0),
    r.lookAt(new THREE.Vector3(1,0,0)),
    this.add(r);
    var n = new THREE.PerspectiveCamera(90,1,t,e);
    n.up.set(0, -1, 0),
    n.lookAt(new THREE.Vector3(-1,0,0)),
    this.add(n);
    var o = new THREE.PerspectiveCamera(90,1,t,e);
    o.up.set(0, 0, 1),
    o.lookAt(new THREE.Vector3(0,1,0)),
    this.add(o);
    var a = new THREE.PerspectiveCamera(90,1,t,e);
    a.up.set(0, 0, -1),
    a.lookAt(new THREE.Vector3(0,-1,0)),
    this.add(a);
    var s = new THREE.PerspectiveCamera(90,1,t,e);
    s.up.set(0, -1, 0),
    s.lookAt(new THREE.Vector3(0,0,1)),
    this.add(s);
    var l = new THREE.PerspectiveCamera(90,1,t,e);
    l.up.set(0, -1, 0),
    l.lookAt(new THREE.Vector3(0,0,-1)),
    this.add(l),
    this.renderTarget = new THREE.WebGLRenderTargetCube(i,i,{
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    }),
    this.updateCubeMap = function(t, e) {
        var i = this.renderTarget
          , h = i.generateMipmaps;
        i.generateMipmaps = !1,
        i.activeCubeFace = 0,
        t.render(e, r, i),
        i.activeCubeFace = 1,
        t.render(e, n, i),
        i.activeCubeFace = 2,
        t.render(e, o, i),
        i.activeCubeFace = 3,
        t.render(e, a, i),
        i.activeCubeFace = 4,
        t.render(e, s, i),
        i.generateMipmaps = h,
        i.activeCubeFace = 5,
        t.render(e, l, i)
    }
}
,
THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype),
THREE.CombinedCamera = function(t, e, i, r, n, o, a) {
    THREE.Camera.call(this),
    this.fov = i,
    this.left = -t / 2,
    this.right = t / 2,
    this.top = e / 2,
    this.bottom = -e / 2,
    this.cameraO = new THREE.OrthographicCamera(t / -2,t / 2,e / 2,e / -2,o,a),
    this.cameraP = new THREE.PerspectiveCamera(i,t / e,r,n),
    this.zoom = 1,
    this.toPerspective()
}
,
THREE.CombinedCamera.prototype = Object.create(THREE.Camera.prototype),
THREE.CombinedCamera.prototype.toPerspective = function() {
    this.near = this.cameraP.near,
    this.far = this.cameraP.far,
    this.cameraP.fov = this.fov / this.zoom,
    this.cameraP.updateProjectionMatrix(),
    this.projectionMatrix = this.cameraP.projectionMatrix,
    this.inPerspectiveMode = !0,
    this.inOrthographicMode = !1
}
,
THREE.CombinedCamera.prototype.toOrthographic = function() {
    var t = this.cameraP.aspect
      , e = (this.cameraP.near + this.cameraP.far) / 2
      , e = Math.tan(this.fov / 2) * e
      , t = 2 * e * t / 2
      , e = e / this.zoom
      , t = t / this.zoom;
    this.cameraO.left = -t,
    this.cameraO.right = t,
    this.cameraO.top = e,
    this.cameraO.bottom = -e,
    this.cameraO.updateProjectionMatrix(),
    this.near = this.cameraO.near,
    this.far = this.cameraO.far,
    this.projectionMatrix = this.cameraO.projectionMatrix,
    this.inPerspectiveMode = !1,
    this.inOrthographicMode = !0
}
,
THREE.CombinedCamera.prototype.setSize = function(t, e) {
    this.cameraP.aspect = t / e,
    this.left = -t / 2,
    this.right = t / 2,
    this.top = e / 2,
    this.bottom = -e / 2
}
,
THREE.CombinedCamera.prototype.setFov = function(t) {
    this.fov = t,
    this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
}
,
THREE.CombinedCamera.prototype.updateProjectionMatrix = function() {
    this.inPerspectiveMode ? this.toPerspective() : (this.toPerspective(),
    this.toOrthographic())
}
,
THREE.CombinedCamera.prototype.setLens = function(t, e) {
    void 0 === e && (e = 24);
    var i = 2 * THREE.Math.radToDeg(Math.atan(e / (2 * t)));
    return this.setFov(i),
    i
}
,
THREE.CombinedCamera.prototype.setZoom = function(t) {
    this.zoom = t,
    this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
}
,
THREE.CombinedCamera.prototype.toFrontView = function() {
    this.rotation.x = 0,
    this.rotation.y = 0,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.CombinedCamera.prototype.toBackView = function() {
    this.rotation.x = 0,
    this.rotation.y = Math.PI,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.CombinedCamera.prototype.toLeftView = function() {
    this.rotation.x = 0,
    this.rotation.y = -Math.PI / 2,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.CombinedCamera.prototype.toRightView = function() {
    this.rotation.x = 0,
    this.rotation.y = Math.PI / 2,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.CombinedCamera.prototype.toTopView = function() {
    this.rotation.x = -Math.PI / 2,
    this.rotation.y = 0,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.CombinedCamera.prototype.toBottomView = function() {
    this.rotation.x = Math.PI / 2,
    this.rotation.y = 0,
    this.rotation.z = 0,
    this.rotationAutoUpdate = !1
}
,
THREE.BoxGeometry = function(t, e, i, r, n, o) {
    function a(t, e, i, r, n, o, a, l) {
        var h, c = s.widthSegments, u = s.heightSegments, p = n / 2, d = o / 2, f = s.vertices.length;
        "x" === t && "y" === e || "y" === t && "x" === e ? h = "z" : "x" === t && "z" === e || "z" === t && "x" === e ? (h = "y",
        u = s.depthSegments) : ("z" === t && "y" === e || "y" === t && "z" === e) && (h = "x",
        c = s.depthSegments);
        var m = c + 1
          , g = u + 1
          , E = n / c
          , y = o / u
          , v = new THREE.Vector3;
        for (v[h] = a > 0 ? 1 : -1,
        n = 0; g > n; n++)
            for (o = 0; m > o; o++) {
                var _ = new THREE.Vector3;
                _[t] = (o * E - p) * i,
                _[e] = (n * y - d) * r,
                _[h] = a,
                s.vertices.push(_)
            }
        for (n = 0; u > n; n++)
            for (o = 0; c > o; o++)
                d = o + m * n,
                t = o + m * (n + 1),
                e = o + 1 + m * (n + 1),
                i = o + 1 + m * n,
                r = new THREE.Vector2(o / c,1 - n / u),
                a = new THREE.Vector2(o / c,1 - (n + 1) / u),
                h = new THREE.Vector2((o + 1) / c,1 - (n + 1) / u),
                p = new THREE.Vector2((o + 1) / c,1 - n / u),
                d = new THREE.Face3(d + f,t + f,i + f),
                d.normal.copy(v),
                d.vertexNormals.push(v.clone(), v.clone(), v.clone()),
                d.materialIndex = l,
                s.faces.push(d),
                s.faceVertexUvs[0].push([r, a, p]),
                d = new THREE.Face3(t + f,e + f,i + f),
                d.normal.copy(v),
                d.vertexNormals.push(v.clone(), v.clone(), v.clone()),
                d.materialIndex = l,
                s.faces.push(d),
                s.faceVertexUvs[0].push([a.clone(), h, p.clone()])
    }
    THREE.Geometry.call(this),
    this.parameters = {
        width: t,
        height: e,
        depth: i,
        widthSegments: r,
        heightSegments: n,
        depthSegments: o
    },
    this.widthSegments = r || 1,
    this.heightSegments = n || 1,
    this.depthSegments = o || 1;
    var s = this;
    r = t / 2,
    n = e / 2,
    o = i / 2,
    a("z", "y", -1, -1, i, e, r, 0),
    a("z", "y", 1, -1, i, e, -r, 1),
    a("x", "z", 1, 1, t, i, n, 2),
    a("x", "z", 1, -1, t, i, -n, 3),
    a("x", "y", 1, -1, t, e, o, 4),
    a("x", "y", -1, -1, t, e, -o, 5),
    this.mergeVertices()
}
,
THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CircleGeometry = function(t, e, i, r) {
    THREE.Geometry.call(this),
    this.parameters = {
        radius: t,
        segments: e,
        thetaStart: i,
        thetaLength: r
    },
    t = t || 50,
    e = void 0 !== e ? Math.max(3, e) : 8,
    i = void 0 !== i ? i : 0,
    r = void 0 !== r ? r : 2 * Math.PI;
    var n, o = [];
    n = new THREE.Vector3;
    var a = new THREE.Vector2(.5,.5);
    for (this.vertices.push(n),
    o.push(a),
    n = 0; e >= n; n++) {
        var s = new THREE.Vector3
          , l = i + n / e * r;
        s.x = t * Math.cos(l),
        s.y = t * Math.sin(l),
        this.vertices.push(s),
        o.push(new THREE.Vector2((s.x / t + 1) / 2,(s.y / t + 1) / 2))
    }
    for (i = new THREE.Vector3(0,0,1),
    n = 1; e >= n; n++)
        this.faces.push(new THREE.Face3(n,n + 1,0,[i.clone(), i.clone(), i.clone()])),
        this.faceVertexUvs[0].push([o[n].clone(), o[n + 1].clone(), a.clone()]);
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,t)
}
,
THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CubeGeometry = function(t, e, i, r, n, o) {
    return console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead."),
    new THREE.BoxGeometry(t,e,i,r,n,o)
}
,
THREE.CylinderGeometry = function(t, e, i, r, n, o) {
    THREE.Geometry.call(this),
    this.parameters = {
        radiusTop: t,
        radiusBottom: e,
        height: i,
        radialSegments: r,
        heightSegments: n,
        openEnded: o
    },
    t = void 0 !== t ? t : 20,
    e = void 0 !== e ? e : 20,
    i = void 0 !== i ? i : 100,
    r = r || 8,
    n = n || 1,
    o = void 0 !== o ? o : !1;
    var a, s, l = i / 2, h = [], c = [];
    for (s = 0; n >= s; s++) {
        var u = []
          , p = []
          , d = s / n
          , f = d * (e - t) + t;
        for (a = 0; r >= a; a++) {
            var m = a / r
              , g = new THREE.Vector3;
            g.x = f * Math.sin(m * Math.PI * 2),
            g.y = -d * i + l,
            g.z = f * Math.cos(m * Math.PI * 2),
            this.vertices.push(g),
            u.push(this.vertices.length - 1),
            p.push(new THREE.Vector2(m,1 - d))
        }
        h.push(u),
        c.push(p)
    }
    for (i = (e - t) / i,
    a = 0; r > a; a++)
        for (0 !== t ? (u = this.vertices[h[0][a]].clone(),
        p = this.vertices[h[0][a + 1]].clone()) : (u = this.vertices[h[1][a]].clone(),
        p = this.vertices[h[1][a + 1]].clone()),
        u.setY(Math.sqrt(u.x * u.x + u.z * u.z) * i).normalize(),
        p.setY(Math.sqrt(p.x * p.x + p.z * p.z) * i).normalize(),
        s = 0; n > s; s++) {
            var d = h[s][a]
              , f = h[s + 1][a]
              , m = h[s + 1][a + 1]
              , g = h[s][a + 1]
              , E = u.clone()
              , y = u.clone()
              , v = p.clone()
              , _ = p.clone()
              , x = c[s][a].clone()
              , T = c[s + 1][a].clone()
              , w = c[s + 1][a + 1].clone()
              , b = c[s][a + 1].clone();
            this.faces.push(new THREE.Face3(d,f,g,[E, y, _])),
            this.faceVertexUvs[0].push([x, T, b]),
            this.faces.push(new THREE.Face3(f,m,g,[y.clone(), v, _.clone()])),
            this.faceVertexUvs[0].push([T.clone(), w, b.clone()])
        }
    if (!1 === o && t > 0)
        for (this.vertices.push(new THREE.Vector3(0,l,0)),
        a = 0; r > a; a++)
            d = h[0][a],
            f = h[0][a + 1],
            m = this.vertices.length - 1,
            E = new THREE.Vector3(0,1,0),
            y = new THREE.Vector3(0,1,0),
            v = new THREE.Vector3(0,1,0),
            x = c[0][a].clone(),
            T = c[0][a + 1].clone(),
            w = new THREE.Vector2(T.x,0),
            this.faces.push(new THREE.Face3(d,f,m,[E, y, v])),
            this.faceVertexUvs[0].push([x, T, w]);
    if (!1 === o && e > 0)
        for (this.vertices.push(new THREE.Vector3(0,-l,0)),
        a = 0; r > a; a++)
            d = h[s][a + 1],
            f = h[s][a],
            m = this.vertices.length - 1,
            E = new THREE.Vector3(0,-1,0),
            y = new THREE.Vector3(0,-1,0),
            v = new THREE.Vector3(0,-1,0),
            x = c[s][a + 1].clone(),
            T = c[s][a].clone(),
            w = new THREE.Vector2(T.x,1),
            this.faces.push(new THREE.Face3(d,f,m,[E, y, v])),
            this.faceVertexUvs[0].push([x, T, w]);
    this.computeFaceNormals()
}
,
THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ExtrudeGeometry = function(t, e) {
    "undefined" != typeof t && (THREE.Geometry.call(this),
    t = t instanceof Array ? t : [t],
    this.shapebb = t[t.length - 1].getBoundingBox(),
    this.addShapeList(t, e),
    this.computeFaceNormals())
}
,
THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ExtrudeGeometry.prototype.addShapeList = function(t, e) {
    for (var i = t.length, r = 0; i > r; r++)
        this.addShape(t[r], e)
}
,
THREE.ExtrudeGeometry.prototype.addShape = function(t, e) {
    function i(t, e, i) {
        return e || console.log("die"),
        e.clone().multiplyScalar(i).add(t)
    }
    function r(t, e, i) {
        var r = THREE.Math.sign
          , n = 1
          , n = t.x - e.x
          , o = t.y - e.y
          , a = i.x - t.x
          , s = i.y - t.y
          , l = n * n + o * o;
        if (1e-10 < Math.abs(n * s - o * a)) {
            var h = Math.sqrt(l)
              , r = Math.sqrt(a * a + s * s)
              , l = e.x - o / h;
            if (e = e.y + n / h,
            a = ((i.x - s / r - l) * s - (i.y + a / r - e) * a) / (n * s - o * a),
            i = l + n * a - t.x,
            t = e + o * a - t.y,
            n = i * i + t * t,
            2 >= n)
                return new THREE.Vector2(i,t);
            n = Math.sqrt(n / 2)
        } else
            t = !1,
            n > 1e-10 ? a > 1e-10 && (t = !0) : -1e-10 > n ? -1e-10 > a && (t = !0) : r(o) == r(s) && (t = !0),
            t ? (i = -o,
            t = n,
            n = Math.sqrt(l)) : (i = n,
            t = o,
            n = Math.sqrt(l / 2));
        return new THREE.Vector2(i / n,t / n)
    }
    function n(i, r) {
        var n, o;
        for (I = i.length; 0 <= --I; ) {
            n = I,
            o = I - 1,
            0 > o && (o = i.length - 1);
            for (var a = 0, s = y + 2 * m, a = 0; s > a; a++) {
                var l = z * a
                  , h = z * (a + 1)
                  , c = r + n + l
                  , l = r + o + l
                  , u = r + o + h
                  , h = r + n + h
                  , p = i
                  , d = a
                  , f = s
                  , g = n
                  , E = o
                  , c = c + M
                  , l = l + M
                  , u = u + M
                  , h = h + M;
                S.faces.push(new THREE.Face3(c,l,h,null ,null ,T)),
                S.faces.push(new THREE.Face3(l,u,h,null ,null ,T)),
                c = w.generateSideWallUV(S, t, p, e, c, l, u, h, d, f, g, E),
                S.faceVertexUvs[0].push([c[0], c[1], c[3]]),
                S.faceVertexUvs[0].push([c[1], c[2], c[3]])
            }
        }
    }
    function o(t, e, i) {
        S.vertices.push(new THREE.Vector3(t,e,i))
    }
    function a(i, r, n, o) {
        i += M,
        r += M,
        n += M,
        S.faces.push(new THREE.Face3(i,r,n,null ,null ,x)),
        i = o ? w.generateBottomUV(S, t, e, i, r, n) : w.generateTopUV(S, t, e, i, r, n),
        S.faceVertexUvs[0].push(i)
    }
    var s, l, h, c, u, p = void 0 !== e.amount ? e.amount : 100, d = void 0 !== e.bevelThickness ? e.bevelThickness : 6, f = void 0 !== e.bevelSize ? e.bevelSize : d - 2, m = void 0 !== e.bevelSegments ? e.bevelSegments : 3, g = void 0 !== e.bevelEnabled ? e.bevelEnabled : !0, E = void 0 !== e.curveSegments ? e.curveSegments : 12, y = void 0 !== e.steps ? e.steps : 1, v = e.extrudePath, _ = !1, x = e.material, T = e.extrudeMaterial, w = void 0 !== e.UVGenerator ? e.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
    v && (s = v.getSpacedPoints(y),
    _ = !0,
    g = !1,
    l = void 0 !== e.frames ? e.frames : new THREE.TubeGeometry.FrenetFrames(v,y,!1),
    h = new THREE.Vector3,
    c = new THREE.Vector3,
    u = new THREE.Vector3),
    g || (f = d = m = 0);
    var b, R, H, S = this, M = this.vertices.length, v = t.extractPoints(E), E = v.shape, C = v.holes;
    if (v = !THREE.Shape.Utils.isClockWise(E)) {
        for (E = E.reverse(),
        R = 0,
        H = C.length; H > R; R++)
            b = C[R],
            THREE.Shape.Utils.isClockWise(b) && (C[R] = b.reverse());
        v = !1
    }
    var A = THREE.Shape.Utils.triangulateShape(E, C)
      , P = E;
    for (R = 0,
    H = C.length; H > R; R++)
        b = C[R],
        E = E.concat(b);
    var L, D, k, O, F, N, z = E.length, V = A.length, v = [], I = 0;
    for (k = P.length,
    L = k - 1,
    D = I + 1; k > I; I++,
    L++,
    D++)
        L === k && (L = 0),
        D === k && (D = 0),
        v[I] = r(P[I], P[L], P[D]);
    var U, B = [], j = v.concat();
    for (R = 0,
    H = C.length; H > R; R++) {
        for (b = C[R],
        U = [],
        I = 0,
        k = b.length,
        L = k - 1,
        D = I + 1; k > I; I++,
        L++,
        D++)
            L === k && (L = 0),
            D === k && (D = 0),
            U[I] = r(b[I], b[L], b[D]);
        B.push(U),
        j = j.concat(U)
    }
    for (L = 0; m > L; L++) {
        for (k = L / m,
        O = d * (1 - k),
        D = f * Math.sin(k * Math.PI / 2),
        I = 0,
        k = P.length; k > I; I++)
            F = i(P[I], v[I], D),
            o(F.x, F.y, -O);
        for (R = 0,
        H = C.length; H > R; R++)
            for (b = C[R],
            U = B[R],
            I = 0,
            k = b.length; k > I; I++)
                F = i(b[I], U[I], D),
                o(F.x, F.y, -O)
    }
    for (D = f,
    I = 0; z > I; I++)
        F = g ? i(E[I], j[I], D) : E[I],
        _ ? (c.copy(l.normals[0]).multiplyScalar(F.x),
        h.copy(l.binormals[0]).multiplyScalar(F.y),
        u.copy(s[0]).add(c).add(h),
        o(u.x, u.y, u.z)) : o(F.x, F.y, 0);
    for (k = 1; y >= k; k++)
        for (I = 0; z > I; I++)
            F = g ? i(E[I], j[I], D) : E[I],
            _ ? (c.copy(l.normals[k]).multiplyScalar(F.x),
            h.copy(l.binormals[k]).multiplyScalar(F.y),
            u.copy(s[k]).add(c).add(h),
            o(u.x, u.y, u.z)) : o(F.x, F.y, p / y * k);
    for (L = m - 1; L >= 0; L--) {
        for (k = L / m,
        O = d * (1 - k),
        D = f * Math.sin(k * Math.PI / 2),
        I = 0,
        k = P.length; k > I; I++)
            F = i(P[I], v[I], D),
            o(F.x, F.y, p + O);
        for (R = 0,
        H = C.length; H > R; R++)
            for (b = C[R],
            U = B[R],
            I = 0,
            k = b.length; k > I; I++)
                F = i(b[I], U[I], D),
                _ ? o(F.x, F.y + s[y - 1].y, s[y - 1].x + O) : o(F.x, F.y, p + O)
    }
    !function() {
        if (g) {
            var t;
            for (t = 0 * z,
            I = 0; V > I; I++)
                N = A[I],
                a(N[2] + t, N[1] + t, N[0] + t, !0);
            for (t = y + 2 * m,
            t *= z,
            I = 0; V > I; I++)
                N = A[I],
                a(N[0] + t, N[1] + t, N[2] + t, !1)
        } else {
            for (I = 0; V > I; I++)
                N = A[I],
                a(N[2], N[1], N[0], !0);
            for (I = 0; V > I; I++)
                N = A[I],
                a(N[0] + z * y, N[1] + z * y, N[2] + z * y, !1)
        }
    }
    (),
    function() {
        var t = 0;
        for (n(P, t),
        t += P.length,
        R = 0,
        H = C.length; H > R; R++)
            b = C[R],
            n(b, t),
            t += b.length
    }
    ()
}
,
THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(t, e, i, r, n, o) {
        return e = t.vertices[n].x,
        n = t.vertices[n].y,
        i = t.vertices[o].x,
        o = t.vertices[o].y,
        [new THREE.Vector2(t.vertices[r].x,t.vertices[r].y), new THREE.Vector2(e,n), new THREE.Vector2(i,o)]
    },
    generateBottomUV: function(t, e, i, r, n, o) {
        return this.generateTopUV(t, e, i, r, n, o)
    },
    generateSideWallUV: function(t, e, i, r, n, o, a, s, l, h, c, u) {
        e = t.vertices[n].x,
        i = t.vertices[n].y,
        n = t.vertices[n].z,
        r = t.vertices[o].x,
        l = t.vertices[o].y,
        o = t.vertices[o].z,
        h = t.vertices[a].x,
        c = t.vertices[a].y,
        a = t.vertices[a].z,
        u = t.vertices[s].x;
        var p = t.vertices[s].y;
        return t = t.vertices[s].z,
        .01 > Math.abs(i - l) ? [new THREE.Vector2(e,1 - n), new THREE.Vector2(r,1 - o), new THREE.Vector2(h,1 - a), new THREE.Vector2(u,1 - t)] : [new THREE.Vector2(i,1 - n), new THREE.Vector2(l,1 - o), new THREE.Vector2(c,1 - a), new THREE.Vector2(p,1 - t)]
    }
},
THREE.ExtrudeGeometry.__v1 = new THREE.Vector2,
THREE.ExtrudeGeometry.__v2 = new THREE.Vector2,
THREE.ExtrudeGeometry.__v3 = new THREE.Vector2,
THREE.ExtrudeGeometry.__v4 = new THREE.Vector2,
THREE.ExtrudeGeometry.__v5 = new THREE.Vector2,
THREE.ExtrudeGeometry.__v6 = new THREE.Vector2,
THREE.ShapeGeometry = function(t, e) {
    THREE.Geometry.call(this),
    !1 == t instanceof Array && (t = [t]),
    this.shapebb = t[t.length - 1].getBoundingBox(),
    this.addShapeList(t, e),
    this.computeFaceNormals()
}
,
THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ShapeGeometry.prototype.addShapeList = function(t, e) {
    for (var i = 0, r = t.length; r > i; i++)
        this.addShape(t[i], e);
    return this
}
,
THREE.ShapeGeometry.prototype.addShape = function(t, e) {
    void 0 === e && (e = {});
    var i, r, n, o = e.material, a = void 0 === e.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : e.UVGenerator, s = this.vertices.length;
    i = t.extractPoints(void 0 !== e.curveSegments ? e.curveSegments : 12);
    var l = i.shape
      , h = i.holes;
    if (!THREE.Shape.Utils.isClockWise(l))
        for (l = l.reverse(),
        i = 0,
        r = h.length; r > i; i++)
            n = h[i],
            THREE.Shape.Utils.isClockWise(n) && (h[i] = n.reverse());
    var c = THREE.Shape.Utils.triangulateShape(l, h);
    for (i = 0,
    r = h.length; r > i; i++)
        n = h[i],
        l = l.concat(n);
    for (h = l.length,
    r = c.length,
    i = 0; h > i; i++)
        n = l[i],
        this.vertices.push(new THREE.Vector3(n.x,n.y,0));
    for (i = 0; r > i; i++)
        h = c[i],
        l = h[0] + s,
        n = h[1] + s,
        h = h[2] + s,
        this.faces.push(new THREE.Face3(l,n,h,null ,null ,o)),
        this.faceVertexUvs[0].push(a.generateBottomUV(this, t, e, l, n, h))
}
,
THREE.LatheGeometry = function(t, e, i, r) {
    THREE.Geometry.call(this),
    e = e || 12,
    i = i || 0,
    r = r || 2 * Math.PI;
    for (var n = 1 / (t.length - 1), o = 1 / e, a = 0, s = e; s >= a; a++)
        for (var l = i + a * o * r, h = Math.cos(l), c = Math.sin(l), l = 0, u = t.length; u > l; l++) {
            var p = t[l]
              , d = new THREE.Vector3;
            d.x = h * p.x - c * p.y,
            d.y = c * p.x + h * p.y,
            d.z = p.z,
            this.vertices.push(d)
        }
    for (i = t.length,
    a = 0,
    s = e; s > a; a++)
        for (l = 0,
        u = t.length - 1; u > l; l++) {
            e = c = l + i * a,
            r = c + i;
            var h = c + 1 + i
              , c = c + 1
              , p = a * o
              , d = l * n
              , f = p + o
              , m = d + n;
            this.faces.push(new THREE.Face3(e,r,c)),
            this.faceVertexUvs[0].push([new THREE.Vector2(p,d), new THREE.Vector2(f,d), new THREE.Vector2(p,m)]),
            this.faces.push(new THREE.Face3(r,h,c)),
            this.faceVertexUvs[0].push([new THREE.Vector2(f,d), new THREE.Vector2(f,m), new THREE.Vector2(p,m)])
        }
    this.mergeVertices(),
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.PlaneGeometry = function(t, e, i, r) {
    THREE.Geometry.call(this),
    this.parameters = {
        width: t,
        height: e,
        widthSegments: i,
        heightSegments: r
    };
    var n = t / 2
      , o = e / 2;
    i = i || 1,
    r = r || 1;
    var a = i + 1
      , s = r + 1
      , l = t / i
      , h = e / r
      , c = new THREE.Vector3(0,0,1);
    for (t = 0; s > t; t++) {
        var u = t * h - o;
        for (e = 0; a > e; e++)
            this.vertices.push(new THREE.Vector3(e * l - n,-u,0))
    }
    for (t = 0; r > t; t++)
        for (e = 0; i > e; e++) {
            var p = e + a * t
              , n = e + a * (t + 1)
              , o = e + 1 + a * (t + 1)
              , s = e + 1 + a * t
              , l = new THREE.Vector2(e / i,1 - t / r)
              , h = new THREE.Vector2(e / i,1 - (t + 1) / r)
              , u = new THREE.Vector2((e + 1) / i,1 - (t + 1) / r)
              , d = new THREE.Vector2((e + 1) / i,1 - t / r)
              , p = new THREE.Face3(p,n,s);
            p.normal.copy(c),
            p.vertexNormals.push(c.clone(), c.clone(), c.clone()),
            this.faces.push(p),
            this.faceVertexUvs[0].push([l, h, d]),
            p = new THREE.Face3(n,o,s),
            p.normal.copy(c),
            p.vertexNormals.push(c.clone(), c.clone(), c.clone()),
            this.faces.push(p),
            this.faceVertexUvs[0].push([h.clone(), u, d.clone()])
        }
}
,
THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.RingGeometry = function(t, e, i, r, n, o) {
    THREE.Geometry.call(this),
    t = t || 0,
    e = e || 50,
    n = void 0 !== n ? n : 0,
    o = void 0 !== o ? o : 2 * Math.PI,
    i = void 0 !== i ? Math.max(3, i) : 8,
    r = void 0 !== r ? Math.max(3, r) : 8;
    var a, s = [], l = t, h = (e - t) / r;
    for (t = 0; r >= t; t++) {
        for (a = 0; i >= a; a++) {
            var c = new THREE.Vector3
              , u = n + a / i * o;
            c.x = l * Math.cos(u),
            c.y = l * Math.sin(u),
            this.vertices.push(c),
            s.push(new THREE.Vector2((c.x / e + 1) / 2,(c.y / e + 1) / 2))
        }
        l += h
    }
    for (e = new THREE.Vector3(0,0,1),
    t = 0; r > t; t++)
        for (n = t * i,
        a = 0; i >= a; a++)
            u = a + n,
            o = u + t,
            h = u + i + t,
            c = u + i + 1 + t,
            this.faces.push(new THREE.Face3(o,h,c,[e.clone(), e.clone(), e.clone()])),
            this.faceVertexUvs[0].push([s[o].clone(), s[h].clone(), s[c].clone()]),
            o = u + t,
            h = u + i + 1 + t,
            c = u + 1 + t,
            this.faces.push(new THREE.Face3(o,h,c,[e.clone(), e.clone(), e.clone()])),
            this.faceVertexUvs[0].push([s[o].clone(), s[h].clone(), s[c].clone()]);
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,l)
}
,
THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.SphereGeometry = function(t, e, i, r, n, o, a) {
    THREE.Geometry.call(this),
    this.parameters = {
        radius: t,
        widthSegments: e,
        heightSegments: i,
        phiStart: r,
        phiLength: n,
        thetaStart: o,
        thetaLength: a
    },
    t = t || 50,
    e = Math.max(3, Math.floor(e) || 8),
    i = Math.max(2, Math.floor(i) || 6),
    r = void 0 !== r ? r : 0,
    n = void 0 !== n ? n : 2 * Math.PI,
    o = void 0 !== o ? o : 0,
    a = void 0 !== a ? a : Math.PI;
    var s, l, h = [], c = [];
    for (l = 0; i >= l; l++) {
        var u = []
          , p = [];
        for (s = 0; e >= s; s++) {
            var d = s / e
              , f = l / i
              , m = new THREE.Vector3;
            m.x = -t * Math.cos(r + d * n) * Math.sin(o + f * a),
            m.y = t * Math.cos(o + f * a),
            m.z = t * Math.sin(r + d * n) * Math.sin(o + f * a),
            this.vertices.push(m),
            u.push(this.vertices.length - 1),
            p.push(new THREE.Vector2(d,1 - f))
        }
        h.push(u),
        c.push(p)
    }
    for (l = 0; i > l; l++)
        for (s = 0; e > s; s++) {
            r = h[l][s + 1],
            n = h[l][s],
            o = h[l + 1][s],
            a = h[l + 1][s + 1];
            var u = this.vertices[r].clone().normalize()
              , p = this.vertices[n].clone().normalize()
              , d = this.vertices[o].clone().normalize()
              , f = this.vertices[a].clone().normalize()
              , m = c[l][s + 1].clone()
              , g = c[l][s].clone()
              , E = c[l + 1][s].clone()
              , y = c[l + 1][s + 1].clone();
            Math.abs(this.vertices[r].y) === t ? (m.x = (m.x + g.x) / 2,
            this.faces.push(new THREE.Face3(r,o,a,[u, d, f])),
            this.faceVertexUvs[0].push([m, E, y])) : Math.abs(this.vertices[o].y) === t ? (E.x = (E.x + y.x) / 2,
            this.faces.push(new THREE.Face3(r,n,o,[u, p, d])),
            this.faceVertexUvs[0].push([m, g, E])) : (this.faces.push(new THREE.Face3(r,n,a,[u, p, f])),
            this.faceVertexUvs[0].push([m, g, y]),
            this.faces.push(new THREE.Face3(n,o,a,[p.clone(), d, f.clone()])),
            this.faceVertexUvs[0].push([g.clone(), E, y.clone()]))
        }
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,t)
}
,
THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TextGeometry = function(t, e) {
    e = e || {};
    var i = THREE.FontUtils.generateShapes(t, e);
    e.amount = void 0 !== e.height ? e.height : 50,
    void 0 === e.bevelThickness && (e.bevelThickness = 10),
    void 0 === e.bevelSize && (e.bevelSize = 8),
    void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
    THREE.ExtrudeGeometry.call(this, i, e)
}
,
THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype),
THREE.TorusGeometry = function(t, e, i, r, n) {
    THREE.Geometry.call(this),
    this.parameters = {
        radius: t,
        tube: e,
        radialSegments: i,
        tubularSegments: r,
        arc: n
    },
    t = t || 100,
    e = e || 40,
    i = i || 8,
    r = r || 6,
    n = n || 2 * Math.PI;
    for (var o = new THREE.Vector3, a = [], s = [], l = 0; i >= l; l++)
        for (var h = 0; r >= h; h++) {
            var c = h / r * n
              , u = l / i * Math.PI * 2;
            o.x = t * Math.cos(c),
            o.y = t * Math.sin(c);
            var p = new THREE.Vector3;
            p.x = (t + e * Math.cos(u)) * Math.cos(c),
            p.y = (t + e * Math.cos(u)) * Math.sin(c),
            p.z = e * Math.sin(u),
            this.vertices.push(p),
            a.push(new THREE.Vector2(h / r,l / i)),
            s.push(p.clone().sub(o).normalize())
        }
    for (l = 1; i >= l; l++)
        for (h = 1; r >= h; h++)
            t = (r + 1) * l + h - 1,
            e = (r + 1) * (l - 1) + h - 1,
            n = (r + 1) * (l - 1) + h,
            o = (r + 1) * l + h,
            c = new THREE.Face3(t,e,o,[s[t].clone(), s[e].clone(), s[o].clone()]),
            this.faces.push(c),
            this.faceVertexUvs[0].push([a[t].clone(), a[e].clone(), a[o].clone()]),
            c = new THREE.Face3(e,n,o,[s[e].clone(), s[n].clone(), s[o].clone()]),
            this.faces.push(c),
            this.faceVertexUvs[0].push([a[e].clone(), a[n].clone(), a[o].clone()]);
    this.computeFaceNormals()
}
,
THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TorusKnotGeometry = function(t, e, i, r, n, o, a) {
    function s(t, e, i, r, n) {
        var o = Math.cos(t)
          , a = Math.sin(t);
        return t *= e / i,
        e = Math.cos(t),
        o *= r * (2 + e) * .5,
        a = r * (2 + e) * a * .5,
        r = n * r * Math.sin(t) * .5,
        new THREE.Vector3(o,a,r)
    }
    THREE.Geometry.call(this),
    this.parameters = {
        radius: t,
        tube: e,
        radialSegments: i,
        tubularSegments: r,
        p: n,
        q: o,
        heightScale: a
    },
    t = t || 100,
    e = e || 40,
    i = i || 64,
    r = r || 8,
    n = n || 2,
    o = o || 3,
    a = a || 1;
    for (var l = Array(i), h = new THREE.Vector3, c = new THREE.Vector3, u = new THREE.Vector3, p = 0; i > p; ++p) {
        l[p] = Array(r);
        var d = p / i * 2 * n * Math.PI
          , f = s(d, o, n, t, a)
          , d = s(d + .01, o, n, t, a);
        for (h.subVectors(d, f),
        c.addVectors(d, f),
        u.crossVectors(h, c),
        c.crossVectors(u, h),
        u.normalize(),
        c.normalize(),
        d = 0; r > d; ++d) {
            var m = d / r * 2 * Math.PI
              , g = -e * Math.cos(m)
              , m = e * Math.sin(m)
              , E = new THREE.Vector3;
            E.x = f.x + g * c.x + m * u.x,
            E.y = f.y + g * c.y + m * u.y,
            E.z = f.z + g * c.z + m * u.z,
            l[p][d] = this.vertices.push(E) - 1
        }
    }
    for (p = 0; i > p; ++p)
        for (d = 0; r > d; ++d)
            n = (p + 1) % i,
            o = (d + 1) % r,
            t = l[p][d],
            e = l[n][d],
            n = l[n][o],
            o = l[p][o],
            a = new THREE.Vector2(p / i,d / r),
            h = new THREE.Vector2((p + 1) / i,d / r),
            c = new THREE.Vector2((p + 1) / i,(d + 1) / r),
            u = new THREE.Vector2(p / i,(d + 1) / r),
            this.faces.push(new THREE.Face3(t,e,o)),
            this.faceVertexUvs[0].push([a, h, u]),
            this.faces.push(new THREE.Face3(e,n,o)),
            this.faceVertexUvs[0].push([h.clone(), c, u.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TubeGeometry = function(t, e, i, r, n) {
    THREE.Geometry.call(this),
    this.parameters = {
        path: t,
        segments: e,
        radius: i,
        radialSegments: r,
        closed: n
    },
    e = e || 64,
    i = i || 1,
    r = r || 8,
    n = n || !1;
    var o, a, s, l, h, c, u, p, d, f = [], m = e + 1, g = new THREE.Vector3;
    for (u = new THREE.TubeGeometry.FrenetFrames(t,e,n),
    p = u.normals,
    d = u.binormals,
    this.tangents = u.tangents,
    this.normals = p,
    this.binormals = d,
    u = 0; m > u; u++)
        for (f[u] = [],
        s = u / (m - 1),
        c = t.getPointAt(s),
        o = p[u],
        a = d[u],
        s = 0; r > s; s++)
            l = s / r * 2 * Math.PI,
            h = -i * Math.cos(l),
            l = i * Math.sin(l),
            g.copy(c),
            g.x += h * o.x + l * a.x,
            g.y += h * o.y + l * a.y,
            g.z += h * o.z + l * a.z,
            f[u][s] = this.vertices.push(new THREE.Vector3(g.x,g.y,g.z)) - 1;
    for (u = 0; e > u; u++)
        for (s = 0; r > s; s++)
            m = n ? (u + 1) % e : u + 1,
            g = (s + 1) % r,
            t = f[u][s],
            i = f[m][s],
            m = f[m][g],
            g = f[u][g],
            p = new THREE.Vector2(u / e,s / r),
            d = new THREE.Vector2((u + 1) / e,s / r),
            o = new THREE.Vector2((u + 1) / e,(s + 1) / r),
            a = new THREE.Vector2(u / e,(s + 1) / r),
            this.faces.push(new THREE.Face3(t,i,g)),
            this.faceVertexUvs[0].push([p, d, a]),
            this.faces.push(new THREE.Face3(i,m,g)),
            this.faceVertexUvs[0].push([d.clone(), o, a.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TubeGeometry.FrenetFrames = function(t, e, i) {
    new THREE.Vector3;
    var r = new THREE.Vector3;
    new THREE.Vector3;
    var n = []
      , o = []
      , a = []
      , s = new THREE.Vector3
      , l = new THREE.Matrix4;
    e += 1;
    var h, c, u;
    for (this.tangents = n,
    this.normals = o,
    this.binormals = a,
    h = 0; e > h; h++)
        c = h / (e - 1),
        n[h] = t.getTangentAt(c),
        n[h].normalize();
    for (o[0] = new THREE.Vector3,
    a[0] = new THREE.Vector3,
    t = Number.MAX_VALUE,
    h = Math.abs(n[0].x),
    c = Math.abs(n[0].y),
    u = Math.abs(n[0].z),
    t >= h && (t = h,
    r.set(1, 0, 0)),
    t >= c && (t = c,
    r.set(0, 1, 0)),
    t >= u && r.set(0, 0, 1),
    s.crossVectors(n[0], r).normalize(),
    o[0].crossVectors(n[0], s),
    a[0].crossVectors(n[0], o[0]),
    h = 1; e > h; h++)
        o[h] = o[h - 1].clone(),
        a[h] = a[h - 1].clone(),
        s.crossVectors(n[h - 1], n[h]),
        1e-4 < s.length() && (s.normalize(),
        r = Math.acos(THREE.Math.clamp(n[h - 1].dot(n[h]), -1, 1)),
        o[h].applyMatrix4(l.makeRotationAxis(s, r))),
        a[h].crossVectors(n[h], o[h]);
    if (i)
        for (r = Math.acos(THREE.Math.clamp(o[0].dot(o[e - 1]), -1, 1)),
        r /= e - 1,
        0 < n[0].dot(s.crossVectors(o[0], o[e - 1])) && (r = -r),
        h = 1; e > h; h++)
            o[h].applyMatrix4(l.makeRotationAxis(n[h], r * h)),
            a[h].crossVectors(n[h], o[h])
}
,
THREE.PolyhedronGeometry = function(t, e, i, r) {
    function n(t) {
        var e = t.normalize().clone();
        e.index = l.vertices.push(e) - 1;
        var i = Math.atan2(t.z, -t.x) / 2 / Math.PI + .5;
        return t = Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z)) / Math.PI + .5,
        e.uv = new THREE.Vector2(i,1 - t),
        e
    }
    function o(t, e, i) {
        var r = new THREE.Face3(t.index,e.index,i.index,[t.clone(), e.clone(), i.clone()]);
        l.faces.push(r),
        g.copy(t).add(e).add(i).divideScalar(3),
        r = Math.atan2(g.z, -g.x),
        l.faceVertexUvs[0].push([s(t.uv, t, r), s(e.uv, e, r), s(i.uv, i, r)])
    }
    function a(t, e) {
        var i = Math.pow(2, e);
        Math.pow(4, e);
        for (var r = n(l.vertices[t.a]), a = n(l.vertices[t.b]), s = n(l.vertices[t.c]), h = [], c = 0; i >= c; c++) {
            h[c] = [];
            for (var u = n(r.clone().lerp(s, c / i)), p = n(a.clone().lerp(s, c / i)), d = i - c, f = 0; d >= f; f++)
                h[c][f] = 0 == f && c == i ? u : n(u.clone().lerp(p, f / d))
        }
        for (c = 0; i > c; c++)
            for (f = 0; 2 * (i - c) - 1 > f; f++)
                r = Math.floor(f / 2),
                0 == f % 2 ? o(h[c][r + 1], h[c + 1][r], h[c][r]) : o(h[c][r + 1], h[c + 1][r + 1], h[c + 1][r])
    }
    function s(t, e, i) {
        return 0 > i && 1 === t.x && (t = new THREE.Vector2(t.x - 1,t.y)),
        0 === e.x && 0 === e.z && (t = new THREE.Vector2(i / 2 / Math.PI + .5,t.y)),
        t.clone()
    }
    THREE.Geometry.call(this),
    i = i || 1,
    r = r || 0;
    for (var l = this, h = 0, c = t.length; c > h; h += 3)
        n(new THREE.Vector3(t[h],t[h + 1],t[h + 2]));
    t = this.vertices;
    for (var u = [], p = h = 0, c = e.length; c > h; h += 3,
    p++) {
        var d = t[e[h]]
          , f = t[e[h + 1]]
          , m = t[e[h + 2]];
        u[p] = new THREE.Face3(d.index,f.index,m.index,[d.clone(), f.clone(), m.clone()])
    }
    for (var g = new THREE.Vector3, h = 0, c = u.length; c > h; h++)
        a(u[h], r);
    for (h = 0,
    c = this.faceVertexUvs[0].length; c > h; h++)
        e = this.faceVertexUvs[0][h],
        r = e[0].x,
        t = e[1].x,
        u = e[2].x,
        p = Math.max(r, Math.max(t, u)),
        d = Math.min(r, Math.min(t, u)),
        p > .9 && .1 > d && (.2 > r && (e[0].x += 1),
        .2 > t && (e[1].x += 1),
        .2 > u && (e[2].x += 1));
    for (h = 0,
    c = this.vertices.length; c > h; h++)
        this.vertices[h].multiplyScalar(i);
    this.mergeVertices(),
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,i)
}
,
THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.IcosahedronGeometry = function(t, e) {
    this.parameters = {
        radius: t,
        detail: e
    };
    var i = (1 + Math.sqrt(5)) / 2;
    THREE.PolyhedronGeometry.call(this, [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1], [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, e)
}
,
THREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.OctahedronGeometry = function(t, e) {
    this.parameters = {
        radius: t,
        detail: e
    },
    THREE.PolyhedronGeometry.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, e)
}
,
THREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TetrahedronGeometry = function(t, e) {
    THREE.PolyhedronGeometry.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, e)
}
,
THREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ParametricGeometry = function(t, e, i) {
    THREE.Geometry.call(this);
    var r, n, o, a, s = this.vertices, l = this.faces, h = this.faceVertexUvs[0], c = e + 1;
    for (r = 0; i >= r; r++)
        for (a = r / i,
        n = 0; e >= n; n++)
            o = n / e,
            o = t(o, a),
            s.push(o);
    var u, p, d, f;
    for (r = 0; i > r; r++)
        for (n = 0; e > n; n++)
            t = r * c + n,
            s = r * c + n + 1,
            a = (r + 1) * c + n + 1,
            o = (r + 1) * c + n,
            u = new THREE.Vector2(n / e,r / i),
            p = new THREE.Vector2((n + 1) / e,r / i),
            d = new THREE.Vector2((n + 1) / e,(r + 1) / i),
            f = new THREE.Vector2(n / e,(r + 1) / i),
            l.push(new THREE.Face3(t,s,o)),
            h.push([u, p, f]),
            l.push(new THREE.Face3(s,a,o)),
            h.push([p.clone(), d, f.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.AxisHelper = function(t) {
    t = t || 1;
    var e = new THREE.Geometry;
    e.vertices.push(new THREE.Vector3, new THREE.Vector3(t,0,0), new THREE.Vector3, new THREE.Vector3(0,t,0), new THREE.Vector3, new THREE.Vector3(0,0,t)),
    e.colors.push(new THREE.Color(16711680), new THREE.Color(16755200), new THREE.Color(65280), new THREE.Color(11206400), new THREE.Color(255), new THREE.Color(43775)),
    t = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    }),
    THREE.Line.call(this, e, t, THREE.LinePieces)
}
,
THREE.AxisHelper.prototype = Object.create(THREE.Line.prototype),
THREE.ArrowHelper = function(t, e, i, r, n, o) {
    THREE.Object3D.call(this),
    void 0 === r && (r = 16776960),
    void 0 === i && (i = 1),
    void 0 === n && (n = .2 * i),
    void 0 === o && (o = .2 * n),
    this.position = e,
    e = new THREE.Geometry,
    e.vertices.push(new THREE.Vector3(0,0,0)),
    e.vertices.push(new THREE.Vector3(0,1,0)),
    this.line = new THREE.Line(e,new THREE.LineBasicMaterial({
        color: r
    })),
    this.line.matrixAutoUpdate = !1,
    this.add(this.line),
    e = new THREE.CylinderGeometry(0,.5,1,5,1),
    e.applyMatrix((new THREE.Matrix4).makeTranslation(0, -.5, 0)),
    this.cone = new THREE.Mesh(e,new THREE.MeshBasicMaterial({
        color: r
    })),
    this.cone.matrixAutoUpdate = !1,
    this.add(this.cone),
    this.setDirection(t),
    this.setLength(i, n, o)
}
,
THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.ArrowHelper.prototype.setDirection = function() {
    var t, e = new THREE.Vector3;
    return function(i) {
        .99999 < i.y ? this.quaternion.set(0, 0, 0, 1) : -.99999 > i.y ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(),
        t = Math.acos(i.y),
        this.quaternion.setFromAxisAngle(e, t))
    }
}
(),
THREE.ArrowHelper.prototype.setLength = function(t, e, i) {
    void 0 === e && (e = .2 * t),
    void 0 === i && (i = .2 * e),
    this.line.scale.set(1, t, 1),
    this.line.updateMatrix(),
    this.cone.scale.set(i, e, i),
    this.cone.position.y = t,
    this.cone.updateMatrix()
}
,
THREE.ArrowHelper.prototype.setColor = function(t) {
    this.line.material.color.set(t),
    this.cone.material.color.set(t)
}
,
THREE.BoxHelper = function(t) {
    var e = [new THREE.Vector3(1,1,1), new THREE.Vector3(-1,1,1), new THREE.Vector3(-1,-1,1), new THREE.Vector3(1,-1,1), new THREE.Vector3(1,1,-1), new THREE.Vector3(-1,1,-1), new THREE.Vector3(-1,-1,-1), new THREE.Vector3(1,-1,-1)];
    this.vertices = e;
    var i = new THREE.Geometry;
    i.vertices.push(e[0], e[1], e[1], e[2], e[2], e[3], e[3], e[0], e[4], e[5], e[5], e[6], e[6], e[7], e[7], e[4], e[0], e[4], e[1], e[5], e[2], e[6], e[3], e[7]),
    THREE.Line.call(this, i, new THREE.LineBasicMaterial({
        color: 16776960
    }), THREE.LinePieces),
    void 0 !== t && this.update(t)
}
,
THREE.BoxHelper.prototype = Object.create(THREE.Line.prototype),
THREE.BoxHelper.prototype.update = function(t) {
    var e = t.geometry;
    null  === e.boundingBox && e.computeBoundingBox();
    var i = e.boundingBox.min
      , e = e.boundingBox.max
      , r = this.vertices;
    r[0].set(e.x, e.y, e.z),
    r[1].set(i.x, e.y, e.z),
    r[2].set(i.x, i.y, e.z),
    r[3].set(e.x, i.y, e.z),
    r[4].set(e.x, e.y, i.z),
    r[5].set(i.x, e.y, i.z),
    r[6].set(i.x, i.y, i.z),
    r[7].set(e.x, i.y, i.z),
    this.geometry.computeBoundingSphere(),
    this.geometry.verticesNeedUpdate = !0,
    this.matrixAutoUpdate = !1,
    this.matrixWorld = t.matrixWorld
}
,
THREE.BoundingBoxHelper = function(t, e) {
    var i = void 0 !== e ? e : 8947848;
    this.object = t,
    this.box = new THREE.Box3,
    THREE.Mesh.call(this, new THREE.BoxGeometry(1,1,1), new THREE.MeshBasicMaterial({
        color: i,
        wireframe: !0
    }))
}
,
THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object),
    this.box.size(this.scale),
    this.box.center(this.position)
}
,
THREE.CameraHelper = function(t) {
    function e(t, e, r) {
        i(t, r),
        i(e, r)
    }
    function i(t, e) {
        r.vertices.push(new THREE.Vector3),
        r.colors.push(new THREE.Color(e)),
        void 0 === o[t] && (o[t] = []),
        o[t].push(r.vertices.length - 1)
    }
    var r = new THREE.Geometry
      , n = new THREE.LineBasicMaterial({
        color: 16777215,
        vertexColors: THREE.FaceColors
    })
      , o = {};
    e("n1", "n2", 16755200),
    e("n2", "n4", 16755200),
    e("n4", "n3", 16755200),
    e("n3", "n1", 16755200),
    e("f1", "f2", 16755200),
    e("f2", "f4", 16755200),
    e("f4", "f3", 16755200),
    e("f3", "f1", 16755200),
    e("n1", "f1", 16755200),
    e("n2", "f2", 16755200),
    e("n3", "f3", 16755200),
    e("n4", "f4", 16755200),
    e("p", "n1", 16711680),
    e("p", "n2", 16711680),
    e("p", "n3", 16711680),
    e("p", "n4", 16711680),
    e("u1", "u2", 43775),
    e("u2", "u3", 43775),
    e("u3", "u1", 43775),
    e("c", "t", 16777215),
    e("p", "c", 3355443),
    e("cn1", "cn2", 3355443),
    e("cn3", "cn4", 3355443),
    e("cf1", "cf2", 3355443),
    e("cf3", "cf4", 3355443),
    THREE.Line.call(this, r, n, THREE.LinePieces),
    this.camera = t,
    this.matrixWorld = t.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.pointMap = o,
    this.update()
}
,
THREE.CameraHelper.prototype = Object.create(THREE.Line.prototype),
THREE.CameraHelper.prototype.update = function() {
    var t = new THREE.Vector3
      , e = new THREE.Camera
      , i = new THREE.Projector;
    return function() {
        function r(r, o, a, s) {
            if (t.set(o, a, s),
            i.unprojectVector(t, e),
            r = n.pointMap[r],
            void 0 !== r)
                for (o = 0,
                a = r.length; a > o; o++)
                    n.geometry.vertices[r[o]].copy(t)
        }
        var n = this;
        e.projectionMatrix.copy(this.camera.projectionMatrix),
        r("c", 0, 0, -1),
        r("t", 0, 0, 1),
        r("n1", -1, -1, -1),
        r("n2", 1, -1, -1),
        r("n3", -1, 1, -1),
        r("n4", 1, 1, -1),
        r("f1", -1, -1, 1),
        r("f2", 1, -1, 1),
        r("f3", -1, 1, 1),
        r("f4", 1, 1, 1),
        r("u1", .7, 1.1, -1),
        r("u2", -.7, 1.1, -1),
        r("u3", 0, 2, -1),
        r("cf1", -1, 0, 1),
        r("cf2", 1, 0, 1),
        r("cf3", 0, -1, 1),
        r("cf4", 0, 1, 1),
        r("cn1", -1, 0, -1),
        r("cn2", 1, 0, -1),
        r("cn3", 0, -1, -1),
        r("cn4", 0, 1, -1),
        this.geometry.verticesNeedUpdate = !0
    }
}
(),
THREE.DirectionalLightHelper = function(t, e) {
    THREE.Object3D.call(this),
    this.light = t,
    this.light.updateMatrixWorld(),
    this.matrixWorld = t.matrixWorld,
    this.matrixAutoUpdate = !1,
    e = e || 1;
    var i = new THREE.Geometry;
    i.vertices.push(new THREE.Vector3(-e,e,0), new THREE.Vector3(e,e,0), new THREE.Vector3(e,-e,0), new THREE.Vector3(-e,-e,0), new THREE.Vector3(-e,e,0));
    var r = new THREE.LineBasicMaterial({
        fog: !1
    });
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    this.lightPlane = new THREE.Line(i,r),
    this.add(this.lightPlane),
    i = new THREE.Geometry,
    i.vertices.push(new THREE.Vector3, new THREE.Vector3),
    r = new THREE.LineBasicMaterial({
        fog: !1
    }),
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    this.targetLine = new THREE.Line(i,r),
    this.add(this.targetLine),
    this.update()
}
,
THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.DirectionalLightHelper.prototype.dispose = function() {
    this.lightPlane.geometry.dispose(),
    this.lightPlane.material.dispose(),
    this.targetLine.geometry.dispose(),
    this.targetLine.material.dispose()
}
,
THREE.DirectionalLightHelper.prototype.update = function() {
    var t = new THREE.Vector3
      , e = new THREE.Vector3
      , i = new THREE.Vector3;
    return function() {
        t.setFromMatrixPosition(this.light.matrixWorld),
        e.setFromMatrixPosition(this.light.target.matrixWorld),
        i.subVectors(e, t),
        this.lightPlane.lookAt(i),
        this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
        this.targetLine.geometry.vertices[1].copy(i),
        this.targetLine.geometry.verticesNeedUpdate = !0,
        this.targetLine.material.color.copy(this.lightPlane.material.color)
    }
}
(),
THREE.EdgesHelper = function(t, e) {
    var i = void 0 !== e ? e : 16777215
      , r = [0, 0]
      , n = {}
      , o = function(t, e) {
        return t - e
    }
      , a = ["a", "b", "c"]
      , s = new THREE.BufferGeometry
      , l = t.geometry.clone();
    l.mergeVertices(),
    l.computeFaceNormals();
    for (var h = l.vertices, l = l.faces, c = 0, u = 0, p = l.length; p > u; u++)
        for (var d = l[u], f = 0; 3 > f; f++) {
            r[0] = d[a[f]],
            r[1] = d[a[(f + 1) % 3]],
            r.sort(o);
            var m = r.toString();
            void 0 === n[m] ? (n[m] = {
                vert1: r[0],
                vert2: r[1],
                face1: u,
                face2: void 0
            },
            c++) : n[m].face2 = u
        }
    s.addAttribute("position", new THREE.Float32Attribute(2 * c,3)),
    r = s.attributes.position.array,
    o = 0;
    for (m in n)
        a = n[m],
        (void 0 === a.face2 || .9999 > l[a.face1].normal.dot(l[a.face2].normal)) && (c = h[a.vert1],
        r[o++] = c.x,
        r[o++] = c.y,
        r[o++] = c.z,
        c = h[a.vert2],
        r[o++] = c.x,
        r[o++] = c.y,
        r[o++] = c.z);
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: i
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.matrixWorld = t.matrixWorld
}
,
THREE.EdgesHelper.prototype = Object.create(THREE.Line.prototype),
THREE.FaceNormalsHelper = function(t, e, i, r) {
    this.object = t,
    this.size = void 0 !== e ? e : 1,
    t = void 0 !== i ? i : 16776960,
    r = void 0 !== r ? r : 1,
    e = new THREE.Geometry,
    i = 0;
    for (var n = this.object.geometry.faces.length; n > i; i++)
        e.vertices.push(new THREE.Vector3, new THREE.Vector3);
    THREE.Line.call(this, e, new THREE.LineBasicMaterial({
        color: t,
        linewidth: r
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.normalMatrix = new THREE.Matrix3,
    this.update()
}
,
THREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.FaceNormalsHelper.prototype.update = function() {
    var t = this.geometry.vertices
      , e = this.object
      , i = e.geometry.vertices
      , r = e.geometry.faces
      , n = e.matrixWorld;
    e.updateMatrixWorld(!0),
    this.normalMatrix.getNormalMatrix(n);
    for (var o = e = 0, a = r.length; a > e; e++,
    o += 2) {
        var s = r[e];
        t[o].copy(i[s.a]).add(i[s.b]).add(i[s.c]).divideScalar(3).applyMatrix4(n),
        t[o + 1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(t[o])
    }
    return this.geometry.verticesNeedUpdate = !0,
    this
}
,
THREE.GridHelper = function(t, e) {
    var i = new THREE.Geometry
      , r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    this.color1 = new THREE.Color(4473924),
    this.color2 = new THREE.Color(8947848);
    for (var n = -t; t >= n; n += e) {
        i.vertices.push(new THREE.Vector3(-t,0,n), new THREE.Vector3(t,0,n), new THREE.Vector3(n,0,-t), new THREE.Vector3(n,0,t));
        var o = 0 === n ? this.color1 : this.color2;
        i.colors.push(o, o, o, o)
    }
    THREE.Line.call(this, i, r, THREE.LinePieces)
}
,
THREE.GridHelper.prototype = Object.create(THREE.Line.prototype),
THREE.GridHelper.prototype.setColors = function(t, e) {
    this.color1.set(t),
    this.color2.set(e),
    this.geometry.colorsNeedUpdate = !0
}
,
THREE.HemisphereLightHelper = function(t, e, i, r) {
    for (THREE.Object3D.call(this),
    this.light = t,
    this.light.updateMatrixWorld(),
    this.matrixWorld = t.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.colors = [new THREE.Color, new THREE.Color],
    t = new THREE.SphereGeometry(e,4,2),
    t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2)),
    e = 0; 8 > e; e++)
        t.faces[e].color = this.colors[4 > e ? 0 : 1];
    e = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    }),
    this.lightSphere = new THREE.Mesh(t,e),
    this.add(this.lightSphere),
    this.update()
}
,
THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose(),
    this.lightSphere.material.dispose()
}
,
THREE.HemisphereLightHelper.prototype.update = function() {
    var t = new THREE.Vector3;
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
        this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),
        this.lightSphere.geometry.colorsNeedUpdate = !0
    }
}
(),
THREE.PointLightHelper = function(t, e) {
    this.light = t,
    this.light.updateMatrixWorld();
    var i = new THREE.SphereGeometry(e,4,2)
      , r = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    r.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    THREE.Mesh.call(this, i, r),
    this.matrixWorld = this.light.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose(),
    this.material.dispose()
}
,
THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
}
,
THREE.SkeletonHelper = function(t) {
    for (var e = t.skeleton, i = new THREE.Geometry, r = 0; r < e.bones.length; r++)
        e.bones[r].parent instanceof THREE.Bone && (i.vertices.push(new THREE.Vector3),
        i.vertices.push(new THREE.Vector3),
        i.colors.push(new THREE.Color(0,0,1)),
        i.colors.push(new THREE.Color(0,1,0)));
    r = new THREE.LineBasicMaterial({
        vertexColors: !0,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    }),
    THREE.Line.call(this, i, r, THREE.LinePieces),
    this.skeleton = e,
    this.matrixWorld = t.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.SkeletonHelper.prototype = Object.create(THREE.Line.prototype),
THREE.SkeletonHelper.prototype.update = function() {
    for (var t = this.geometry, e = 0, i = 0; i < this.skeleton.bones.length; i++) {
        var r = this.skeleton.bones[i];
        r.parent instanceof THREE.Bone && (t.vertices[e].setFromMatrixPosition(r.skinMatrix),
        t.vertices[e + 1].setFromMatrixPosition(r.parent.skinMatrix),
        e += 2)
    }
    t.verticesNeedUpdate = !0,
    t.computeBoundingSphere()
}
,
THREE.SpotLightHelper = function(t) {
    THREE.Object3D.call(this),
    this.light = t,
    this.light.updateMatrixWorld(),
    this.matrixWorld = t.matrixWorld,
    this.matrixAutoUpdate = !1,
    t = new THREE.CylinderGeometry(0,1,1,8,1,!0),
    t.applyMatrix((new THREE.Matrix4).makeTranslation(0, -.5, 0)),
    t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
    var e = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    this.cone = new THREE.Mesh(t,e),
    this.add(this.cone),
    this.update()
}
,
THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose(),
    this.cone.material.dispose()
}
,
THREE.SpotLightHelper.prototype.update = function() {
    var t = new THREE.Vector3
      , e = new THREE.Vector3;
    return function() {
        var i = this.light.distance ? this.light.distance : 1e4
          , r = i * Math.tan(this.light.angle);
        this.cone.scale.set(r, r, i),
        t.setFromMatrixPosition(this.light.matrixWorld),
        e.setFromMatrixPosition(this.light.target.matrixWorld),
        this.cone.lookAt(e.sub(t)),
        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}
(),
THREE.VertexNormalsHelper = function(t, e, i, r) {
    this.object = t,
    this.size = void 0 !== e ? e : 1,
    e = void 0 !== i ? i : 16711680,
    r = void 0 !== r ? r : 1,
    i = new THREE.Geometry,
    t = t.geometry.faces;
    for (var n = 0, o = t.length; o > n; n++)
        for (var a = 0, s = t[n].vertexNormals.length; s > a; a++)
            i.vertices.push(new THREE.Vector3),
            i.vertices.push(new THREE.Vector3);
    THREE.Line.call(this, i, new THREE.LineBasicMaterial({
        color: e,
        linewidth: r
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.normalMatrix = new THREE.Matrix3,
    this.update()
}
,
THREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.VertexNormalsHelper.prototype.update = function(t) {
    var e = new THREE.Vector3;
    return function(t) {
        t = ["a", "b", "c", "d"],
        this.object.updateMatrixWorld(!0),
        this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
        for (var i = this.geometry.vertices, r = this.object.geometry.vertices, n = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, l = n.length; l > s; s++)
            for (var h = n[s], c = 0, u = h.vertexNormals.length; u > c; c++) {
                var p = h.vertexNormals[c];
                i[a].copy(r[h[t[c]]]).applyMatrix4(o),
                e.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),
                e.add(i[a]),
                a += 1,
                i[a].copy(e),
                a += 1
            }
        return this.geometry.verticesNeedUpdate = !0,
        this
    }
}
(),
THREE.VertexTangentsHelper = function(t, e, i, r) {
    this.object = t,
    this.size = void 0 !== e ? e : 1,
    e = void 0 !== i ? i : 255,
    r = void 0 !== r ? r : 1,
    i = new THREE.Geometry,
    t = t.geometry.faces;
    for (var n = 0, o = t.length; o > n; n++)
        for (var a = 0, s = t[n].vertexTangents.length; s > a; a++)
            i.vertices.push(new THREE.Vector3),
            i.vertices.push(new THREE.Vector3);
    THREE.Line.call(this, i, new THREE.LineBasicMaterial({
        color: e,
        linewidth: r
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.VertexTangentsHelper.prototype.update = function(t) {
    var e = new THREE.Vector3;
    return function(t) {
        t = ["a", "b", "c", "d"],
        this.object.updateMatrixWorld(!0);
        for (var i = this.geometry.vertices, r = this.object.geometry.vertices, n = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, l = n.length; l > s; s++)
            for (var h = n[s], c = 0, u = h.vertexTangents.length; u > c; c++) {
                var p = h.vertexTangents[c];
                i[a].copy(r[h[t[c]]]).applyMatrix4(o),
                e.copy(p).transformDirection(o).multiplyScalar(this.size),
                e.add(i[a]),
                a += 1,
                i[a].copy(e),
                a += 1
            }
        return this.geometry.verticesNeedUpdate = !0,
        this
    }
}
(),
THREE.WireframeHelper = function(t, e) {
    var i = void 0 !== e ? e : 16777215
      , r = [0, 0]
      , n = {}
      , o = function(t, e) {
        return t - e
    }
      , a = ["a", "b", "c"]
      , s = new THREE.BufferGeometry;
    if (t.geometry instanceof THREE.Geometry) {
        for (var l = t.geometry.vertices, h = t.geometry.faces, c = 0, u = new Uint32Array(6 * h.length), p = 0, d = h.length; d > p; p++)
            for (var f = h[p], m = 0; 3 > m; m++) {
                r[0] = f[a[m]],
                r[1] = f[a[(m + 1) % 3]],
                r.sort(o);
                var g = r.toString();
                void 0 === n[g] && (u[2 * c] = r[0],
                u[2 * c + 1] = r[1],
                n[g] = !0,
                c++)
            }
        for (s.addAttribute("position", new THREE.Float32Attribute(2 * c,3)),
        r = s.attributes.position.array,
        p = 0,
        d = c; d > p; p++)
            for (m = 0; 2 > m; m++)
                c = l[u[2 * p + m]],
                a = 6 * p + 3 * m,
                r[a + 0] = c.x,
                r[a + 1] = c.y,
                r[a + 2] = c.z
    } else if (t.geometry instanceof THREE.BufferGeometry && void 0 !== t.geometry.attributes.index) {
        for (var l = t.geometry.attributes.position.array, d = t.geometry.attributes.index.array, h = t.geometry.offsets, c = 0, u = new Uint32Array(2 * d.length), f = 0, E = h.length; E > f; ++f)
            for (var m = h[f].start, g = h[f].count, a = h[f].index, p = m, y = m + g; y > p; p += 3)
                for (m = 0; 3 > m; m++)
                    r[0] = a + d[p + m],
                    r[1] = a + d[p + (m + 1) % 3],
                    r.sort(o),
                    g = r.toString(),
                    void 0 === n[g] && (u[2 * c] = r[0],
                    u[2 * c + 1] = r[1],
                    n[g] = !0,
                    c++);
        for (s.addAttribute("position", new THREE.Float32Attribute(2 * c,3)),
        r = s.attributes.position.array,
        p = 0,
        d = c; d > p; p++)
            for (m = 0; 2 > m; m++)
                a = 6 * p + 3 * m,
                c = 3 * u[2 * p + m],
                r[a + 0] = l[c],
                r[a + 1] = l[c + 1],
                r[a + 2] = l[c + 2]
    } else if (t.geometry instanceof THREE.BufferGeometry)
        for (l = t.geometry.attributes.position.array,
        c = l.length / 3,
        u = c / 3,
        s.addAttribute("position", new THREE.Float32Attribute(2 * c,3)),
        r = s.attributes.position.array,
        p = 0,
        d = u; d > p; p++)
            for (m = 0; 3 > m; m++)
                a = 18 * p + 6 * m,
                u = 9 * p + 3 * m,
                r[a + 0] = l[u],
                r[a + 1] = l[u + 1],
                r[a + 2] = l[u + 2],
                c = 9 * p + (m + 1) % 3 * 3,
                r[a + 3] = l[c],
                r[a + 4] = l[c + 1],
                r[a + 5] = l[c + 2];
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: i
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.matrixWorld = t.matrixWorld
}
,
THREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype),
THREE.ImmediateRenderObject = function() {
    THREE.Object3D.call(this),
    this.render = function(t) {}
}
,
THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype),
THREE.LensFlare = function(t, e, i, r, n) {
    THREE.Object3D.call(this),
    this.lensFlares = [],
    this.positionScreen = new THREE.Vector3,
    this.customUpdateCallback = void 0,
    void 0 !== t && this.add(t, e, i, r, n)
}
,
THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype),
THREE.LensFlare.prototype.add = function(t, e, i, r, n, o) {
    void 0 === e && (e = -1),
    void 0 === i && (i = 0),
    void 0 === o && (o = 1),
    void 0 === n && (n = new THREE.Color(16777215)),
    void 0 === r && (r = THREE.NormalBlending),
    i = Math.min(i, Math.max(0, i)),
    this.lensFlares.push({
        texture: t,
        size: e,
        distance: i,
        x: 0,
        y: 0,
        z: 0,
        scale: 1,
        rotation: 1,
        opacity: o,
        color: n,
        blending: r
    })
}
,
THREE.LensFlare.prototype.updateLensFlares = function() {
    var t, e, i = this.lensFlares.length, r = 2 * -this.positionScreen.x, n = 2 * -this.positionScreen.y;
    for (t = 0; i > t; t++)
        e = this.lensFlares[t],
        e.x = this.positionScreen.x + r * e.distance,
        e.y = this.positionScreen.y + n * e.distance,
        e.wantedRotation = e.x * Math.PI * .25,
        e.rotation += .25 * (e.wantedRotation - e.rotation)
}
,
THREE.MorphBlendMesh = function(t, e) {
    THREE.Mesh.call(this, t, e),
    this.animationsMap = {},
    this.animationsList = [];
    var i = this.geometry.morphTargets.length;
    this.createAnimation("__default", 0, i - 1, i / 1),
    this.setAnimationWeight("__default", 1)
}
,
THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.MorphBlendMesh.prototype.createAnimation = function(t, e, i, r) {
    e = {
        startFrame: e,
        endFrame: i,
        length: i - e + 1,
        fps: r,
        duration: (i - e) / r,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    },
    this.animationsMap[t] = e,
    this.animationsList.push(e)
}
,
THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(t) {
    for (var e, i = /([a-z]+)(\d+)/, r = {}, n = this.geometry, o = 0, a = n.morphTargets.length; a > o; o++) {
        var s = n.morphTargets[o].name.match(i);
        if (s && 1 < s.length) {
            var l = s[1];
            r[l] || (r[l] = {
                start: 1 / 0,
                end: -(1 / 0)
            }),
            s = r[l],
            o < s.start && (s.start = o),
            o > s.end && (s.end = o),
            e || (e = l)
        }
    }
    for (l in r)
        s = r[l],
        this.createAnimation(l, s.start, s.end, t);
    this.firstAnimation = e
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(t) {
    (t = this.animationsMap[t]) && (t.direction = 1,
    t.directionBackwards = !1)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(t) {
    (t = this.animationsMap[t]) && (t.direction = -1,
    t.directionBackwards = !0)
}
,
THREE.MorphBlendMesh.prototype.setAnimationFPS = function(t, e) {
    var i = this.animationsMap[t];
    i && (i.fps = e,
    i.duration = (i.end - i.start) / i.fps)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDuration = function(t, e) {
    var i = this.animationsMap[t];
    i && (i.duration = e,
    i.fps = (i.end - i.start) / i.duration)
}
,
THREE.MorphBlendMesh.prototype.setAnimationWeight = function(t, e) {
    var i = this.animationsMap[t];
    i && (i.weight = e)
}
,
THREE.MorphBlendMesh.prototype.setAnimationTime = function(t, e) {
    var i = this.animationsMap[t];
    i && (i.time = e)
}
,
THREE.MorphBlendMesh.prototype.getAnimationTime = function(t) {
    var e = 0;
    return (t = this.animationsMap[t]) && (e = t.time),
    e
}
,
THREE.MorphBlendMesh.prototype.getAnimationDuration = function(t) {
    var e = -1;
    return (t = this.animationsMap[t]) && (e = t.duration),
    e
}
,
THREE.MorphBlendMesh.prototype.playAnimation = function(t) {
    var e = this.animationsMap[t];
    e ? (e.time = 0,
    e.active = !0) : console.warn("animation[" + t + "] undefined")
}
,
THREE.MorphBlendMesh.prototype.stopAnimation = function(t) {
    (t = this.animationsMap[t]) && (t.active = !1)
}
,
THREE.MorphBlendMesh.prototype.update = function(t) {
    for (var e = 0, i = this.animationsList.length; i > e; e++) {
        var r = this.animationsList[e];
        if (r.active) {
            var n = r.duration / r.length;
            r.time += r.direction * t,
            r.mirroredLoop ? (r.time > r.duration || 0 > r.time) && (r.direction *= -1,
            r.time > r.duration && (r.time = r.duration,
            r.directionBackwards = !0),
            0 > r.time && (r.time = 0,
            r.directionBackwards = !1)) : (r.time %= r.duration,
            0 > r.time && (r.time += r.duration));
            var o = r.startFrame + THREE.Math.clamp(Math.floor(r.time / n), 0, r.length - 1)
              , a = r.weight;
            o !== r.currentFrame && (this.morphTargetInfluences[r.lastFrame] = 0,
            this.morphTargetInfluences[r.currentFrame] = 1 * a,
            this.morphTargetInfluences[o] = 0,
            r.lastFrame = r.currentFrame,
            r.currentFrame = o),
            n = r.time % n / n,
            r.directionBackwards && (n = 1 - n),
            this.morphTargetInfluences[r.currentFrame] = n * a,
            this.morphTargetInfluences[r.lastFrame] = (1 - n) * a
        }
    }
}
,
THREE.LensFlarePlugin = function() {
    function t(t, i) {
        var r = e.createProgram()
          , n = e.createShader(e.FRAGMENT_SHADER)
          , o = e.createShader(e.VERTEX_SHADER)
          , a = "precision " + i + " float;\n";
        return e.shaderSource(n, a + t.fragmentShader),
        e.shaderSource(o, a + t.vertexShader),
        e.compileShader(n),
        e.compileShader(o),
        e.attachShader(r, n),
        e.attachShader(r, o),
        e.linkProgram(r),
        r
    }
    var e, i, r, n, o, a, s, l, h, c, u, p, d;
    this.init = function(f) {
        e = f.context,
        i = f,
        r = f.getPrecision(),
        n = new Float32Array(16),
        o = new Uint16Array(6),
        f = 0,
        n[f++] = -1,
        n[f++] = -1,
        n[f++] = 0,
        n[f++] = 0,
        n[f++] = 1,
        n[f++] = -1,
        n[f++] = 1,
        n[f++] = 0,
        n[f++] = 1,
        n[f++] = 1,
        n[f++] = 1,
        n[f++] = 1,
        n[f++] = -1,
        n[f++] = 1,
        n[f++] = 0,
        n[f++] = 1,
        f = 0,
        o[f++] = 0,
        o[f++] = 1,
        o[f++] = 2,
        o[f++] = 0,
        o[f++] = 2,
        o[f++] = 3,
        a = e.createBuffer(),
        s = e.createBuffer(),
        e.bindBuffer(e.ARRAY_BUFFER, a),
        e.bufferData(e.ARRAY_BUFFER, n, e.STATIC_DRAW),
        e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, s),
        e.bufferData(e.ELEMENT_ARRAY_BUFFER, o, e.STATIC_DRAW),
        l = e.createTexture(),
        h = e.createTexture(),
        e.bindTexture(e.TEXTURE_2D, l),
        e.texImage2D(e.TEXTURE_2D, 0, e.RGB, 16, 16, 0, e.RGB, e.UNSIGNED_BYTE, null ),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST),
        e.bindTexture(e.TEXTURE_2D, h),
        e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, 16, 16, 0, e.RGBA, e.UNSIGNED_BYTE, null ),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST),
        e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST),
        0 >= e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS) ? (c = !1,
        u = t(THREE.ShaderFlares.lensFlare, r)) : (c = !0,
        u = t(THREE.ShaderFlares.lensFlareVertexTexture, r)),
        p = {},
        d = {},
        p.vertex = e.getAttribLocation(u, "position"),
        p.uv = e.getAttribLocation(u, "uv"),
        d.renderType = e.getUniformLocation(u, "renderType"),
        d.map = e.getUniformLocation(u, "map"),
        d.occlusionMap = e.getUniformLocation(u, "occlusionMap"),
        d.opacity = e.getUniformLocation(u, "opacity"),
        d.color = e.getUniformLocation(u, "color"),
        d.scale = e.getUniformLocation(u, "scale"),
        d.rotation = e.getUniformLocation(u, "rotation"),
        d.screenPosition = e.getUniformLocation(u, "screenPosition")
    }
    ,
    this.render = function(t, r, n, o) {
        t = t.__webglFlares;
        var f = t.length;
        if (f) {
            var m = new THREE.Vector3
              , g = o / n
              , E = .5 * n
              , y = .5 * o
              , v = 16 / o
              , _ = new THREE.Vector2(v * g,v)
              , x = new THREE.Vector3(1,1,0)
              , T = new THREE.Vector2(1,1)
              , w = d
              , v = p;
            e.useProgram(u),
            e.enableVertexAttribArray(p.vertex),
            e.enableVertexAttribArray(p.uv),
            e.uniform1i(w.occlusionMap, 0),
            e.uniform1i(w.map, 1),
            e.bindBuffer(e.ARRAY_BUFFER, a),
            e.vertexAttribPointer(v.vertex, 2, e.FLOAT, !1, 16, 0),
            e.vertexAttribPointer(v.uv, 2, e.FLOAT, !1, 16, 8),
            e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, s),
            e.disable(e.CULL_FACE),
            e.depthMask(!1);
            var b, R, H, S, M;
            for (b = 0; f > b; b++)
                if (v = 16 / o,
                _.set(v * g, v),
                S = t[b],
                m.set(S.matrixWorld.elements[12], S.matrixWorld.elements[13], S.matrixWorld.elements[14]),
                m.applyMatrix4(r.matrixWorldInverse),
                m.applyProjection(r.projectionMatrix),
                x.copy(m),
                T.x = x.x * E + E,
                T.y = x.y * y + y,
                c || 0 < T.x && T.x < n && 0 < T.y && T.y < o)
                    for (e.activeTexture(e.TEXTURE1),
                    e.bindTexture(e.TEXTURE_2D, l),
                    e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGB, T.x - 8, T.y - 8, 16, 16, 0),
                    e.uniform1i(w.renderType, 0),
                    e.uniform2f(w.scale, _.x, _.y),
                    e.uniform3f(w.screenPosition, x.x, x.y, x.z),
                    e.disable(e.BLEND),
                    e.enable(e.DEPTH_TEST),
                    e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                    e.activeTexture(e.TEXTURE0),
                    e.bindTexture(e.TEXTURE_2D, h),
                    e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGBA, T.x - 8, T.y - 8, 16, 16, 0),
                    e.uniform1i(w.renderType, 1),
                    e.disable(e.DEPTH_TEST),
                    e.activeTexture(e.TEXTURE1),
                    e.bindTexture(e.TEXTURE_2D, l),
                    e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                    S.positionScreen.copy(x),
                    S.customUpdateCallback ? S.customUpdateCallback(S) : S.updateLensFlares(),
                    e.uniform1i(w.renderType, 2),
                    e.enable(e.BLEND),
                    R = 0,
                    H = S.lensFlares.length; H > R; R++)
                        M = S.lensFlares[R],
                        .001 < M.opacity && .001 < M.scale && (x.x = M.x,
                        x.y = M.y,
                        x.z = M.z,
                        v = M.size * M.scale / o,
                        _.x = v * g,
                        _.y = v,
                        e.uniform3f(w.screenPosition, x.x, x.y, x.z),
                        e.uniform2f(w.scale, _.x, _.y),
                        e.uniform1f(w.rotation, M.rotation),
                        e.uniform1f(w.opacity, M.opacity),
                        e.uniform3f(w.color, M.color.r, M.color.g, M.color.b),
                        i.setBlending(M.blending, M.blendEquation, M.blendSrc, M.blendDst),
                        i.setTexture(M.texture, 1),
                        e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0));
            e.enable(e.CULL_FACE),
            e.enable(e.DEPTH_TEST),
            e.depthMask(!0)
        }
    }
}
,
THREE.ShadowMapPlugin = function() {
    var t, e, i, r, n, o, a = new THREE.Frustum, s = new THREE.Matrix4, l = new THREE.Vector3, h = new THREE.Vector3, c = new THREE.Vector3;
    this.init = function(a) {
        t = a.context,
        e = a,
        a = THREE.ShaderLib.depthRGBA;
        var s = THREE.UniformsUtils.clone(a.uniforms);
        i = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s
        }),
        r = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            morphTargets: !0
        }),
        n = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            skinning: !0
        }),
        o = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            morphTargets: !0,
            skinning: !0
        }),
        i._shadowPass = !0,
        r._shadowPass = !0,
        n._shadowPass = !0,
        o._shadowPass = !0
    }
    ,
    this.render = function(t, i) {
        e.shadowMapEnabled && e.shadowMapAutoUpdate && this.update(t, i)
    }
    ,
    this.update = function(u, p) {
        var d, f, m, g, E, y, v, _, x, T = [];
        for (g = 0,
        t.clearColor(1, 1, 1, 1),
        t.disable(t.BLEND),
        t.enable(t.CULL_FACE),
        t.frontFace(t.CCW),
        t.cullFace(e.shadowMapCullFace === THREE.CullFaceFront ? t.FRONT : t.BACK),
        e.setDepthTest(!0),
        d = 0,
        f = u.__lights.length; f > d; d++)
            if (m = u.__lights[d],
            m.castShadow)
                if (m instanceof THREE.DirectionalLight && m.shadowCascade)
                    for (E = 0; E < m.shadowCascadeCount; E++) {
                        var w;
                        if (m.shadowCascadeArray[E])
                            w = m.shadowCascadeArray[E];
                        else {
                            x = m,
                            v = E,
                            w = new THREE.DirectionalLight,
                            w.isVirtual = !0,
                            w.onlyShadow = !0,
                            w.castShadow = !0,
                            w.shadowCameraNear = x.shadowCameraNear,
                            w.shadowCameraFar = x.shadowCameraFar,
                            w.shadowCameraLeft = x.shadowCameraLeft,
                            w.shadowCameraRight = x.shadowCameraRight,
                            w.shadowCameraBottom = x.shadowCameraBottom,
                            w.shadowCameraTop = x.shadowCameraTop,
                            w.shadowCameraVisible = x.shadowCameraVisible,
                            w.shadowDarkness = x.shadowDarkness,
                            w.shadowBias = x.shadowCascadeBias[v],
                            w.shadowMapWidth = x.shadowCascadeWidth[v],
                            w.shadowMapHeight = x.shadowCascadeHeight[v],
                            w.pointsWorld = [],
                            w.pointsFrustum = [];
                            var b = w.pointsWorld;
                            for (y = w.pointsFrustum,
                            _ = 0; 8 > _; _++)
                                b[_] = new THREE.Vector3,
                                y[_] = new THREE.Vector3;
                            b = x.shadowCascadeNearZ[v],
                            x = x.shadowCascadeFarZ[v],
                            y[0].set(-1, -1, b),
                            y[1].set(1, -1, b),
                            y[2].set(-1, 1, b),
                            y[3].set(1, 1, b),
                            y[4].set(-1, -1, x),
                            y[5].set(1, -1, x),
                            y[6].set(-1, 1, x),
                            y[7].set(1, 1, x),
                            w.originalCamera = p,
                            y = new THREE.Gyroscope,
                            y.position.copy(m.shadowCascadeOffset),
                            y.add(w),
                            y.add(w.target),
                            p.add(y),
                            m.shadowCascadeArray[E] = w,
                            console.log("Created virtualLight", w)
                        }
                        v = m,
                        b = E,
                        x = v.shadowCascadeArray[b],
                        x.position.copy(v.position),
                        x.target.position.copy(v.target.position),
                        x.lookAt(x.target),
                        x.shadowCameraVisible = v.shadowCameraVisible,
                        x.shadowDarkness = v.shadowDarkness,
                        x.shadowBias = v.shadowCascadeBias[b],
                        y = v.shadowCascadeNearZ[b],
                        v = v.shadowCascadeFarZ[b],
                        x = x.pointsFrustum,
                        x[0].z = y,
                        x[1].z = y,
                        x[2].z = y,
                        x[3].z = y,
                        x[4].z = v,
                        x[5].z = v,
                        x[6].z = v,
                        x[7].z = v,
                        T[g] = w,
                        g++
                    }
                else
                    T[g] = m,
                    g++;
        for (d = 0,
        f = T.length; f > d; d++) {
            if (m = T[d],
            m.shadowMap || (E = THREE.LinearFilter,
            e.shadowMapType === THREE.PCFSoftShadowMap && (E = THREE.NearestFilter),
            m.shadowMap = new THREE.WebGLRenderTarget(m.shadowMapWidth,m.shadowMapHeight,{
                minFilter: E,
                magFilter: E,
                format: THREE.RGBAFormat
            }),
            m.shadowMapSize = new THREE.Vector2(m.shadowMapWidth,m.shadowMapHeight),
            m.shadowMatrix = new THREE.Matrix4),
            !m.shadowCamera) {
                if (m instanceof THREE.SpotLight)
                    m.shadowCamera = new THREE.PerspectiveCamera(m.shadowCameraFov,m.shadowMapWidth / m.shadowMapHeight,m.shadowCameraNear,m.shadowCameraFar);
                else {
                    if (!(m instanceof THREE.DirectionalLight)) {
                        console.error("Unsupported light type for shadow");
                        continue
                    }
                    m.shadowCamera = new THREE.OrthographicCamera(m.shadowCameraLeft,m.shadowCameraRight,m.shadowCameraTop,m.shadowCameraBottom,m.shadowCameraNear,m.shadowCameraFar)
                }
                u.add(m.shadowCamera),
                !0 === u.autoUpdate && u.updateMatrixWorld()
            }
            if (m.shadowCameraVisible && !m.cameraHelper && (m.cameraHelper = new THREE.CameraHelper(m.shadowCamera),
            m.shadowCamera.add(m.cameraHelper)),
            m.isVirtual && w.originalCamera == p) {
                for (E = p,
                g = m.shadowCamera,
                y = m.pointsFrustum,
                x = m.pointsWorld,
                l.set(1 / 0, 1 / 0, 1 / 0),
                h.set(-(1 / 0), -(1 / 0), -(1 / 0)),
                v = 0; 8 > v; v++)
                    b = x[v],
                    b.copy(y[v]),
                    THREE.ShadowMapPlugin.__projector.unprojectVector(b, E),
                    b.applyMatrix4(g.matrixWorldInverse),
                    b.x < l.x && (l.x = b.x),
                    b.x > h.x && (h.x = b.x),
                    b.y < l.y && (l.y = b.y),
                    b.y > h.y && (h.y = b.y),
                    b.z < l.z && (l.z = b.z),
                    b.z > h.z && (h.z = b.z);
                g.left = l.x,
                g.right = h.x,
                g.top = h.y,
                g.bottom = l.y,
                g.updateProjectionMatrix()
            }
            for (g = m.shadowMap,
            y = m.shadowMatrix,
            E = m.shadowCamera,
            E.position.setFromMatrixPosition(m.matrixWorld),
            c.setFromMatrixPosition(m.target.matrixWorld),
            E.lookAt(c),
            E.updateMatrixWorld(),
            E.matrixWorldInverse.getInverse(E.matrixWorld),
            m.cameraHelper && (m.cameraHelper.visible = m.shadowCameraVisible),
            m.shadowCameraVisible && m.cameraHelper.update(),
            y.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
            y.multiply(E.projectionMatrix),
            y.multiply(E.matrixWorldInverse),
            s.multiplyMatrices(E.projectionMatrix, E.matrixWorldInverse),
            a.setFromMatrix(s),
            e.setRenderTarget(g),
            e.clear(),
            x = u.__webglObjects,
            m = 0,
            g = x.length; g > m; m++)
                v = x[m],
                y = v.object,
                v.render = !1,
                !y.visible || !y.castShadow || (y instanceof THREE.Mesh || y instanceof THREE.ParticleSystem) && y.frustumCulled && !a.intersectsObject(y) || (y._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse, y.matrixWorld),
                v.render = !0);
            var R;
            for (m = 0,
            g = x.length; g > m; m++)
                v = x[m],
                v.render && (y = v.object,
                v = v.buffer,
                b = y.material instanceof THREE.MeshFaceMaterial ? y.material.materials[0] : y.material,
                _ = void 0 !== y.geometry.morphTargets && 0 < y.geometry.morphTargets.length && b.morphTargets,
                R = y instanceof THREE.SkinnedMesh && b.skinning,
                _ = y.customDepthMaterial ? y.customDepthMaterial : R ? _ ? o : n : _ ? r : i,
                e.setMaterialFaces(b),
                v instanceof THREE.BufferGeometry ? e.renderBufferDirect(E, u.__lights, null , _, v, y) : e.renderBuffer(E, u.__lights, null , _, v, y));
            for (x = u.__webglObjectsImmediate,
            m = 0,
            g = x.length; g > m; m++)
                v = x[m],
                y = v.object,
                y.visible && y.castShadow && (y._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse, y.matrixWorld),
                e.renderImmediateObject(E, u.__lights, null , i, y))
        }
        d = e.getClearColor(),
        f = e.getClearAlpha(),
        t.clearColor(d.r, d.g, d.b, f),
        t.enable(t.BLEND),
        e.shadowMapCullFace === THREE.CullFaceFront && t.cullFace(t.BACK)
    }
}
,
THREE.ShadowMapPlugin.__projector = new THREE.Projector,
THREE.SpritePlugin = function() {
    function t(t, e) {
        return t.z !== e.z ? e.z - t.z : e.id - t.id
    }
    var e, i, r, n, o, a, s, l, h, c, u, p, d, f, m, g, E, y, v, _, x, T, w, b, R;
    this.init = function(t) {
        y = t.context,
        v = t,
        x = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),
        T = new Uint16Array([0, 1, 2, 0, 2, 3]),
        w = y.createBuffer(),
        b = y.createBuffer(),
        y.bindBuffer(y.ARRAY_BUFFER, w),
        y.bufferData(y.ARRAY_BUFFER, x, y.STATIC_DRAW),
        y.bindBuffer(y.ELEMENT_ARRAY_BUFFER, b),
        y.bufferData(y.ELEMENT_ARRAY_BUFFER, T, y.STATIC_DRAW),
        t = y.createProgram();
        var H = y.createShader(y.VERTEX_SHADER)
          , S = y.createShader(y.FRAGMENT_SHADER);
        y.shaderSource(H, ["precision " + v.getPrecision() + " float;", "uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),
        y.shaderSource(S, ["precision " + v.getPrecision() + " float;", "uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),
        y.compileShader(H),
        y.compileShader(S),
        y.attachShader(t, H),
        y.attachShader(t, S),
        y.linkProgram(t),
        R = t,
        g = y.getAttribLocation(R, "position"),
        E = y.getAttribLocation(R, "uv"),
        e = y.getUniformLocation(R, "uvOffset"),
        i = y.getUniformLocation(R, "uvScale"),
        r = y.getUniformLocation(R, "rotation"),
        n = y.getUniformLocation(R, "scale"),
        o = y.getUniformLocation(R, "color"),
        a = y.getUniformLocation(R, "map"),
        s = y.getUniformLocation(R, "opacity"),
        l = y.getUniformLocation(R, "modelViewMatrix"),
        h = y.getUniformLocation(R, "projectionMatrix"),
        c = y.getUniformLocation(R, "fogType"),
        u = y.getUniformLocation(R, "fogDensity"),
        p = y.getUniformLocation(R, "fogNear"),
        d = y.getUniformLocation(R, "fogFar"),
        f = y.getUniformLocation(R, "fogColor"),
        m = y.getUniformLocation(R, "alphaTest"),
        t = document.createElement("canvas"),
        t.width = 8,
        t.height = 8,
        H = t.getContext("2d"),
        H.fillStyle = "#ffffff",
        H.fillRect(0, 0, t.width, t.height),
        _ = new THREE.Texture(t),
        _.needsUpdate = !0
    }
    ,
    this.render = function(x, T, H, S) {
        if (H = x.__webglSprites,
        S = H.length) {
            y.useProgram(R),
            y.enableVertexAttribArray(g),
            y.enableVertexAttribArray(E),
            y.disable(y.CULL_FACE),
            y.enable(y.BLEND),
            y.bindBuffer(y.ARRAY_BUFFER, w),
            y.vertexAttribPointer(g, 2, y.FLOAT, !1, 16, 0),
            y.vertexAttribPointer(E, 2, y.FLOAT, !1, 16, 8),
            y.bindBuffer(y.ELEMENT_ARRAY_BUFFER, b),
            y.uniformMatrix4fv(h, !1, T.projectionMatrix.elements),
            y.activeTexture(y.TEXTURE0),
            y.uniform1i(a, 0);
            var M = 0
              , C = 0
              , A = x.fog;
            A ? (y.uniform3f(f, A.color.r, A.color.g, A.color.b),
            A instanceof THREE.Fog ? (y.uniform1f(p, A.near),
            y.uniform1f(d, A.far),
            y.uniform1i(c, 1),
            C = M = 1) : A instanceof THREE.FogExp2 && (y.uniform1f(u, A.density),
            y.uniform1i(c, 2),
            C = M = 2)) : (y.uniform1i(c, 0),
            C = M = 0);
            for (var P, L = [], A = 0; S > A; A++)
                P = H[A],
                !1 !== P.visible && (P._modelViewMatrix.multiplyMatrices(T.matrixWorldInverse, P.matrixWorld),
                P.z = -P._modelViewMatrix.elements[14]);
            for (H.sort(t),
            A = 0; S > A; A++)
                P = H[A],
                !1 !== P.visible && (T = P.material,
                y.uniform1f(m, T.alphaTest),
                y.uniformMatrix4fv(l, !1, P._modelViewMatrix.elements),
                L[0] = P.scale.x,
                L[1] = P.scale.y,
                P = x.fog && T.fog ? C : 0,
                M !== P && (y.uniform1i(c, P),
                M = P),
                null  !== T.map ? (y.uniform2f(e, T.map.offset.x, T.map.offset.y),
                y.uniform2f(i, T.map.repeat.x, T.map.repeat.y)) : (y.uniform2f(e, 0, 0),
                y.uniform2f(i, 1, 1)),
                y.uniform1f(s, T.opacity),
                y.uniform3f(o, T.color.r, T.color.g, T.color.b),
                y.uniform1f(r, T.rotation),
                y.uniform2fv(n, L),
                v.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst),
                v.setDepthTest(T.depthTest),
                v.setDepthWrite(T.depthWrite),
                T.map && T.map.image && T.map.image.width ? v.setTexture(T.map, 0) : v.setTexture(_, 0),
                y.drawElements(y.TRIANGLES, 6, y.UNSIGNED_SHORT, 0));
            y.enable(y.CULL_FACE)
        }
    }
}
,
THREE.DepthPassPlugin = function() {
    this.enabled = !1,
    this.renderTarget = null ;
    var t, e, i, r, n, o, a = new THREE.Frustum, s = new THREE.Matrix4;
    this.init = function(a) {
        t = a.context,
        e = a,
        a = THREE.ShaderLib.depthRGBA;
        var s = THREE.UniformsUtils.clone(a.uniforms);
        i = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s
        }),
        r = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            morphTargets: !0
        }),
        n = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            skinning: !0
        }),
        o = new THREE.ShaderMaterial({
            fragmentShader: a.fragmentShader,
            vertexShader: a.vertexShader,
            uniforms: s,
            morphTargets: !0,
            skinning: !0
        }),
        i._shadowPass = !0,
        r._shadowPass = !0,
        n._shadowPass = !0,
        o._shadowPass = !0
    }
    ,
    this.render = function(t, e) {
        this.enabled && this.update(t, e)
    }
    ,
    this.update = function(l, h) {
        var c, u, p, d, f, m;
        for (t.clearColor(1, 1, 1, 1),
        t.disable(t.BLEND),
        e.setDepthTest(!0),
        !0 === l.autoUpdate && l.updateMatrixWorld(),
        h.matrixWorldInverse.getInverse(h.matrixWorld),
        s.multiplyMatrices(h.projectionMatrix, h.matrixWorldInverse),
        a.setFromMatrix(s),
        e.setRenderTarget(this.renderTarget),
        e.clear(),
        m = l.__webglObjects,
        c = 0,
        u = m.length; u > c; c++)
            p = m[c],
            f = p.object,
            p.render = !1,
            !f.visible || (f instanceof THREE.Mesh || f instanceof THREE.ParticleSystem) && f.frustumCulled && !a.intersectsObject(f) || (f._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse, f.matrixWorld),
            p.render = !0);
        var g;
        for (c = 0,
        u = m.length; u > c; c++)
            p = m[c],
            p.render && (f = p.object,
            p = p.buffer,
            f instanceof THREE.ParticleSystem && !f.customDepthMaterial || ((g = f.material instanceof THREE.MeshFaceMaterial ? f.material.materials[0] : f.material) && e.setMaterialFaces(f.material),
            d = void 0 !== f.geometry.morphTargets && 0 < f.geometry.morphTargets.length && g.morphTargets,
            g = f instanceof THREE.SkinnedMesh && g.skinning,
            d = f.customDepthMaterial ? f.customDepthMaterial : g ? d ? o : n : d ? r : i,
            p instanceof THREE.BufferGeometry ? e.renderBufferDirect(h, l.__lights, null , d, p, f) : e.renderBuffer(h, l.__lights, null , d, p, f)));
        for (m = l.__webglObjectsImmediate,
        c = 0,
        u = m.length; u > c; c++)
            p = m[c],
            f = p.object,
            f.visible && (f._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse, f.matrixWorld),
            e.renderImmediateObject(h, l.__lights, null , i, f));
        c = e.getClearColor(),
        u = e.getClearAlpha(),
        t.clearColor(c.r, c.g, c.b, u),
        t.enable(t.BLEND)
    }
}
,
THREE.ShaderFlares = {
    lensFlareVertexTexture: {
        vertexShader: "uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
        fragmentShader: "uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"
    },
    lensFlare: {
        vertexShader: "uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
        fragmentShader: "precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"
    }
},
THREE.OrbitControls = function(t, e) {
    function i() {
        return 2 * Math.PI / 60 / 60 * p.autoRotateSpeed
    }
    function r() {
        return Math.pow(.95, p.zoomSpeed)
    }
    function n(t) {
        if (p.enabled !== !1) {
            if (t.preventDefault(),
            0 === t.button) {
                if (p.noRotate === !0)
                    return;
                P = A.ROTATE,
                f.set(t.clientX, t.clientY)
            } else if (1 === t.button) {
                if (p.noZoom === !0)
                    return;
                P = A.DOLLY,
                T.set(t.clientX, t.clientY)
            } else if (2 === t.button) {
                if (p.noPan === !0)
                    return;
                P = A.PAN,
                E.set(t.clientX, t.clientY)
            }
            p.domElement.addEventListener("mousemove", o, !1),
            p.domElement.addEventListener("mouseup", a, !1),
            p.dispatchEvent(O)
        }
    }
    function o(t) {
        if (p.enabled !== !1) {
            t.preventDefault();
            var e = p.domElement === document ? p.domElement.body : p.domElement;
            if (P === A.ROTATE) {
                if (p.noRotate === !0)
                    return;
                m.set(t.clientX, t.clientY),
                g.subVectors(m, f),
                p.rotateLeft(2 * Math.PI * g.x / e.clientWidth * p.rotateSpeed),
                p.rotateUp(2 * Math.PI * g.y / e.clientHeight * p.rotateSpeed),
                f.copy(m)
            } else if (P === A.DOLLY) {
                if (p.noZoom === !0)
                    return;
                w.set(t.clientX, t.clientY),
                b.subVectors(w, T),
                b.y > 0 ? p.dollyIn() : p.dollyOut(),
                T.copy(w)
            } else if (P === A.PAN) {
                if (p.noPan === !0)
                    return;
                y.set(t.clientX, t.clientY),
                v.subVectors(y, E),
                p.pan(v.x, v.y),
                E.copy(y)
            }
            p.update()
        }
    }
    function a() {
        p.enabled !== !1 && (p.domElement.removeEventListener("mousemove", o, !1),
        p.domElement.removeEventListener("mouseup", a, !1),
        p.dispatchEvent(F),
        P = A.NONE)
    }
    function s(t) {
        if (p.enabled !== !1 && p.noZoom !== !0) {
            t.preventDefault(),
            t.stopPropagation();
            var e = 0;
            void 0 !== t.wheelDelta ? e = t.wheelDelta : void 0 !== t.detail && (e = -t.detail),
            e > 0 ? p.dollyOut() : p.dollyIn(),
            p.update(),
            p.dispatchEvent(O),
            p.dispatchEvent(F)
        }
    }
    function l(t) {
        if (p.enabled !== !1 && p.noKeys !== !0 && p.noPan !== !0)
            switch (t.keyCode) {
            case p.keys.UP:
                p.pan(0, p.keyPanSpeed),
                p.update();
                break;
            case p.keys.BOTTOM:
                p.pan(0, -p.keyPanSpeed),
                p.update();
                break;
            case p.keys.LEFT:
                p.pan(p.keyPanSpeed, 0),
                p.update();
                break;
            case p.keys.RIGHT:
                p.pan(-p.keyPanSpeed, 0),
                p.update()
            }
    }
    function h(t) {
        if (p.enabled !== !1) {
            switch (t.touches.length) {
            case 1:
                if (p.noRotate === !0)
                    return;
                P = A.TOUCH_ROTATE,
                f.set(t.touches[0].pageX, t.touches[0].pageY);
                break;
            case 2:
                if (p.noZoom === !0)
                    return;
                P = A.TOUCH_DOLLY;
                var e = t.touches[0].pageX - t.touches[1].pageX
                  , i = t.touches[0].pageY - t.touches[1].pageY
                  , r = Math.sqrt(e * e + i * i);
                T.set(0, r);
                break;
            case 3:
                if (p.noPan === !0)
                    return;
                P = A.TOUCH_PAN,
                E.set(t.touches[0].pageX, t.touches[0].pageY);
                break;
            default:
                P = A.NONE
            }
            p.dispatchEvent(O)
        }
    }
    function c(t) {
        if (p.enabled !== !1) {
            t.preventDefault(),
            t.stopPropagation();
            var e = p.domElement === document ? p.domElement.body : p.domElement;
            switch (t.touches.length) {
            case 1:
                if (p.noRotate === !0)
                    return;
                if (P !== A.TOUCH_ROTATE)
                    return;
                m.set(t.touches[0].pageX, t.touches[0].pageY),
                g.subVectors(m, f),
                p.rotateLeft(2 * Math.PI * g.x / e.clientWidth * p.rotateSpeed),
                p.rotateUp(2 * Math.PI * g.y / e.clientHeight * p.rotateSpeed),
                f.copy(m),
                p.update();
                break;
            case 2:
                if (p.noZoom === !0)
                    return;
                if (P !== A.TOUCH_DOLLY)
                    return;
                var i = t.touches[0].pageX - t.touches[1].pageX
                  , r = t.touches[0].pageY - t.touches[1].pageY
                  , n = Math.sqrt(i * i + r * r);
                w.set(0, n),
                b.subVectors(w, T),
                b.y > 0 ? p.dollyOut() : p.dollyIn(),
                T.copy(w),
                p.update();
                break;
            case 3:
                if (p.noPan === !0)
                    return;
                if (P !== A.TOUCH_PAN)
                    return;
                y.set(t.touches[0].pageX, t.touches[0].pageY),
                v.subVectors(y, E),
                p.pan(v.x, v.y),
                E.copy(y),
                p.update();
                break;
            default:
                P = A.NONE
            }
        }
    }
    function u() {
        p.enabled !== !1 && (p.dispatchEvent(F),
        P = A.NONE)
    }
    this.object = t,
    this.domElement = void 0 !== e ? e : document,
    this.enabled = !0,
    this.target = new THREE.Vector3,
    this.center = this.target,
    this.noZoom = !1,
    this.zoomSpeed = 1,
    this.minDistance = 0,
    this.maxDistance = 1 / 0,
    this.noRotate = !1,
    this.rotateSpeed = 1,
    this.noPan = !1,
    this.keyPanSpeed = 7,
    this.autoRotate = !1,
    this.autoRotateSpeed = 2,
    this.minPolarAngle = 0,
    this.maxPolarAngle = Math.PI,
    this.noKeys = !1,
    this.keys = {
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        BOTTOM: 40
    };
    var p = this
      , d = 1e-6
      , f = new THREE.Vector2
      , m = new THREE.Vector2
      , g = new THREE.Vector2
      , E = new THREE.Vector2
      , y = new THREE.Vector2
      , v = new THREE.Vector2
      , _ = new THREE.Vector3
      , x = new THREE.Vector3
      , T = new THREE.Vector2
      , w = new THREE.Vector2
      , b = new THREE.Vector2
      , R = 0
      , H = 0
      , S = 1
      , M = new THREE.Vector3
      , C = new THREE.Vector3
      , A = {
        NONE: -1,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_DOLLY: 4,
        TOUCH_PAN: 5
    }
      , P = A.NONE;
    this.target0 = this.target.clone(),
    this.position0 = this.object.position.clone();
    var L = (new THREE.Quaternion).setFromUnitVectors(t.up, new THREE.Vector3(0,1,0))
      , D = L.clone().inverse()
      , k = {
        type: "change"
    }
      , O = {
        type: "start"
    }
      , F = {
        type: "end"
    };
    this.rotateLeft = function(t) {
        void 0 === t && (t = i()),
        H -= t
    }
    ,
    this.rotateUp = function(t) {
        void 0 === t && (t = i()),
        R -= t
    }
    ,
    this.panLeft = function(t) {
        var e = this.object.matrix.elements;
        _.set(e[0], e[1], e[2]),
        _.multiplyScalar(-t),
        M.add(_)
    }
    ,
    this.panUp = function(t) {
        var e = this.object.matrix.elements;
        _.set(e[4], e[5], e[6]),
        _.multiplyScalar(t),
        M.add(_)
    }
    ,
    this.pan = function(t, e) {
        var i = p.domElement === document ? p.domElement.body : p.domElement;
        if (void 0 !== p.object.fov) {
            var r = p.object.position
              , n = r.clone().sub(p.target)
              , o = n.length();
            o *= Math.tan(p.object.fov / 2 * Math.PI / 180),
            p.panLeft(2 * t * o / i.clientHeight),
            p.panUp(2 * e * o / i.clientHeight)
        } else
            void 0 !== p.object.top ? (p.panLeft(t * (p.object.right - p.object.left) / i.clientWidth),
            p.panUp(e * (p.object.top - p.object.bottom) / i.clientHeight)) : console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")
    }
    ,
    this.dollyIn = function(t) {
        void 0 === t && (t = r()),
        S /= t
    }
    ,
    this.dollyOut = function(t) {
        void 0 === t && (t = r()),
        S *= t
    }
    ,
    this.update = function() {
        var t = this.object.position;
        x.copy(t).sub(this.target),
        x.applyQuaternion(L);
        var e = Math.atan2(x.x, x.z)
          , r = Math.atan2(Math.sqrt(x.x * x.x + x.z * x.z), x.y);
        this.autoRotate && this.rotateLeft(i()),
        e += H,
        r += R,
        r = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, r)),
        r = Math.max(d, Math.min(Math.PI - d, r));
        var n = x.length() * S;
        n = Math.max(this.minDistance, Math.min(this.maxDistance, n)),
        this.target.add(M),
        x.x = n * Math.sin(r) * Math.sin(e),
        x.y = n * Math.cos(r),
        x.z = n * Math.sin(r) * Math.cos(e),
        x.applyQuaternion(D),
        t.copy(this.target).add(x),
        this.object.lookAt(this.target),
        H = 0,
        R = 0,
        S = 1,
        M.set(0, 0, 0),
        C.distanceToSquared(this.object.position) > d && (this.dispatchEvent(k),
        C.copy(this.object.position))
    }
    ,
    this.reset = function() {
        P = A.NONE,
        this.target.copy(this.target0),
        this.object.position.copy(this.position0),
        this.update()
    }
    ,
    this.domElement.addEventListener("contextmenu", function(t) {
        t.preventDefault()
    }
    , !1),
    this.domElement.addEventListener("mousedown", n, !1),
    this.domElement.addEventListener("mousewheel", s, !1),
    this.domElement.addEventListener("DOMMouseScroll", s, !1),
    this.domElement.addEventListener("touchstart", h, !1),
    this.domElement.addEventListener("touchend", u, !1),
    this.domElement.addEventListener("touchmove", c, !1),
    window.addEventListener("keydown", l, !1),
    this.update()
}
,
THREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);
var Detector = {
    canvas: !!window.CanvasRenderingContext2D,
    webgl: function() {
        try {
            var t = document.createElement("canvas");
            return !!window.WebGLRenderingContext && (t.getContext("webgl") || t.getContext("experimental-webgl"))
        } catch (e) {
            return !1
        }
    }
    (),
    workers: !!window.Worker,
    fileapi: window.File && window.FileReader && window.FileList && window.Blob,
    getWebGLErrorMessage: function() {
        var t = document.createElement("div");
        return t.id = "webgl-error-message",
        t.style.fontFamily = "monospace",
        t.style.fontSize = "13px",
        t.style.fontWeight = "normal",
        t.style.textAlign = "center",
        t.style.background = "#fff",
        t.style.color = "#000",
        t.style.padding = "1.5em",
        t.style.width = "400px",
        t.style.margin = "5em auto 0",
        this.webgl || (t.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),
        t
    },
    addGetWebGLMessage: function(t) {
        var e, i, r;
        t = t || {},
        e = void 0 !== t.parent ? t.parent : document.body,
        i = void 0 !== t.id ? t.id : "oldie",
        r = Detector.getWebGLErrorMessage(),
        r.id = i,
        e.appendChild(r)
    }
};
!function(t, e) {
    "function" == typeof define && define.amd ? define(["jquery"], function(i) {
        return e(t, i)
    }
    ) : "object" == typeof exports ? module.exports = e(t, require("jquery")) : e(t, jQuery)
}
(this, function(t, e, i) {
    "use strict";
    function r() {
        "hidden" !== n && (a.hidden = l.pageVisibility ? a[n] : i)
    }
    for (var n, o, a = t.document, s = ["webkit", "o", "ms", "moz", ""], l = e.support || {}, h = ("onfocusin" in a && "hasFocus" in a ? "focusin focusout" : "focus blur"); (o = s.pop()) !== i; )
        if (n = (o ? o + "H" : "h") + "idden",
        l.pageVisibility = a[n] !== i,
        l.pageVisibility) {
            h = o + "visibilitychange";
            break
        }
    r(),
    e(/blur$/.test(h) ? t : a).on(h, function(t) {
        var o = t.type
          , s = t.originalEvent;
        if (s) {
            var l = s.toElement;
            (!/^focus./.test(o) || l === i && s.fromElement === i && s.relatedTarget === i) && e(a).triggerHandler(n && a[n] || /^(?:blur|focusout)$/.test(o) ? "hide" : "show"),
            r()
        }
    }
    )
}
);
var relax = {};
relax.animation = {},
relax.browser = {},
relax.math = {},
relax.geom = {},
relax.color = {},
relax.performance = {},
relax.layout = {},
relax.caniuse = {},
relax.dom = {},
relax.tools = {},
relax.displayObject = {},
relax.geom.lineDistance = function(t, e) {
    var i = 0
      , r = 0;
    return i = e.x - t.x,
    i *= i,
    r = e.y - t.y,
    r *= r,
    Math.sqrt(i + r)
}
,
relax.geom.degToRad = function(t) {
    return t / 180 * Math.PI
}
,
relax.geom.radToDeg = function(t) {
    return 180 * t / Math.PI
}
,
relax.geom.getXYFromMouseTouchEvent = function(t) {
    var e = null ;
    return t.originalEvent ? e = t.originalEvent.touches || t.originalEvent.changedTouches : t.changedTouches && (e = t.changedTouches),
    e ? {
        x: e[0].pageX,
        y: e[0].pageY,
        touches: e[0]
    } : {
        x: t.pageX,
        y: t.pageY,
        touches: null 
    }
}
,
relax.geom.getDistanceFromLatLonInKm = function(t, e, i, r) {
    var n = 6371
      , o = relax.geom.degToRad(i - t)
      , a = relax.geom.degToRad(r - e)
      , s = Math.sin(o / 2) * Math.sin(o / 2) + Math.cos(relax.geom.degToRad(t)) * Math.cos(relax.geom.degToRad(i)) * Math.sin(a / 2) * Math.sin(a / 2)
      , l = 2 * Math.atan2(Math.sqrt(s), Math.sqrt(1 - s))
      , h = n * l;
    return h
}
,
relax.dom.bindSelect = function(t, e, i) {
    var r = relax.browser.getInternetExplorerVersion() <= 8 && -1 !== relax.browser.getInternetExplorerVersion()
      , n = i;
    r ? $(t).bind("propertychange", function(t) {
        "propertychange" == t.type && "value" == event.propertyName.toLowerCase() && (t.target.selectedIndex = this.selectedIndex,
        n(t))
    }
    ) : $(t).change(relax.dom.bind(e, n))
}
,
relax.dom.bind = function(t, e) {
    return function() {
        e.apply(t, arguments)
    }
}
,
relax.tools.checkInterface = function(t, e) {
    for (var i in e)
        if (typeof t[i] != typeof e[i])
            return log("object failed to implement interface member " + i),
            !1;
    return !0
}
,
function() {
    var t = !1
      , e = /xyz/.test(function() {
        xyz
    }
    ) ? /\b_super\b/ : /.*/;
    this.Class = function() {}
    ,
    Class.extend = function(i) {
        function r() {
            !t && this.init && this.init.apply(this, arguments)
        }
        var n = this.prototype;
        t = !0;
        var o = new this;
        t = !1;
        for (var a in i)
            o[a] = "function" == typeof i[a] && "function" == typeof n[a] && e.test(i[a]) ? function(t, e) {
                return function() {
                    var i = this._super;
                    this._super = n[t];
                    var r = e.apply(this, arguments);
                    return this._super = i,
                    r
                }
            }
            (a, i[a]) : i[a];
        return r.prototype = o,
        r.prototype.constructor = r,
        r.extend = arguments.callee,
        r
    }
    ,
    "function" == typeof define && define.amd && define("Class", function() {
        return Class
    }
    )
}
(),
relax.setLog = function(t) {
    t ? window.log = function() {}
     : -1 === relax.browser.getInternetExplorerVersion() ? (Function.prototype.bind && ("object" == typeof console || "function" == typeof console) && "object" == typeof console.log && ["log", "info", "warn", "error", "assert", "dir", "clear", "profile", "profileEnd"].forEach(function(t) {
        console[t] = this.call(console[t], console)
    }
    , Function.prototype.bind),
    window.log || (window.log = function() {
        var t, e, i, r, n = arguments, o = !1;
        if (log.history = log.history || [],
        log.history.push(arguments),
        log.detailPrint && log.needDetailPrint && (t = navigator.userAgent,
        e = /Windows\sNT\s(\d+\.\d+)/,
        console && console.log && /MSIE\s(\d+)/.test(t) && e.test(t) && parseFloat(e.exec(t)[1]) >= 6.1 && (o = !0)),
        o || "undefined" != typeof console && "function" == typeof console.log)
            if (log.detailPrint && log.needDetailPrint && log.needDetailPrint())
                for (console.log("-----------------"),
                n = log.detailPrint(n),
                r = 0; r < n.length; )
                    console.log(n[r]),
                    r++;
            else
                console.log(1 === Array.prototype.slice.call(n).length && "string" == typeof Array.prototype.slice.call(n)[0] ? Array.prototype.slice.call(n).toString() : Array.prototype.slice.call(n));
        else if (Function.prototype.bind || "undefined" == typeof console || "object" != typeof console.log)
            document.getElementById("firebug-lite") ? setTimeout(function() {
                window.log.apply(window, n)
            }
            , 500) : (i = document.createElement("script"),
            i.type = "text/javascript",
            i.id = "firebug-lite",
            i.src = "https://getfirebug.com/firebug-lite.js",
            document.getElementsByTagName("HEAD")[0].appendChild(i),
            setTimeout(function() {
                window.log.apply(window, n)
            }
            , 2e3));
        else if (log.detailPrint)
            for (Function.prototype.call.call(console.log, console, Array.prototype.slice.call(["-----------------"])),
            n = log.detailPrint(n),
            r = 0; r < n.length; )
                Function.prototype.call.call(console.log, console, Array.prototype.slice.call([n[r]])),
                r++;
        else
            Function.prototype.call.call(console.log, console, Array.prototype.slice.call(n))
    }
    )) : window.log = function() {
        if (log.history = log.history || [],
        log.history.push(arguments),
        this.console) {
            var t, e = arguments;
            e.callee = e.callee.caller,
            t = [].slice.call(e),
            "object" == typeof console.log ? log.apply.call(console.log, console, t) : console.log.apply(console, t)
        }
    }
}
,
function() {
    for (var t = 0, e = ["ms", "moz", "webkit", "o"], i = 0; i < e.length && !window.requestAnimationFrame; ++i)
        window.requestAnimationFrame = window[e[i] + "RequestAnimationFrame"],
        window.cancelRequestAnimationFrame = window[e[i] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(e, i) {
        var r = (new Date).getTime()
          , n = Math.max(0, 16 - (r - t))
          , o = window.setTimeout(function() {
            e(r + n)
        }
        , n);
        return t = r + n,
        o
    }
    ),
    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t) {
        clearTimeout(t)
    }
    )
}
(),
relax || (relax = {}),
relax.array || (relax.array = {}),
relax.date = {},
relax.array.equals = function(t, e) {
    if (!e)
        return !1;
    if (t.length != e.length)
        return !1;
    for (var i = 0, r = z.length; r > i; i++)
        if (t[i] instanceof Array && e[i] instanceof Array) {
            if (!relax.array.equals(t[i], e[i]))
                return !1
        } else if (t[i] != e[i])
            return !1;
    return !0
}
,
relax.array.equalInPercent = function(t, e) {
    if (!e)
        return 0;
    for (var i = 100 / t.length * .01, r = 0, n = 0, o = t.length; o > n; n++)
        t[n] == e[n] && n < e.length && (r += i);
    return r
}
,
relax.date.getWeek = function(t) {
    t = "int" == typeof t ? t : 1;
    var e = new Date(this.getFullYear(),0,1)
      , i = e.getDay() - t;
    i = i >= 0 ? i : i + 7;
    var r, n = Math.floor((this.getTime() - e.getTime() - 6e4 * (this.getTimezoneOffset() - e.getTimezoneOffset())) / 864e5) + 1;
    return 4 > i ? (r = Math.floor((n + i - 1) / 7) + 1,
    r > 52 && (nYear = new Date(this.getFullYear() + 1,0,1),
    nday = nYear.getDay() - t,
    nday = nday >= 0 ? nday : nday + 7,
    r = nday < 4 ? 1 : 53)) : r = Math.floor((n + i - 1) / 7),
    r
}
,
HTMLElement.prototype.index || (HTMLElement.prototype.index = function() {
    for (var t = this, e = t.parentNode, i = 0; t.previousElementSibling; )
        i++,
        t = t.previousElementSibling;
    return this === e.children[i] ? i : -1
}
),
relax || (relax = {}),
relax.browser || (relax.browser = {}),
relax.browser.isIOS = function() {
    return navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i) ? !0 : !1
}
,
relax.browser.isMacintosh = function() {
    return navigator.platform.indexOf("Mac") > -1
}
,
relax.browser.isWindows = function() {
    return navigator.platform.indexOf("Win") > -1
}
,
relax.browser.getIOSVersion = function() {
    if (!relax.browser.isIOS())
        return -1;
    var t = navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)
      , e = [parseInt(t[1], 10), parseInt(t[2], 10), parseInt(t[3] || 0, 10)];
    return parseFloat(e.join("."))
}
,
relax.browser.isTouch = function() {
    try {
        return document.createEvent("TouchEvent"),
        !0
    } catch (t) {
        return !1
    }
}
,
relax.browser.isAndroid = function() {
    return navigator.userAgent.match(/Android/i)
}
,
relax.browser.isWindowsPhone = function() {
    return navigator.userAgent.match(/Windows Phone/i) || navigator.userAgent.match(/IEMobile/i) ? !0 : !1
}
,
relax.browser.isTablet = function() {
    var t = relax.browser.isAndroid() && !navigator.userAgent.match(/Mobile/i) && !navigator.userAgent.match(/mobile/i);
    return navigator.userAgent.match(/iPad/i) || t ? !0 : !1
}
,
relax.browser.isMobile = function() {
    var t = !relax.browser.isTablet() && (navigator.userAgent.match(/Mobile/i) || navigator.userAgent.match(/mobile/i))
      , e = !relax.browser.isTablet() && relax.browser.isIOS()
      , i = relax.browser.isWindowsPhone();
    return t || e || i ? !0 : !1
}
,
relax.browser.isWebKit = function() {
    return "WebkitAppearance" in document.documentElement.style
}
,
relax.browser.getInternetExplorerVersion = function() {
    var t = -1;
    if ("Microsoft Internet Explorer" == navigator.appName) {
        var e = navigator.userAgent
          , i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");
        null  != i.exec(e) && (t = parseFloat(RegExp.$1))
    } else if ("Netscape" == navigator.appName) {
        var e = navigator.userAgent
          , i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})");
        null  != i.exec(e) && (t = parseFloat(RegExp.$1))
    }
    return t
}
,
relax || (relax = {}),
relax.caniuse || (relax.caniuse = {}),
relax.caniuse.pushstate = function() {
    return !(!window.history || !history.pushState)
}
,
relax.caniuse.canvas = function() {
    if (void 0 == this._canvasSupported || null  == this._canvasSupported) {
        var t = document.createElement("canvas");
        this._canvasSupported = !(!t.getContext || !t.getContext("2d"))
    }
    return this._canvasSupported
}
,
relax.caniuse.localstorage = function() {
    try {
        return localStorage.setItem("rwatgg_hello_storage", "mod"),
        localStorage.removeItem("rwatgg_hello_storage"),
        !0
    } catch (t) {
        return !1
    }
}
,
relax.caniuse.cssBlendmodes = function() {
    try {
        if ("CSS" in window && "supports" in window.CSS) {
            var t = window.CSS.supports("mix-blend-mode", "soft-light");
            return t
        }
    } catch (e) {
        return !1
    }
    return !1
}
,
relax.caniuse.mp4 = function() {
    return "boolean" == typeof this._mp4Supported ? this._mp4Supported : (this._mp4Supported = !!document.createElement("video").canPlayType("video/mp4; codecs=avc1.42E01E,mp4a.40.2"),
    this._mp4Supported)
}
,
relax.caniuse.cssgradients = function() {
    if ("boolean" == typeof this.cssGradientSupported)
        return this.cssGradientSupported;
    var t = "background-image:"
      , e = "gradient(linear,left top,right bottom,from(#9f9),to(white));"
      , i = "linear-gradient(left top,#9f9, white);"
      , r = " -webkit- -moz- -o- -ms- ".split(" ")
      , n = (t + "-webkit- ".split(" ").join(e + t) + r.join(i + t)).slice(0, -t.length)
      , o = document.createElement("div")
      , a = o.style;
    return a.cssText = n,
    this.cssGradientSupported = ("" + a.backgroundImage).indexOf("gradient") > -1,
    this.cssGradientSupported
}
,
relax.caniuse.WebGL = function() {
    if ("boolean" == typeof this._webglSupported)
        return this._webglSupported;
    var t = document.createElement("canvas");
    return this._webglSupported = !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl")),
    this._webglSupported
}
,
relax || (relax = {}),
relax.color || (relax.color = {}),
relax.color.rgb2hex = function(t, e, i, r, n) {
    function o(t) {
        var e = t.toString(16);
        return 1 == e.length ? "0" + e : e
    }
    return r || (r = 255),
    n ? r << 24 | t << 16 | e << 8 | i : (1 >= r && (r = Math.round(255 * r)),
    "#" + o(t) + o(e) + o(i))
}
,
relax.color.hex2rgb = function(t) {
    var e = {};
    return e.red = t >> 16 & 255,
    e.green = t >> 8 & 255,
    e.blue = 255 & t,
    e
}
,
relax.color.hex2css = function(t) {
    return "#" + t.toString(16)
}
,
relax.color.getBetweenColourByPercent = function(t, e, i) {
    var r = e >> 16
      , n = e >> 8 & 255
      , o = 255 & e;
    r += ((i >> 16) - r) * t,
    n += ((i >> 8 & 255) - n) * t,
    o += ((255 & i) - o) * t;
    var a = r << 16 | n << 8 | o;
    return relax.color.hex2css(a)
}
,
relax.color.similar = function(t, e, i) {
    i || (i = .01);
    var r = relax.color.hex2rgb(t)
      , n = relax.color.hex2rgb(e);
    i = 195075 * i << 0;
    var o = 0;
    return o += Math.pow(r.red - n.red, 2),
    o += Math.pow(r.green - n.green, 2),
    o += Math.pow(r.blue - n.blue, 2),
    i >= o
}
,
relax.color.different = function(t, e, i) {
    i || (i = .01);
    for (var r = 0; r < e.length; r++)
        if (relax.color.similar(t, e[r], i))
            return !1;
    return !0
}
,
relax.color.uniqueColours = function(t, e, i) {
    i || (i = .01);
    for (var r = [], n = 0; n < t.length && r.length < e; n++)
        relax.color.different(t[n], r, i) && r.push(t[n]);
    return r
}
,
relax.color.indexColours = function(t, e) {
    function i(t, e) {
        return t.count > e.count ? 1 : t.count < e.count ? -1 : 0
    }
    e || (e = !0);
    for (var r, n = t.getContext("2d"), o = n.getImageData(0, 0, t.width, t.height), a = o.data, s = {}, l = [], h = 0, s = a.length; s > h; h += 4)
        r = relax.color.rgb2hex(a[h], a[h + 1], a[h + 2]),
        l.push({
            colour: r,
            count: l.length
        });
    return e ? l.sort(i) : l
}
,
relax.color.averageColour = function(t) {
    for (var e = 0, i = 0, r = 0, n = 0, o = t.getContext("2d"), a = o.getImageData(0, 0, t.width, t.height), s = a.data, l = 0, h = s.length; h > l; l += 4)
        e += s[l],
        i += s[l + 1],
        r += s[l + 2],
        n++;
    return e = ~~(e / n),
    i = ~~(i / n),
    r = ~~(r / n),
    relax.color.rgb2hex(e, i, r, 1, !1)
}
,
relax.color.averageColours = function(t, e) {
    for (var i, r, n, o = new Array, a = Math.round(Math.sqrt(e)), s = t.getContext("2d"), l = 0, h = 0, c = 0, u = 0, p = Math.round(t.width / a), d = Math.round(t.height / a), f = 0; e > f; f++)
        i = document.createElement("canvas"),
        r = i.getContext("2d"),
        n = s.getImageData(c, u, p, d),
        r.putImageData(n, 10, 70),
        o.push(relax.color.averageColour(i)),
        h = f % a,
        c = p * h,
        u = d * l,
        h == a - 1 && l++;
    return o
}
,
relax.color.shadeColor = function(t, e) {
    var i = parseInt(t.slice(1), 16)
      , r = 0 > e ? 0 : 255
      , n = 0 > e ? -1 * e : e
      , o = i >> 16
      , a = i >> 8 & 255
      , s = 255 & i;
    return "#" + (16777216 + 65536 * (Math.round((r - o) * n) + o) + 256 * (Math.round((r - a) * n) + a) + (Math.round((r - s) * n) + s)).toString(16).slice(1)
}
,
relax.color.blendColors = function(t, e, i) {
    var r = parseInt(t.slice(1), 16)
      , n = parseInt(e.slice(1), 16)
      , o = r >> 16
      , a = r >> 8 & 255
      , s = 255 & r
      , l = n >> 16
      , h = n >> 8 & 255
      , c = 255 & n;
    return "#" + (16777216 + 65536 * (Math.round((l - o) * i) + o) + 256 * (Math.round((h - a) * i) + a) + (Math.round((c - s) * i) + s)).toString(16).slice(1)
}
,
relax || (relax = {}),
relax.displayObject || (relax.displayObject = {}),
relax.displayObject.statsWrapper = {
    stats: null ,
    init: function() {
        this.stats = new Stats,
        this.stats.getDomElement().style.position = "fixed",
        this.stats.getDomElement().style.left = "0px",
        this.stats.getDomElement().style.top = "0px",
        document.body.appendChild(this.stats.getDomElement()),
        RenderQue.add(this)
    },
    renderQueCall: function() {
        this.stats.update()
    }
},
relax.displayObject.Image = Class.extend({
    _callbacks: null ,
    progress: 0,
    _convertToBase64: !1,
    _allowProgress: !1,
    src: null ,
    data: null ,
    loading: !1,
    loaded: !1,
    naturalWidth: 0,
    naturalHeight: 0,
    init: function(t) {
        t && t.src && (this.src = t.src),
        t && t.convertToBase64 === !0 && (this._convertToBase64 = !0),
        t && t.progress === !0 && (this._allowProgress = !0)
    },
    load: function(t, e, i) {
        if (this.progress = 0,
        this.loading = !0,
        "string" == typeof t)
            this.src = t,
            this._allowProgress = i === !0 ? !1 : !0;
        else {
            var e = t.callback;
            t.src && (this.src = t.src)
        }
        this.addCallback(e);
        var r = relax.browser.getInternetExplorerVersion() > 0 && relax.browser.getInternetExplorerVersion() < 10;
        !this._allowProgress || r ? (this.data = new Image,
        this.data.onload = relax.dom.bind(this, this.onImageLoaded),
        this.data.src = this.src) : (this.request = new XMLHttpRequest,
        this.request.onprogress = relax.dom.bind(this, this.onLoadProgress),
        this.request.onload = relax.dom.bind(this, this.onRequestLoaded),
        this.request.open("GET", this.src, !0),
        this.request.overrideMimeType("text/plain; charset=x-user-defined"),
        this.request.send(null ))
    },
    addCallback: function(t) {
        this._callbacks || (this._callbacks = []),
        -1 == this._callbacks.indexOf(t) && this._callbacks.push(t)
    },
    onRequestLoaded: function() {
        this.progress = 1,
        -1 === this.src.indexOf(".gif") && this._convertToBase64 && this._allowProgress ? (this.data = new Image,
        this.data.onload = relax.dom.bind(this, this.onImageLoaded),
        this.data.src = "data:image/jpeg;base64," + this.base64Encode(this.request.responseText)) : this.data ? this.onImageLoaded() : (this.data = new Image,
        this.data.onload = relax.dom.bind(this, this.onImageLoaded),
        this.data.src = this.src)
    },
    onLoadProgress: function(t) {
        t.lengthComputable && !this.loaded && (this.progress = t.loaded / t.total)
    },
    stop: function() {
        this.loading = !1,
        this.data && !this.loaded && (this.data.src = ""),
        this.request && (this.request.onprogress = null ,
        this.request.onload = null ,
        this.request.abort())
    },
    getProgress: function() {
        return this._progress
    },
    dealoc: function() {
        this.stop(),
        this.data && (this.data.onload = void 0,
        this.data = null ),
        this._callbacks = null ,
        this.request = null 
    },
    onImageLoaded: function() {
        this.loading = !1,
        this.progress = 1,
        this.naturalWidth = this.data.naturalWidth,
        this.naturalHeight = this.data.naturalHeight,
        this.loaded = !0;
        for (var t = 0; t < this._callbacks.length; t++)
            this._callbacks[t](this)
    },
    base64Encode: function(t) {
        for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i = "", r = 0; r < t.length; ) {
            var n, o, a = 255 & t.charCodeAt(r++), s = 255 & t.charCodeAt(r++), l = 255 & t.charCodeAt(r++), h = a >> 2, c = (3 & a) << 4 | s >> 4;
            isNaN(s) ? n = o = 64 : (n = (15 & s) << 2 | l >> 6,
            o = isNaN(l) ? 64 : 63 & l),
            i += e.charAt(h) + e.charAt(c) + e.charAt(n) + e.charAt(o)
        }
        return i
    }
}),
relax || (relax = {}),
relax.layout || (relax.layout = {}),
relax.layout.DeviceOrientChange = function(t) {
    function e() {
        i = 90 === Math.abs(window.orientation) ? "landscape" : "portrait",
        t(i, window.orientation)
    }
    var i = 90 === Math.abs(window.orientation) ? "landscape" : "portrait";
    t(i, window.orientation),
    window.onorientationchange = e
}
,
relax.layout.scaleToRect = function(t, e) {
    jQuery ? $(e).css({
        width: t.w,
        height: t.h,
        "margin-left": t.overflowx,
        "margin-top": t.overflowy
    }) : (e.style.width = t.w,
    e.style.height = t.h,
    e.style.marginLeft = t.overflowx,
    e.style.marginTop = t.overflowy)
}
,
relax.layout.getScaleRect = function(t, e, i, r, n, o) {
    var a = i
      , s = a / t * e;
    (r > s && !o || "width" === o) && (s = r,
    a = s / e * t);
    var l = .5 * i - .5 * a
      , h = "height" === o ? 0 : .5 * r - .5 * s;
    return n || (n = function(t) {
        return t
    }
    ),
    {
        w: n(a),
        h: n(s),
        overflowx: n(l),
        overflowy: n(h)
    }
}
,
"classList" in document.documentElement || !Object.defineProperty || "undefined" == typeof HTMLElement || Object.defineProperty(HTMLElement.prototype, "classList", {
    get: function() {
        function t(t) {
            return function(i) {
                var r = e.className.split(/\s+/)
                  , n = r.indexOf(i);
                t(r, n, i),
                e.className = r.join(" ")
            }
        }
        var e = this
          , i = {
            add: t(function(t, e, i) {
                ~e || t.push(i)
            }
            ),
            remove: t(function(t, e) {
                ~e && t.splice(e, 1)
            }
            ),
            toggle: t(function(t, e, i) {
                ~e ? t.splice(e, 1) : t.push(i)
            }
            ),
            contains: function(t) {
                return !!~e.className.split(/\s+/).indexOf(t)
            },
            item: function(t) {
                return e.className.split(/\s+/)[t] || null 
            }
        };
        return Object.defineProperty(i, "length", {
            get: function() {
                return e.className.split(/\s+/).length
            }
        }),
        i
    }
}),
Object.keys || (Object.keys = function() {
    "use strict";
    var t = Object.prototype.hasOwnProperty
      , e = !{
        toString: null 
    }.propertyIsEnumerable("toString")
      , i = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
      , r = i.length;
    return function(n) {
        if ("object" != typeof n && ("function" != typeof n || null  === n))
            throw new TypeError("Object.keys called on non-object");
        var o, a, s = [];
        for (o in n)
            t.call(n, o) && s.push(o);
        if (e)
            for (a = 0; r > a; a++)
                t.call(n, i[a]) && s.push(i[a]);
        return s
    }
}
()),
Array.prototype.indexOf || (Array.prototype.indexOf = function(t) {
    var e = this.length >>> 0
      , i = Number(arguments[1]) || 0;
    for (i = 0 > i ? Math.ceil(i) : Math.floor(i),
    0 > i && (i += e); e > i; i++)
        if (i in this && this[i] === t)
            return i;
    return -1
}
),
relax || (relax = {}),
relax.math || (relax.math = {}),
relax.math.norm = function(t, e, i) {
    return (t - e) / (i - e)
}
,
relax.math.lerp = function(t, e, i) {
    return (i - e) * t + e
}
,
relax.math.map = function(t, e, i, r, n) {
    return relax.math.lerp(relax.math.norm(t, e, i), r, n)
}
,
relax.math.clamp = function(t, e, i) {
    return Math.min(Math.max(t, e), i)
}
,
relax.math.convertToRange = function(t, e, i) {
    if (t < e[0])
        return i[0];
    if (t > e[1])
        return i[1];
    var r = e[1] - e[0]
      , n = i[1] - i[0]
      , o = t - e[0];
    return o * n / r + i[0]
}
;
var relax;
relax || (relax = {}),
relax.draw || (relax.draw = {}),
relax.draw.imageIntoCanvas = function(t, e) {
    var i, r, n;
    if (null  == e && (e = !0),
    !t || void 0 === t.ctx || void 0 === t.image || void 0 === t.imageWidth || void 0 === t.imageHeight || void 0 === t.viewportWidth || void 0 === t.viewportHeight)
        throw new Error("imageIntoCanvas Error: all options are mandatory.");
    return "undefined" == typeof t.offsetX && (t.offsetX = 0),
    "undefined" == typeof t.offsetY && (t.offsetY = 0),
    i = t.viewportWidth / t.imageWidth,
    t.imageHeight * i < t.viewportHeight && (i = t.viewportHeight / t.imageHeight),
    r = .5 * t.viewportWidth - t.imageWidth * i * .5,
    n = .5 * t.viewportHeight - t.imageHeight * i * .5,
    r += t.offsetX,
    n += t.offsetY,
    e && t.ctx.save(),
    t.ctx.translate(Math.round(r), Math.round(n)),
    t.ctx.scale(i, i),
    t.ctx.drawImage(t.image, 0, 0),
    e ? t.ctx.restore() : void 0
}
;
var relax;
relax || (relax = {}),
relax.numbers || (relax.numbers = {}),
relax.numbers.splitInThousands = function(t, e) {
    return null  == e && (e = ","),
    t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, e)
}
,
relax || (relax = {}),
relax.tools || (relax.tools = {}),
relax.tools.shuffle = function(t) {
    for (var e, i, r = t.length; 0 !== r; )
        i = Math.floor(Math.random() * r),
        r -= 1,
        e = t[r],
        t[r] = t[i],
        t[i] = e;
    return t
}
,
relax.tools.cookie = {
    get: function(t) {
        var e, i, r, n = document.cookie.split(";");
        for (e = 0; e < n.length; e++)
            if (i = n[e].substr(0, n[e].indexOf("=")),
            r = n[e].substr(n[e].indexOf("=") + 1),
            i = i.replace(/^\s+|\s+$/g, ""),
            i == t)
                return unescape(r)
    },
    set: function(t, e, i) {
        var r = new Date;
        r.setDate(r.getDate() + i);
        var n = escape(e) + (null  === i ? "" : "; expires=" + r.toUTCString());
        document.cookie = t + "=" + n
    },
    clear: function(t) {
        document.cookie = t + "=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
    },
    check: function(t, e) {
        var i = this.get(t);
        return i && "" !== i && void 0 !== i && null  !== i && "undefined" !== i ? !0 : !1
    }
},
relax.tools.throttle = function(t, e, i) {
    var r = null ;
    return i || (i = this),
    function() {
        var n = arguments;
        clearTimeout(r),
        r = setTimeout(function() {
            i && t.apply(i, n)
        }
        , e)
    }
}
,
relax.transitionEndString = "transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",
relax.tools.validateEmail = function(t) {
    var e = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return e.test(t)
}
,
relax.tools.validatePassword = function(t) {
    var e = /^[A-Za-z0-9!@#$%^&*()_]{1,50}$/;
    return e.test(t)
}
,
relax.tools.stripHTMLFromString = function(t) {
    var e = document.createElement("DIV");
    return e.innerHTML = t,
    e.textContent || e.innerText
}
,
relax.tools.popupwindow = function(t, e, i, r) {
    var n = screen.width / 2 - i / 2
      , o = screen.height / 2 - r / 2;
    return window.open(t, e, "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=" + i + ", height=" + r + ", top=" + o + ", left=" + n)
}
,
relax.tools.DragAndSwipe = Class.extend({
    _el: null ,
    _touchEventsAdded: !1,
    _pinchCallback: null ,
    _swipeCallback: null ,
    _dragCallback: null ,
    _swipeThreshold: 100,
    _forceDirection: "xy",
    _startY: 0,
    _dragY: 0,
    _dragYTarget: 0,
    _startX: 0,
    _dragX: 0,
    _dragXTarget: 0,
    _mouseObj: null ,
    startDragY: 0,
    startDragX: 0,
    _iid: null ,
    _maxMinBoundries: null ,
    _preventMoveDefault: !0,
    init: function(t, e) {
        null  == relax.tools.DragAndSwipe.iid && (relax.tools.DragAndSwipe.iid = 0),
        relax.tools.DragAndSwipe.iid++,
        this._iid = "relax" + relax.tools.DragAndSwipe.iid,
        e && this.setPreventModeDefault(e.preventMoveDefault),
        this._el = t
    },
    setPreventModeDefault: function(t) {
        this._preventMoveDefault = Boolean(t)
    },
    setBoundries: function(t) {
        this._maxMinBoundries = t
    },
    _onTouchStart: function(t) {
        this._mouseObj = relax.geom.getXYFromMouseTouchEvent(t),
        this._startY = this._mouseObj.y,
        this._startX = this._mouseObj.x,
        this.startDragY = this._dragYTarget,
        this.startDragX = this._dragXTarget,
        this._onDragging()
    },
    _onTouchEnd: function(t) {
        if (this._dragY = this._dragYTarget,
        this._dragX = this._dragXTarget,
        this._swipeCallback && this._mouseObj) {
            var e = this._mouseObj.x > this._startX ? "left" : "right"
              , i = this._mouseObj.y > this._startY ? "up" : "down"
              , r = Math.abs(this._mouseObj.x - this._startX) > this._swipeThreshold
              , n = Math.abs(this._mouseObj.y - this._startY) > this._swipeThreshold
              , o = !1;
            "xy" === this._forceDirection ? (r || n) && (o = !0) : "x" === this._forceDirection && r ? o = !0 : "y" === this._forceDirection && n && (o = !0),
            o && this._swipeCallback({
                xDirection: e,
                yDirection: i
            })
        }
        this._onDragging()
    },
    _onTouchMove: function(t) {
        this._preventMoveDefault && t.preventDefault(),
        this._mouseObj = relax.geom.getXYFromMouseTouchEvent(t);
        var e = this._mouseObj.y - this._startY
          , i = this._mouseObj.x - this._startX
          , r = this._dragX + i
          , n = this._dragY + e
          , o = r < this._dragXTarget ? "left" : "right"
          , a = n < this._dragYTarget ? "up" : "down";
        this._dragXTarget = r,
        this._dragYTarget = n,
        this._onDragging(o, a)
    },
    _onDragging: function(t, e) {
        this._maxMinBoundries && (this._maxMinBoundries.minSwipeX && (this._dragXTarget = Math.max(this._maxMinBoundries.minSwipeX, this._dragXTarget),
        this._dragX = Math.max(this._maxMinBoundries.minSwipeX, this._dragX)),
        this._maxMinBoundries.minSwipeY && (this._dragYTarget = Math.max(this._maxMinBoundries.minSwipeY, this._dragYTarget),
        this._dragY = Math.max(this._maxMinBoundries.minSwipeY, this._dragY)),
        this._maxMinBoundries.maxSwipeX && (this._dragXTarget = Math.min(this._maxMinBoundries.maxSwipeX, this._dragXTarget),
        this._dragX = Math.min(this._maxMinBoundries.maxSwipeX, this._dragX)),
        this._maxMinBoundries.maxSwipeY && (this._dragYTarget = Math.min(this._maxMinBoundries.maxSwipeY, this._dragYTarget),
        this._dragY = Math.min(this._maxMinBoundries.maxSwipeY, this._dragY))),
        this._dragCallback && this._dragCallback({
            xDirection: t,
            yDirection: e,
            x: this._dragXTarget,
            y: this._dragYTarget
        })
    },
    addEvents: function() {
        this._touchEventsAdded || (this._touchEventsAdded = !0,
        $(this._el).bind("touchstart." + this._iid, relax.dom.bind(this, this._onTouchStart)),
        $(this._el).bind("touchmove." + this._iid, relax.dom.bind(this, this._onTouchMove)),
        $(this._el).bind("touchend." + this._iid, relax.dom.bind(this, this._onTouchEnd)))
    },
    removeEvents: function() {
        this._touchEventsAdded = !1,
        $(this._el).unbind("touchstart." + this._iid + " touchmove." + this._iid + " touchend." + this._iid)
    },
    addSwipe: function(t, e, i) {
        i && (this._forceDirection = i),
        e && (this._swipeThreshold = e),
        this._swipeCallback = t,
        this.addEvents()
    },
    addDrag: function(t) {
        this._dragCallback = t,
        this.addEvents()
    },
    dealoc: function() {
        this._binded = !1,
        this.removeEvents(),
        this._el = null ,
        this._callback = null 
    }
}),
relax.tools.PinchGestureWrapper = Class.extend({
    _el: null ,
    _callback: null ,
    _startScale: 0,
    _currentScale: 0,
    init: function(t, e) {
        this._el = t,
        this._callback = e,
        this._startScale = 0,
        this._currentScale = 0,
        this._onGestureStart = function(t) {
            t.preventDefault(),
            this._startScale = t.originalEvent.scale
        }
        ,
        this._onGestureEnd = function(t) {
            t.preventDefault(),
            this._callback(this._startScale > this._currentScale)
        }
        ,
        this._onGestureChange = function(t) {
            t.preventDefault(),
            this._currentScale = t.originalEvent.scale,
            this._callback(this._currentScale)
        }
        ,
        $(this._el).bind("gesturestart.pinch", relax.dom.bind(this, this._onGestureStart)),
        $(this._el).bind("gesturechange.pinch", relax.dom.bind(this, this._onGestureChange)),
        $(this._el).bind("gestureend.pinch", relax.dom.bind(this, this._onGestureEnd))
    },
    dealoc: function() {
        $(this._el).unbind("gesturestart.pinch gesturechange.pinch gestureend.pinch"),
        this._el = null ,
        this._callback = null 
    }
}),
relax.tools.renderQue = {
    items: [],
    running: !1,
    rAF: null ,
    render: function() {
        if (!this.items || 0 === this.items.length || !this.running)
            return this.running = !1,
            void cancelAnimationFrame(this.rAF);
        for (var t = 0; t < this.items.length; t++)
            this.items[t].renderQueCall();
        this.running && (this.rAF = window.requestAnimationFrame(relax.dom.bind(this, this.render)))
    },
    has: function(t) {
        return -1 != this.items.indexOf(t)
    },
    add: function(t) {
        if (t && this.items) {
            if (void 0 === t.renderQueCall)
                throw new Error("RenderQue requires objects to have a renderQueCall method for callback.");
            -1 === this.items.indexOf(t) && this.items.push(t)
        }
        this.running || (this.running = !0,
        this.rAF = window.requestAnimationFrame(relax.dom.bind(this, this.render)))
    },
    remove: function(t) {
        this.items && t && -1 !== this.items.indexOf(t) && this.items.splice(this.items.indexOf(t), 1),
        0 === this.items.length && (this.running = !1)
    }
},
relax.tools.clone = function(t) {
    function e(t, e, i) {
        var r, n, o = {};
        for (r in e)
            n = e[r],
            r in t && (t[r] === n || r in o && o[r] === n) || (t[r] = i ? i(n) : n);
        return t
    }
    if (!t || "object" != typeof t || "[object Function]" === Object.prototype.toString.call(t))
        return t;
    if (t.nodeType && "cloneNode" in t)
        return t.cloneNode(!0);
    if (t instanceof Date)
        return new Date(t.getTime());
    if (t instanceof RegExp)
        return new RegExp(t);
    var i, r, n;
    if (t instanceof Array)
        for (i = [],
        r = 0,
        n = t.length; n > r; ++r)
            r in t && i.push(clone(t[r]));
    else
        i = t.constructor ? new t.constructor : {};
    return e(i, t, clone)
}
,
relax || (relax = {}),
relax.screen || (relax.screen = {}),
relax.screen.isRetina = function() {
    return window.devicePixelRatio > 1
}
;
var EventDispatcher;
relax.EventDispatcher = EventDispatcher = function() {
    function t() {
        this.eventChannel = {},
        _.extend(this.eventChannel, Backbone.Events)
    }
    return t.prototype.eventChannel = null ,
    t.prototype.trigger = function(t, e) {
        return null  == e && (e = null ),
        null  !== e ? this.eventChannel.trigger(t, e) : this.eventChannel.trigger(t)
    }
    ,
    t.prototype.bind = function(t, e, i, r) {
        if (null  == r && (r = !1),
        !t || !e || !i)
            throw new Error("All parameters are mandatory");
        return this.eventChannel.on(t, e, i),
        r ? setTimeout(function(t) {
            return function() {
                return e.apply(i, [t])
            }
        }
        (this), 0) : void 0
    }
    ,
    t.prototype.unbindAll = function(t) {
        if (!t)
            throw new Error("All parameters are mandatory");
        return this.eventChannel.off(null , null , t)
    }
    ,
    t.prototype.unbind = function(t, e, i) {
        if (!t || !e || !i)
            throw new Error("All parameters are mandatory");
        return this.eventChannel.off(t, e, i)
    }
    ,
    t.prototype.dealoc = function() {
        return this.eventChannel.unbind(),
        this.eventChannel = null 
    }
    ,
    t
}
();
var BasicRelaxService, __hasProp = {}.hasOwnProperty, __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
try {
    relax.BasicRelaxService = BasicRelaxService = function(t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }
        return __extends(e, t),
        e.prototype.initialize = function(t) {
            return this.url = "//services.rwatgg.dk/" + t.client + "/" + t.service + "/"
        }
        ,
        e.prototype.fetch = function(t) {
            return null  == t && (t = new Object),
            t.success || (t.success = relax.dom.bind(this, this.onSuccess),
            t.error = relax.dom.bind(this, this.onError)),
            e.__super__.fetch.call(this, t)
        }
        ,
        e.prototype.onSuccess = function(t, e) {
            return console ? console.log("%c RWATGG > UserLocation Success", "background: green; color: white;") : void 0
        }
        ,
        e.prototype.onError = function(t, e) {
            var i;
            try {
                rwatgs.error.bot.report("BasicRelaxService error:", e.status)
            } catch (r) {
                i = r
            }
            return console && console.log("%c RWATGG > UserLocation Error: status:", "background: red; color: white;", e.status),
            console ? console.log("%c RWATGG > UserLocation Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }
        ,
        e
    }
    (Backbone.Model)
} catch (_error) {}
var UserLocation, __hasProp = {}.hasOwnProperty, __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
try {
    relax.UserLocation = UserLocation = function(t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }
        return __extends(e, t),
        e.prototype.initialize = function(t) {
            return this.url = "//services.rwatgg.dk/" + t.client + "/location/"
        }
        ,
        e.prototype.fetch = function(t) {
            var i, r, n;
            return null  == t && (t = new Object),
            i = !0,
            relax.caniuse.localstorage() && localStorage.getItem("rwatgg_location") && (r = JSON.parse(localStorage.getItem("rwatgg_location")),
            n = r.timestamp - (new Date).getTime(),
            n > 0 && new Date(n).getHours() > 1 && (i = !1,
            this.set(r))),
            i ? (t.success || (t.success = relax.dom.bind(this, this.onSuccess),
            t.error = relax.dom.bind(this, this.onError)),
            e.__super__.fetch.call(this, t)) : void 0
        }
        ,
        e.prototype.onSuccess = function(t, e) {
            return relax.caniuse.localstorage() && (this.set("timestamp", (new Date).getTime(), {
                silent: !0
            }),
            localStorage.setItem("rwatgg_location", JSON.stringify(this.toJSON()))),
            console ? console.log("%c RWATGG > UserLocation Success", "background: green; color: white;") : void 0
        }
        ,
        e.prototype.onError = function(t, e) {
            var i;
            try {
                rwatgs.error.bot.report("services error:", e.status)
            } catch (r) {
                i = r
            }
            return console && console.log("%c RWATGG > UserLocation Error: status:", "background: red; color: white;", e.status),
            console ? console.log("%c RWATGG > UserLocation Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }
        ,
        e
    }
    (Backbone.Model)
} catch (_error) {}
var SocialFeed, __hasProp = {}.hasOwnProperty, __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
try {
    relax.SocialFeed = SocialFeed = function(t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }
        return __extends(e, t),
        e.prototype.initialize = function(t) {
            var e;
            if (!t.client)
                throw new Error("client needs to be defined.");
            if (!t.feed)
                throw new Error("feed needs to be defined.");
            return e = t.useProxy ? "/handlers/proxy.ashx?url=" : "//",
            this.url = e + "services.rwatgg.dk/" + t.client + "/" + t.feed + "/"
        }
        ,
        e.prototype.fetch = function(t) {
            return null  == t && (t = new Object),
            t.success || (t.success = relax.dom.bind(this, this.onSuccess),
            t.error = relax.dom.bind(this, this.onError)),
            e.__super__.fetch.call(this, t)
        }
        ,
        e.prototype.parse = function(t) {
            return {
                data: t
            }
        }
        ,
        e.prototype.onSuccess = function(t, e) {
            return console ? console.log("%c RWATGG > " + this.get("feed") + " Success", "background: green; color: white;") : void 0
        }
        ,
        e.prototype.onError = function(t, e) {
            var i;
            try {
                rwatgs.error.bot.report("services error:", this.url)
            } catch (r) {
                i = r
            }
            return console && console.log("%c RWATGG > " + this.get("feed") + " Error: status:", "background: red; color: white;", e.status),
            console ? console.log("%c RWATGG > " + this.get("feed") + " Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }
        ,
        e
    }
    (Backbone.Model)
} catch (_error) {}
var __hasProp = {}.hasOwnProperty
  , __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
relax.Counter = function(t) {
    function e(t) {
        e.__super__.constructor.call(this),
        t.startStep && (this._currentStep = t.startStep),
        t.direction && (this._direction = t.direction),
        t.maxSteps && (this._maxSteps = t.maxSteps),
        this._time = t.time ? t.time : relax.Counter.DEFAULT_TIME,
        this._step = t.step ? t.step : relax.Counter.DEFAULT_STEP,
        t.doLoop && (this._loop = !0),
        t.stopOnEnd === !0 && (this._stopOnEnd = !0),
        t.autoStart && this.resume()
    }
    return __extends(e, t),
    e.ON_STEP_EVENT = "counter-step",
    e.ON_STEP_STOP_EVENT = "counter-stop",
    e.ON_STEP_START_EVENT = "counter-start",
    e.DEFAULT_TIME = 4e3,
    e.DEFAULT_STEP = 1,
    e.prototype._time = 0,
    e.prototype._step = 0,
    e.prototype._loop = !1,
    e.prototype._timeout = 0,
    e.prototype._stopOnEnd = !1,
    e.prototype._maxSteps = -1,
    e.prototype._isRunning = !1,
    e.prototype._direction = 1,
    e.prototype._currentStep = 0,
    e.prototype.resume = function() {
        return this.trigger(relax.Counter.ON_STEP_START_EVENT, this._currentStep),
        this.start()
    }
    ,
    e.prototype.start = function() {
        return this._isRunning = !0,
        clearTimeout(this._timeout),
        this._timeout = setTimeout(function(t) {
            return function() {
                return t.onStep()
            }
        }
        (this), this._time)
    }
    ,
    e.prototype.pause = function() {
        return this._isRunning = !1,
        clearTimeout(this._timeout),
        this.trigger(relax.Counter.ON_STEP_STOP_EVENT, this._currentStep)
    }
    ,
    e.prototype.isRunning = function() {
        return this._isRunning
    }
    ,
    e.prototype.setStep = function(t) {
        return this._currentStep = t,
        this.validateStep()
    }
    ,
    e.prototype.changeDirecion = function(t) {
        return null  == t && (t = null ),
        null  !== t ? this._direction = t : this._direction *= -1
    }
    ,
    e.prototype.resetTimer = function() {
        return this.start()
    }
    ,
    e.prototype.dealoc = function() {
        return this._isRunning = !1,
        clearTimeout(this._timeout),
        e.__super__.dealoc.call(this)
    }
    ,
    e.prototype.onStep = function() {
        return this._currentStep += this._step * this._direction,
        this.validateStep()
    }
    ,
    e.prototype.validateStep = function() {
        var t;
        return t = !1,
        this._stopOnEnd && this._currentStep >= this._maxSteps - 1 ? (t = !0,
        this._currentStep = this._maxSteps - 1) : this._loop && -1 !== this._maxSteps ? this._currentStep %= this._maxSteps : !this._loop && -1 !== this._maxSteps && (this._currentStep <= 0 || this._currentStep >= this._maxSteps - 1) && (this._direction *= -1),
        this._currentStep < 0 ? this._currentStep = 0 : this._currentStep > this._maxSteps - 1 && -1 !== this._maxSteps && (this._currentStep = this._maxSteps),
        this.trigger(relax.Counter.ON_STEP_EVENT, this._currentStep),
        t ? void 0 : this.start()
    }
    ,
    e
}
(relax.EventDispatcher);
var GATracking;
relax.GATracking = GATracking = function() {
    function t() {}
    return t.prototype.page = function(t) {
        var e;
        log("tracking page:", t);
        try {
            return "undefined" != typeof _gaq ? _gaq.push(["_trackPageview", t]) : ga("send", "pageview", t)
        } catch (i) {
            return e = i,
            log("tracking error:", e)
        }
    }
    ,
    t.prototype.event = function(t, e, i, r) {
        var n;
        log("tracking event:", t, e, i, r);
        try {
            if (i && r)
                return "undefined" != typeof _gaq ? _gaq.push(["_trackEvent", t, e, i, r]) : ga("send", "event", t, e, i, r);
            if (i)
                return "undefined" != typeof _gaq ? _gaq.push(["_trackEvent", t, e, i]) : ga("send", "event", t, e, i)
        } catch (o) {
            return n = o,
            log("tracking error:", n)
        }
    }
    ,
    t
}
();
var SocialSharer;
relax.SocialSharer = SocialSharer = function() {
    function t() {}
    return t.prototype._facebookIsInitialized = !1,
    t.prototype.loadFacebook = function(t) {
        var e, i, r, n;
        if (!t.appId)
            throw new Error("Add facebook app id");
        return n = function(e) {
            return function() {
                return e._facebookIsInitialized = !0,
                FB.init({
                    appId: t.appId,
                    status: !0,
                    cookie: !0,
                    xfbml: !0,
                    version: "v2.1"
                })
            }
        }
        (this),
        window.FB ? n() : (i = void 0,
        e = "facebook-jssdk",
        r = document.getElementsByTagName("script")[0],
        document.getElementById(e) ? void 0 : (i = document.createElement("script"),
        i.id = e,
        i.async = !0,
        i.src = "//connect.facebook.net/en_US/sdk.js",
        $("body").append(i),
        window.fbAsyncInit = n))
    }
    ,
    t.prototype.shareFacebook = function(t) {
        var e, i, r, n, o, a, s;
        o = t.name,
        n = t.description,
        r = t.caption || "",
        a = t.picture || "",
        s = t.url || "http://" + window.location.host;
        try {
            return i = {
                method: "stream.publish",
                name: o,
                link: s,
                caption: r,
                description: n,
                picture: a
            },
            FB.ui(i, function(e) {
                if (e && e.post_id) {
                    if (t.callback && t.callback(e),
                    console && console.log)
                        return console.log("Post was published.")
                } else if (t.callback && t.callback(e),
                console && console.log)
                    return console.log("Post was NOT published.")
            }
            )
        } catch (l) {
            return e = l,
            this.shareFacebookBasic(t)
        }
    }
    ,
    t.prototype.shareFacebookBasic = function(t) {
        return window.open("http://www.facebook.com/sharer.php?u=" + t.url)
    }
    ,
    t.prototype.shareEmail = function(t) {
        return document.location.href = "mailto:?subject=" + t.subject + "&body=" + t.body
    }
    ,
    t.prototype.shareTwitter = function(t) {
        var e, i, r, n, o, a, s, l, h, c;
        return l = encodeURIComponent(t.text),
        c = t.width || 700,
        s = t.height || 400,
        h = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host),
        e = "https://twitter.com/intent/tweet?url=" + h + "&text=" + l,
        o = c,
        a = s,
        r = screen.availWidth / 2 - o,
        n = screen.availHeight / 2 - a,
        i = "width={width},height={height},toolbar=0,menubar=0,location=0,status=0,scrollbars=0,resizable=0,left={left},top={top}".replace("{width}", o).replace("{height}", a).replace("{left}", r).replace("{top}", n),
        window.open(e, "twitterShareWindow", i),
        !0
    }
    ,
    t.prototype.googlePlus = function(t) {
        var e, i;
        return i = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host),
        e = "https://plus.google.com/share?url=" + i,
        window.open(e, "googlePlusShareWindow")
    }
    ,
    t.prototype.sharePinterest = function(t) {
        var e, i, r;
        if (void 0 === t.image || "" === t.image)
            throw new Error("Pinterest: image param is missing");
        return r = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host),
        i = encodeURIComponent(t.text),
        e = "http://pinterest.com/pin/create/button/?url=" + r + "&media=" + t.image + "&description=" + i,
        window.open(e, "pinterestShareWindow")
    }
    ,
    t
}
();
var ImageLoader, __hasProp = {}.hasOwnProperty, __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
window.relax.ImageLoader = ImageLoader = function(t) {
    function e(t) {
        var i, r, n, o, a, s, l, h, c, u, p, d, f, m, g, E, y, v, _, x, T, w, b, R, H, S;
        if (e.__super__.constructor.call(this),
        t.allowProgress === !0 && (this._allowProgress = t.allowProgress),
        !t.sources)
            throw new Error("ImageLoader: sources needs to be defined.");
        for (t.loadOrder && (this._loadOrder = t.loadOrder),
        this._loadCue = [],
        this._data = [],
        R = t.sources,
        f = 0,
        y = R.length; y > f; f++)
            p = R[f],
            this._data.push(new relax.displayObject.Image({
                src: p,
                progress: t.allowProgress === !0 ? !0 : !1
            }));
        if (this._loadOrder === relax.ImageLoader.ORDER_DIVIDE_AND_CONQUER) {
            for (h = [],
            H = t.sources,
            m = 0,
            v = H.length; v > m; m++)
                a = H[m],
                h.push(h.length);
            for (u = [],
            c = 0,
            u.push(h.splice(0, 1)[0]),
            u.push(h.splice(h.length - 1, 1)[0]); h.length > 0; )
                for (g = 0,
                _ = h.length; _ > g; g++) {
                    for (i = h[g],
                    c++,
                    r = 0,
                    l = c + 1,
                    n = E = 1; l > E && (r += Math.round(n % 2 === 0 ? (l - n) * (h.length / l) : n * (h.length / l)),
                    d = null ,
                    h.length > 0 && (d = h.splice(r, 1)[0]),
                    d && u.push(d),
                    0 !== h.length); n = E += 1)
                        ;
                    if (0 === h.length)
                        break
                }
            for (w = 0,
            x = u.length; x > w; w++)
                s = u[w],
                this._loadCue.push(this._data[s])
        } else
            for (S = this._data,
            b = 0,
            T = S.length; T > b; b++)
                o = S[b],
                this._loadCue.push(o);
        this.length = this._data.length,
        t.autoload && this.load(!0)
    }
    return __extends(e, t),
    e.ORDER_LINEAR = "linear",
    e.ORDER_DIVIDE_AND_CONQUER = "divide-and-conquer",
    e.IMAGE_LOADED = "image-loaded",
    e.LOADED = "loaded",
    e.LOADING = "loading",
    e.prototype._data = null ,
    e.prototype._toLoad = null ,
    e.prototype._paused = !1,
    e.prototype._loadCue = null ,
    e.prototype._loadOrder = e.ORDER_LINEAR,
    e.prototype._allowProgress = !1,
    e.prototype._leftToBeLoaded = -1,
    e.prototype._loadAllAtSameTime = !1,
    e.prototype.loaded = !1,
    e.prototype.length = 0,
    e.prototype.pause = function(t) {
        var e, i, r, n, o;
        if (null  == t && (t = !1),
        this._paused = !0,
        t) {
            for (n = this._loadCue,
            o = [],
            i = 0,
            r = n.length; r > i; i++)
                e = n[i],
                o.push(e.loaded ? void 0 : e.stop());
            return o
        }
    }
    ,
    e.prototype.resume = function() {
        return this._paused = !1,
        this.loaded ? void 0 : this.load(this._loadAllAtSameTime)
    }
    ,
    e.prototype.load = function(t) {
        var e, i, r, n, o;
        if (null  == t && (t = !1),
        !this._paused) {
            if (this._loadAllAtSameTime = t,
            !this.loaded)
                if (this._leftToBeLoaded = this._loadCue.length,
                this._loadAllAtSameTime) {
                    if (this._loadAllAtSameTime)
                        for (o = this._loadCue,
                        r = 0,
                        n = o.length; n > r; r++)
                            e = o[r],
                            e.loaded || e.load({
                                callback: relax.dom.bind(this, this.onImageLoaded)
                            })
                } else
                    i = this.getNextImageToLoad(),
                    null  != i && i.load({
                        callback: relax.dom.bind(this, this.onImageLoaded)
                    });
            return this._allowProgress && !relax.tools.renderQue.has(this) ? relax.tools.renderQue.add(this) : void 0
        }
    }
    ,
    e.prototype.renderQueCall = function() {
        var t, e, i, r, n;
        for (e = 0,
        n = this._data,
        i = 0,
        r = n.length; r > i; i++)
            t = n[i],
            e += t.progress / this._data.length;
        return e !== this._loadProgress ? (this._loadProgress = e,
        this.trigger(window.relax.ImageLoader.LOADING, this._loadProgress)) : void 0
    }
    ,
    e.prototype.getNextImageToLoad = function() {
        var t, e, i, r;
        for (r = this._loadCue,
        e = 0,
        i = r.length; i > e; e++)
            if (t = r[e],
            !t.loading)
                return t
    }
    ,
    e.prototype.onImageLoaded = function(t) {
        return this.trigger(relax.ImageLoader.IMAGE_LOADED, t),
        0 === --this._leftToBeLoaded ? (this.loaded = !0,
        relax.tools.renderQue.has(this) && relax.tools.renderQue.remove(this),
        this.trigger(relax.ImageLoader.LOADED, this)) : void 0
    }
    ,
    e.prototype.getImage = function(t, e) {
        var i, r, n, o, a, s;
        if (null  == e && (e = !1),
        this._loadOrder === relax.ImageLoader.ORDER_DIVIDE_AND_CONQUER && (e = !0),
        n = null ,
        isNaN(t)) {
            for (s = this._data,
            o = 0,
            a = s.length; a > o; o++)
                if (n = s[o],
                n.src === t) {
                    if (!n.loaded)
                        throw new Error("Trying to get image that is not loaded");
                    return n
                }
        } else if (n = this._data[t],
        !n.loaded && !e)
            throw new Error("Trying to get image that is not loaded");
        if (e && !n.loaded)
            for (i = this._data.indexOf(n) + 1,
            r = this._data.indexOf(n) - 1; !n.loaded && (r >= 0 || i < this._data.length); )
                i < this._data.length && this._data[i].loaded ? n = this._data[i] : r >= 0 && this._data[r].loaded ? n = this._data[r] : (i += 1,
                r -= 1);
        return n
    }
    ,
    e.prototype.dealoc = function() {
        var t, i, r, n;
        for (relax.tools.renderQue.has(this) && relax.tools.renderQue.remove(this),
        this._loadCue = null ,
        n = this._data,
        i = 0,
        r = n.length; r > i; i++)
            t = n[i],
            t.dealoc();
        return e.__super__.dealoc.call(this)
    }
    ,
    e
}
(relax.EventDispatcher);
var StageModel, __hasProp = {}.hasOwnProperty, __extends = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        __hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
;
relax.StageModel = StageModel = function(t) {
    function e(t) {
        var i, r, n, o;
        if (e.__super__.constructor.call(this),
        t && t.mediaqueries)
            for (this._mediaQueries = t.mediaqueries,
            this._mediaQueries.sort(function(t) {
                return function(t, e) {
                    return t.horizontalBreakPoint < e.horizontalBreakPoint ? -1 : t.horizontalBreakPoint > e.horizontalBreakPoint ? 1 : 0
                }
            }
            (this)),
            o = this._mediaQueries,
            r = 0,
            n = o.length; n > r; r++)
                if (i = o[r],
                !i.eventName)
                    throw new Error("Stagemodel: eventName needs to be defined");
        $(window).on("resize.stagemodel", relax.dom.bind(this, this.resize)),
        $(window).on("orientationchange.stagemodel", relax.dom.bind(this, this.resize)),
        $(window).on("scroll.statemodel", relax.dom.bind(this, this.scroll)),
        this.resize()
    }
    return __extends(e, t),
    e.SCROLL = "stage:scroll",
    e.RESIZE = "stage:resize",
    e.RESPONSIVE_CHANGE = "stage:responsive",
    e.ORIENTATION_PORTRAIT = "portrait",
    e.ORIENTATION_LANDSCAPE = "landscape",
    e.prototype.w = 0,
    e.prototype.h = 0,
    e.prototype.halfh = 0,
    e.prototype.halfw = 0,
    e.prototype.scrolltop = 0,
    e.prototype.scrollDirection = "",
    e.prototype._mediaQueries = null ,
    e.prototype.currentMQ = "",
    e.prototype.orientationMode = "",
    Object.defineProperties(e.prototype, {
        scrollTop: {
            get: function() {
                var t;
                return t = void 0 === window.scrollY ? document.documentElement && document.documentElement.scrollTop || document.body.scrollTop : window.scrollY
            }
        }
    }),
    e.prototype.scroll = function(t) {
        return window.requestAnimationFrame ? window.requestAnimationFrame(relax.dom.bind(this, this.handleScroll)) : this.handleScroll()
    }
    ,
    e.prototype.handleScroll = function() {
        return this.scrollDirection = top < this.scrolltop ? 1 : top > this.scrolltop ? -1 : 0,
        this.scrolltop = this.scrollTop,
        this.trigger(relax.StageModel.SCROLL, this)
    }
    ,
    e.prototype.resize = function(t) {
        return this.scrolltop = this.scrollTop,
        this.w = document.documentElement.clientWidth || window.innerWidth,
        this.h = document.documentElement.clientHeight || window.innerHeight,
        this.halfw = .5 * this.w,
        this.halfh = .5 * this.h,
        this.orientationMode = this.w / this.h <= .87 ? relax.StageModel.ORIENTATION_PORTRAIT : relax.StageModel.ORIENTATION_LANDSCAPE,
        this.trigger(e.RESIZE, this),
        $("#branded").css("min-height", this.h + "px"),
        $("#contentwrapper > #content").css("min-height", this.h + "px"),
        this._mediaQueries ? this.checkMediaQueries() : void 0
    }
    ,
    e.prototype.checkMediaQueries = function(t) {
        var e, i, r, n, o;
        for (null  == t && (t = !1),
        n = this._mediaQueries,
        o = [],
        i = 0,
        r = n.length; r > i; i++) {
            if (e = n[i],
            e.horizontalBreakPoint && e.horizontalBreakPoint > this.w) {
                (this.currentMQ !== e.eventName || t) && (this.currentMQ = e.eventName,
                this.trigger(relax.StageModel.RESPONSIVE_CHANGE, this));
                break
            }
            o.push(void 0)
        }
        return o
    }
    ,
    e.prototype.bind = function(t, i, r, n) {
        return null  == n && (n = !0),
        e.__super__.bind.call(this, t, i, r, n)
    }
    ,
    e.prototype.dealoc = function() {
        throw new Error("Wow wow wow! You don't wanna do this!")
    }
    ,
    e
}
(relax.EventDispatcher);
var DefaultPage, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
DefaultPage = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.ON_ANIMATED_IN = "on-animated-in",
    e.ON_ANIMATED_OUT = "on-animated-out",
    e._stageModel = null ,
    e.prototype.tagName = "div",
    e.prototype.className = "page",
    e.prototype._rendered = !1,
    e.setStageModel = function(t) {
        return e._stageModel = t
    }
    ,
    e.prototype.render = function(t) {
        var i, r, n, o, a, s, l;
        if (null  == t && (t = null ),
        !this.model.get("is-from-initial-pageload") && !this._rendered) {
            if (_.extend(this.events, {
                "mouseenter a[single-cache='true']": "onCacheElementMouseEnter"
            }),
            this.delegateEvents(),
            r = _.extend(this.model.toJSON()),
            t)
                for (i in t)
                    l = t[i],
                    r[i] = l;
            window.templates ? (r.data = this.model.get("data"),
            a = this.model.getTemplate(),
            s = a(r),
            this.el.innerHTML = _.unescape(s)) : this.el.innerHTML = _.unescape(this.model.getTemplate())
        }
        return this._rendered || (e._stageModel || console.warn("StageModel not set for default page! (DefaultPage.setStageModel(stageModel reference))"),
        null  != (n = e._stageModel) && n.bind(relax.StageModel.RESIZE, this.resize, this, !0),
        null  != (o = e._stageModel) && o.bind(relax.StageModel.SCROLL, this.scroll, this, !0)),
        this._rendered = !0,
        this
    }
    ,
    e.prototype.onCacheElementMouseEnter = function(t) {
        return window.application.pages.fetchCache(t.currentTarget.getAttribute("href"))
    }
    ,
    e.prototype.update = function(t) {
        return log("page update requested", t)
    }
    ,
    e.prototype.resize = function(t) {}
    ,
    e.prototype.scroll = function(t) {}
    ,
    e.prototype.animateIn = function() {
        return this.trigger(e.ON_ANIMATED_IN);
    }
    ,
    e.prototype.animateOut = function(t) {
        return this.trigger(e.ON_ANIMATED_OUT)
    }
    ,
    e.prototype.dealoc = function() {
        var t;
        return null  != (t = e._stageModel) && t.unbindAll(this),
        this.undelegateEvents(),
        this.unbind(),
        this.remove()
    }
    ,
    e
}
(Backbone.View);
var PageModel, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
PageModel = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.PAGES = {},
    e.templateAliasRoutes = null ,
    e.prototype.defaults = {
        active: !1,
        "animate-state": "pre-in"
    },
    e.prototype.navigateTo = function() {
        var t, e, i, r, n;
        if (r = this.get("url"),
        i = this.get("parameters"),
        i && Object.keys(i).length > 0) {
            r += "?",
            t = 0;
            for (e in i)
                n = i[e],
                r += ++t < Object.keys(i).length ? e + "=" + n + "&" : e + "=" + n
        }
        return window.application.router.navigate(r)
    }
    ,
    e.prototype.setActiveTo = function(t, i) {
        var r;
        return null  == i && (i = null ),
        e.PAGES["*"] || (e.PAGES["*"] = DefaultPage),
        this.set("active", t),
        this.get("active") ? (r = e.PAGES[this.get("type")] ? e.PAGES[this.get("type")] : e.PAGES["*"],
        this.get("is-from-initial-pageload") ? this.set("view", new r({
            model: this,
            el: this.get("context").find(".page")[0]
        })) : this.set("view", new r({
            model: this
        })),
        this.get("view").el && this.get("view").el.classList.add(this.get("type")),
        this.onModelReady()) : this.removeView(i)
    }
    ,
    e.prototype.getTemplate = function() {
        return this.get("data").template && this.get("data").template.length > 0 ? this.get("data").template : window.templates[this.get("type")] ? _.template(window.templates[this.get("type")]) : e.templateAliasRoutes && e.templateAliasRoutes[this.get("type")] ? _.template(window.templates[e.templateAliasRoutes[this.get("type")]]) : (window.templates["default"] || (window.templates["default"] = "<div>Template is missing!</div>"),
        _.template(window.templates["default"]))
    }
    ,
    e.prototype.onModelReady = function() {
        var t;
        return this.addType(),
        t = this.get("view"),
        t && (t.once(DefaultPage.ON_ANIMATED_IN, this.onAnimatedIn, this),
        t.render()),
        this.set({
            "animate-state": "pre-in"
        }),
        t ? (t.animateIn(),
        this.get("context").prepend(t.el)) : void 0
    }
    ,
    e.prototype.addType = function() {
        return document.body.classList.add("page-" + this.get("type"))
    }
    ,
    e.prototype.removeType = function() {
        return document.body.classList.remove("page-" + this.get("type"))
    }
    ,
    e.prototype.removeView = function(t) {
        var e;
        return null  == t && (t = null ),
        e = this.get("view"),
        e ? (e.once(DefaultPage.ON_ANIMATED_OUT, this.onAnimatedOut, this),
        this.set({
            "animate-state": "pre-out"
        }),
        e.animateOut(t)) : this.remove()
    }
    ,
    e.prototype.remove = function() {
        var t;
        return this.removeType(),
        this.trigger("destroy", this),
        this.trigger("removed"),
        this.unbind(),
        null  != (t = this.get("collection")) && t.off("change", this),
        Backbone.Model.prototype.destroy.apply(this)
    }
    ,
    e.prototype.onAnimatedIn = function() {
        return this.set({
            "animate-state": "in"
        }),
        this.trigger("ready")
    }
    ,
    e.prototype.onAnimatedOut = function() {
        var t;
        return this.set({
            "animate-state": "out"
        }),
        null  != (t = this.get("view")) && t.dealoc(),
        this.unset("view"),
        this.remove()
    }
    ,
    e.addAliasRoutes = function(t) {
        return e.templateAliasRoutes = t
    }
    ,
    e.setPageTypes = function(t) {
        return e.PAGES = t
    }
    ,
    e
}
(Backbone.Model);
var CachedAjax, PagesCollection, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
PagesCollection = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.routeRootURL = "/",
    e.prototype.url = "",
    e.prototype.ajaxObj = null ,
    e.prototype._context = null ,
    e.prototype._updateTypes = null ,
    e.prototype.jsonOnly = !1,
    e.prototype._isFirstRender = !0,
    e.prototype._pageModelTypes = null ,
    e.prototype._sessionStorageEnabled = !0,
    e.prototype._ignoredCacheTypes = null ,
    e.prototype._requestTimer = 0,
    e.prototype._dto = null ,
    e.prototype.initialize = function(t) {
        return this._context = t.context ? t.context : t.$context,
        this._sessionStorageEnabled = relax.caniuse.localstorage(),
        t.storeInSession === !1 && (this._sessionStorageEnabled = !1),
        this.jsonOnly = t.jsonOnly,
        t.ignoredCacheTypes && (this._ignoredCacheTypes = t.ignoredCacheTypes),
        t.modelClasses ? this._pageModelTypes = t.modelClasses : this._pageModelTypes = [],
        this._pageModelTypes["*"] || (this._pageModelTypes["*"] = PageModel),
        t.updateTypes && (this._updateTypes = t.updateTypes),
        t ? this.routeRootURL = t.rootURL : void 0
    }
    ,
    e.prototype.bindCacheElements = function() {
        var t, e, i, r, n;
        if (!relax.browser.isTouch()) {
            for (r = document.querySelectorAll("a[single-cache=true]"),
            n = [],
            e = 0,
            i = r.length; i > e; e++)
                t = r[e],
                n.push(t.addEventListener("mouseenter", this.onCacheElementMouseEnter.bind(this)));
            return n
        }
    }
    ,
    e.prototype.onCacheElementMouseEnter = function(t) {
        return this.fetchCache(t.currentTarget.getAttribute("href"))
    }
    ,
    e.prototype.dealocModelsAndGetPrevious = function() {
        return this.model && this.model.setActiveTo(!1, this.model),
        this.model
    }
    ,
    e.prototype.fetch = function(t, e, i) {
        return null  == i && (i = {}),
        "undefined" != typeof console && null  !== console && console.log("%c Single:PagesCollection > fetching page: '" + t + "', of type: '" + e + "'", "background: #e4e4e4; color: #888888"),
        document.body.classList.add("single-loading"),
        this._isFirstRender && (this.model = null ),
        this.trigger("fetching", this.model),
        clearTimeout(this._requestTimer),
        this._dto = {
            type: e,
            url: t,
            parameters: i
        },
        this._isFirstRender ? this.setModelData(window.globalJSON, !this.jsonOnly) : this.makeAjaxCall(),
        this._isFirstRender = !1
    }
    ,
    e.prototype.makeAjaxCall = function() {
        var t, e;
        return this.jsonOnly ? this.setModelData(this._dto) : (null  != (t = this.ajaxObj) && t.abort(),
        this._sessionStorageEnabled && sessionStorage.getItem(this._dto.url) && this.cacheAllowedForType(this._dto.type) ? this.setModelData(JSON.parse(sessionStorage.getItem(this._dto.url))) : (this._requestTimer = setTimeout(function(t) {
            return function() {
                return "undefined" != typeof rwatgs && null  !== rwatgs ? rwatgs.error.bot.report({
                    message: "RelaxSingle: page took more than 3 seconds to fetch ..."
                }) : void 0
            }
        }
        (this), 1e4),
        e = this.routeRootURL + this._dto.url + "?ajax=",
        this.ajaxObj = new XMLHttpRequest,
        this.ajaxObj.open("GET", e, !0),
        this.ajaxObj.onload = function(t) {
            return function() {
                var e, i;
                if (!(t.ajaxObj.status >= 200 && t.ajaxObj.status < 400))
                    return t.onPageRequestError(t.ajaxObj.status);
                try {
                    return e = JSON.parse(t.ajaxObj.responseText),
                    t.onNewPageRequested(e)
                } catch (r) {
                    return i = r,
                    "undefined" != typeof rwatgs && null  !== rwatgs ? rwatgs.error.bot.report({
                        message: "RelaxSingle: Code RED -> error parsing reponseText"
                    }) : void 0
                }
            }
        }
        (this),
        this.ajaxObj.onerror = function(t) {
            return function() {
                return t.onPageRequestError(t.ajaxObj.status)
            }
        }
        (this),
        this.ajaxObj.send()))
    }
    ,
    e.prototype.isPageUpdateable = function(t) {
        return this._updateTypes && -1 !== this._updateTypes.indexOf(t) || "update-only" === t
    }
    ,
    e.prototype.canPageUpdateAndBelong = function() {
        var t, e, i, r;
        return i = !1,
        t = this.model.get("url").split("/"),
        e = this._dto.fragment.split("?")[0].split("/"),
        r = 1 === relax.array.equalInPercent(t, e),
        i = this.model.get("updateable") && (r || "" === t[0] || "" === e[0]) ? !0 : this.model.get("updateable") && t.length !== e.length ? t.length > e.length ? t.length > 1 && e.length > 0 && t[t.length - 2] === e[e.length - 1] : t.length > 0 && e.length > 1 && t[t.length - 1] === e[e.length - 2] : t.length > 1 && e.length > 1 && t[t.length - 2] === e[e.length - 2]
    }
    ,
    e.prototype.setModelData = function(t, e) {
        var i, r, n, o, a, s;
        if (null  == e && (e = !1),
        clearTimeout(this._requestTimer),
        this._dto !== t && (this._dto.data = t),
        this._dto.fragment = Backbone.history.fragment,
        o = this.isPageUpdateable(this._dto.type),
        i = !1,
        this.model && (i = this.canPageUpdateAndBelong()),
        this.model && o && i)
            a = this.model.get("type") !== this._dto.type,
            a && this.model.removeType(),
            this.model.set("type", this._dto.type),
            this.model.set("data", this._dto.data),
            this.model.set("url", this._dto.url),
            this._dto.parameters && this.model.set("parameters", this._dto.parameters),
            a && this.model.addType(),
            this.updateModelView(this._dto);
        else {
            if (this._sessionStorageEnabled && this.cacheAllowedForType(this._dto.type)) {
                window.templates || t.template || (t.template = document.querySelector("#page-content .page").innerHTML);
                try {
                    sessionStorage.setItem(this._dto.url, JSON.stringify(t))
                } catch (l) {
                    n = l,
                    "undefined" != typeof rwatgs && null  !== rwatgs && rwatgs.error.bot.report({
                        error: {
                            message: n.message
                        }
                    })
                }
            }
            if (r = this._pageModelTypes[this._dto.type] ? this._pageModelTypes[this._dto.type] : this._pageModelTypes["*"],
            this.model && this.model.get("url") === this._dto.url)
                return this.model.get("view") && this.model.get("view").update(this._dto),
                null ;
            s = this.dealocModelsAndGetPrevious(),
            this.model = new r({
                data: t
            }),
            this.model.once("ready", relax.dom.bind(this, this.onModelReady)),
            this.model.set({
                context: this._context,
                url: this._dto.url,
                type: this._dto.type,
                parameters: this._dto.parameters,
                collection: this,
                updateable: o,
                "is-from-initial-pageload": e
            }),
            s && this.model.set("prev-model", s),
            this.model.setActiveTo(!0)
        }
        return this.model.get("data") && this.model.get("data").pageTitle && (document.title = this.model.get("data").pageTitle),
        document.body.classList.remove("single-loading"),
        this.trigger("updated", this.model)
    }
    ,
    e.prototype.updateModelView = function(t) {
        return null  == t && (t = null ),
        this.model && (!t && this._dto && (t = this._dto),
        this.model.get("view")) ? this.model.get("view").update(t) : void 0
    }
    ,
    e.prototype.onModelReady = function() {
        return this.model.off("ready"),
        this.trigger("ready", this.model)
    }
    ,
    e.prototype.cacheAllowedForType = function(t) {
        return this._ignoredCacheTypes && -1 !== this._ignoredCacheTypes.indexOf(t) ? !1 : !0
    }
    ,
    e.prototype.checkIfModelExistWith = function(t) {
        var e;
        return e = null ,
        _.each(this.models, function(i) {
            return i.get("url") === t ? e = i : void 0
        }
        ),
        e
    }
    ,
    e.prototype.onNewPageRequested = function(t) {
        return this.ajaxObj = null ,
        this.setModelData(t)
    }
    ,
    e.prototype.onPageRequestError = function(t) {
        var e;
        try {
            if ("abort" !== t)
                return "undefined" != typeof rwatgs && null  !== rwatgs ? rwatgs.error.bot.report({
                    message: "RelaxSingle: Page Request Error:",
                    errorType: t
                }) : void 0
        } catch (i) {
            e = i
        }
    }
    ,
    e.prototype.fetchCache = function(t) {
        return this._sessionStorageEnabled && !sessionStorage.getItem(t) ? new CachedAjax(t,this.routeRootURL) : void 0
    }
    ,
    e
}
(Backbone.Collection),
CachedAjax = function() {
    function t(e, i) {
        this._url = e,
        "/" === this._url.substr(0, 1) && (this._url = this._url.substr(1, this._url.length - 1)),
        -1 === t.urls.indexOf(this._url) ? (t.urls.push(this._url),
        e = i + this._url + "?ajax=",
        this.cacheAjaxObj = new XMLHttpRequest,
        this.cacheAjaxObj.open("GET", e, !0),
        this.cacheAjaxObj.onload = function(t) {
            return function() {
                return t.cacheAjaxObj.status >= 200 && t.cacheAjaxObj.status < 400 ? t.onCachedPageRequested(t.cacheAjaxObj.responseText) : "undefined" != typeof rwatgs && null  !== rwatgs ? rwatgs.error.bot.report({
                    error: {
                        message: t.cacheAjaxObj.status + ", " + t.cacheAjaxObj.statusText
                    }
                }) : void 0
            }
        }
        (this),
        this.cacheAjaxObj.onerror = this.onPageRequestError.bind(this),
        this.cacheAjaxObj.send()) : this.dealoc()
    }
    return t.urls = [],
    t.prototype._url = null ,
    t.prototype.onCachedPageRequested = function(t) {
        var e;
        try {
            sessionStorage.setItem(this._url, t)
        } catch (i) {
            e = i,
            "undefined" != typeof rwatgs && null  !== rwatgs && rwatgs.error.bot.report({
                error: {
                    message: e.message
                }
            })
        }
        return this.dealoc()
    }
    ,
    t.prototype.onPageRequestError = function(t) {
        var e;
        return e = 0 !== this.cacheAjaxObj.status && "" !== this.cacheAjaxObj.statusText ? this.cacheAjaxObj.status + ", " + this.cacheAjaxObj.statusText : "response: " + this.cacheAjaxObj.response + " > responseText: " + this.cacheAjaxObj.responseText,
        "undefined" != typeof rwatgs && null  !== rwatgs ? rwatgs.error.bot.report({
            error: {
                message: e
            }
        }) : void 0
    }
    ,
    t.prototype.dealoc = function() {
        return this._url = null ,
        delete this
    }
    ,
    t
}
();
var Router, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
Router = function(t) {
    function e(t) {
        var i, r, n, o, a;
        this.pages = t.pages,
        t.routes || (t.routes = {}),
        this._ignoreURLUpdate = t.ignoreURLUpdate,
        t.tracking && (this._tracking = t.tracking),
        o = this.buildRoutes(t.routes),
        i = JSON.parse(JSON.stringify(o));
        for (r in i)
            a = i[r],
            "/" === r.substr(r.length - 1, 1) ? (n = r.substr(0, r.length - 1),
            o[n] = a) : "/" !== r.substr(r.length - 1, 1) && (n = r + "/",
            o[n] = a);
        t.routes = o,
        e.__super__.constructor.call(this, t)
    }
    return extend(e, t),
    e.prototype.pages = null ,
    e.prototype._tracking = null ,
    e.prototype._currentFrag = "",
    e.prototype._ignoreURLUpdate = !1,
    e.prototype._hasRunFirstTime = !1,
    e.prototype.buildRoutes = function(t) {
        var e, i, r, n, o, a, s, l, h;
        e = {},
        e[""] = "homeRoute",
        a = this,
        i = function(t) {
            return a.on("route:" + t + "Route", function(e) {
                return function() {
                    return a.doRoute(Backbone.history.fragment, t)
                }
            }
            (this))
        }
        ,
        o = function(t) {
            return function(i, r) {
                return "/" === r.substr(r.length - 1, r.length - 1) ? (e[t.getRouteStr(r)] = i + "Route",
                e[t.getRouteStr(r.split(0, r.length - 1))] = i + "Route") : (e[t.getRouteStr(r)] = i + "Route",
                e[t.getRouteStr(r + "/")] = i + "Route")
            }
        }
        (this);
        for (s in t) {
            if (h = t[s],
            "[object Array]" === Object.prototype.toString.call(h))
                for (r = 0,
                n = h.length; n > r; r++)
                    l = h[r],
                    o(s, l);
            else
                o(s, h);
            new i(s)
        }
        return e["*notFound"] = "notFound",
        this.on("route:notFound", function(t) {
            return function(e) {
                return t.routeNotFound()
            }
        }
        (this)),
        e
    }
    ,
    e.prototype.getRouteStr = function(t) {
        return !t && console && console.log ? console.warn("Single:Router, route param is undefined!") : "/" === t.substr(0, 1) ? t.substr(1, t.length) : t
    }
    ,
    e.prototype.start = function(t) {
        var e;
        return null  == t && (t = null ),
        t || (t = {}),
        t.rootURL || (t.rootURL = "/"),
        t.rootURL.length > 2 && console.warn && console.warn("Single:Router, be aware that rootURL is not '/' !"),
        e = -1 !== window.location.href.indexOf("localhost") ? !1 : window.history.pushState,
        null  !== t.ignorePushState && t.ignorePushState === !0 && (e = !1),
        Backbone.history.start({
            pushState: e,
            root: t.rootURL,
            silent: !1
        })
    }
    ,
    e.prototype.doRoute = function(t, e) {
        var i, r, n, o;
        return null  == e && (e = ""),
        n = t.split("?"),
        r = {},
        n.length > 1 && (t = n[0],
        r = this.parseQueryString(n[1])),
        null  != (o = this._tracking) && o.page(Backbone.history.fragment),
        this._currentFrag = Backbone.history.fragment,
        i = e ? e : "not-defined",
        this.pages.fetch(t, i, r)
    }
    ,
    e.prototype.navigate = function(t, i) {
        var r, n, o, a;
        return a = location.host,
        r = void 0 === t.split(a)[1] ? t : t.split(a)[1],
        n = !(!window.history || !history.pushState),
        this._ignoreURLUpdate ? this._currentFrag !== r ? (this._currentFrag = r,
        Backbone.history.loadUrl(r)) : void 0 : (o = this._currentFrag === r,
        this._currentFrag = r,
        n ? o ? this.pages.updateModelView() : e.__super__.navigate.call(this, r, {
            trigger: !0
        }) : window.location = r)
    }
    ,
    e.prototype.navigateToParentPage = function() {
        var t, e, i;
        return i = Backbone.history.fragment,
        t = i.lastIndexOf("/"),
        e = i.substring(0, t + 1),
        this.navigate(e)
    }
    ,
    e.prototype.routeNotFound = function() {
        return console.warn("Single:Router, route not found!", Backbone.history.fragment)
    }
    ,
    e.prototype.parseQueryString = function(t) {
        var e, i, r, n, o;
        for (o = t.split("&"),
        r = {},
        e = 0,
        i = o.length; i > e; e++)
            n = o[e],
            r[n.split("=")[0]] = n.split("=")[1];
        return r
    }
    ,
    e.prototype.getQueryStringParameter = function(t) {
        var e, i;
        return t = t.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"),
        e = new RegExp("[\\?&]" + t + "=([^&#]*)"),
        i = e.exec(this.pages.jsonOnly ? location.hash : location.search),
        null  === i ? "" : decodeURIComponent(i[1].replace(/\+/g, " "))
    }
    ,
    e.prototype.updateQueryStringParameter = function(t, e) {
        var i, r, n;
        return n = this.pages.jsonOnly ? location.hash : location.search,
        i = new RegExp("([?&])" + t + "=.*?(&|$)","i"),
        r = -1 !== n.indexOf("?") ? "&" : "?",
        n.match(i) ? n.replace(i, "$1" + t + "=" + e + "$2") : n + r + t + "=" + e
    }
    ,
    e
}
(Backbone.Router);
var DebugMenu;
DebugMenu = {
    enabled: !1,
    _el: null ,
    _open: !0,
    router: null ,
    init: function(t) {
        var e;
        if (!window.jQuery)
            throw new Error("DebugMenu debug requires jQuery to work");
        return DebugMenu.router = t.router,
        this.enabled = !0,
        t.pages.on("updated", this.onPageUpdated, this),
        e = "<b>RWATGG debug menu</b></br>",
        this._el = $("body").prepend("<div id='DebugMenu-debug'><div style='line-height: 16px; padding: 4px; padding-left: 6px; background-color: #FCF8E3; color: #555555; display: block; margin-left: 10px; margin-top: 10px; width: 280px;'>" + e + "</div>").find("#DebugMenu-debug"),
        this.buildTree(t.routes, this._el),
        this.addStyle(),
        t.open ? $("#DebugMenu-debug").addClass("open") : void 0
    },
    addStyle: function() {
        var t, e, i;
        return t = "html,body{width:100%;height:100%;}#DebugMenu-debug{background:#e7e7e7;color:black;font-family:Georgia, Verdana;font-size:11px; line-height:11px;padding-right:10px;box-shadow:6px 7px 8px -4px #e7e7e7;overflow:auto;width:0;height:100%;position:fixed;z-index:9999999999999999;top:0;left:0;transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-moz-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-webkit-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-o-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);margin:0;}#DebugMenu-debug * {box-sizing: border-box;}#DebugMenu-debug.open{width:300px;}#DebugMenu-debug ul{overflow:hidden;margin:0;padding:0 0 0 15px;}#DebugMenu-debug > ul{margin-top:10px;margin-bottom:10px;padding:0 0 0 10px;}#DebugMenu-debug ul li{border:1px solid #fafafa;cursor:pointer;opacity:1;list-style:none;background:white;width:300px;transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-moz-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-webkit-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-o-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);margin:0;padding:7px 2px 7px 6px;}#DebugMenu-debug ul li.selected:before{content:'> ';}#DebugMenu-debug ul li.selected{background:#000000;color:#ffffff;margin:10px 0;}#DebugMenu-debug ul li.prev-selected{background:#e9e9e9;}#DebugMenu-debug ul li:hover{opacity:.7;}",
        e = document.getElementsByTagName("head")[0],
        i = document.createElement("style"),
        i.type = "text/css",
        i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t)),
        e.appendChild(i),
        $(document).bind("mousemove.debug", relax.dom.bind(this, this.onMouseMove))
    },
    onMouseMove: function(t) {
        var e;
        return e = this._open,
        this._open = t.pageX <= (this._open ? 250 : 40),
        e !== this._open ? this._open ? $("#DebugMenu-debug").addClass("open") : $("#DebugMenu-debug").removeClass("open") : void 0
    },
    buildTree: function(t, e, i) {
        var r, n, o, a, s, l, h;
        for (null  == i && (i = null ),
        l = [],
        n = 0,
        a = t.length; a > n; n++)
            s = t[n],
            o = s.url.split("/").join("-"),
            o = o.split("?").join("_").split("=").join("_").split("&").join("_"),
            r = e.append("<ul id='" + o + "-wrapper'></ul>").find("ul#" + o + "-wrapper"),
            h = i ? i + s.url : s.url,
            h = h.split("//").join("/"),
            new DebugMenu.DebugBtn(h,r.append("<li id='" + o + "-btn'><span>" + s.label + "</span></li>").find("#" + o + "-btn")),
            l.push(s.children && s.children.length > 0 ? this.buildTree(s.children, r, h) : void 0);
        return l
    },
    onPageUpdated: function(t) {
        return log("onPageUpdate", t)
    }
},
DebugMenu.DebugBtn = function() {
    function t(t, e) {
        this._url = t,
        this._el = e,
        this._el.click(relax.dom.bind(this, this.onClick))
    }
    return t.prototype._url = "",
    t.prototype._el = null ,
    t.prototype.onClick = function(t) {
        return DebugMenu.router.navigate(this._url)
    }
    ,
    t
}
();
var RWATGGPageModel, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
RWATGGPageModel = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.isTextType = function() {
        return "about" === this.get("type") || "contact" === this.get("type") ? !0 : !1
    }
    ,
    e
}
(PageModel);
var ScrollHandler;
ScrollHandler = function() {
    function t() {
        this.el = $("#pseudo-scroll"),
        this._stageModel = window.application.stageModel,
        this._stageModel.bind(StageModel.RESIZE, this.resize, this)
    }
    return t.prototype.el = null ,
    t.prototype._h = 0,
    t.prototype._stageModel = null ,
    t.TIME_SCROLL_SPEED = .2,
    t.prototype.setHeight = function(t) {
        return this._h = 1.1 * t,
        this.el.height(this._h),
        log("setHeight", this._h)
    }
    ,
    t.prototype.setY = function(t) {
        return $(window).scrollTop(t)
    }
    ,
    t.prototype.resize = function(t) {}
    ,
    t.prototype.getPercent = function() {
        var t, e;
        return t = this._h - this._stageModel.h,
        e = 1 - (t - this._stageModel.scrollTop) / t,
        isNaN(e) && (e = 0),
        e
    }
    ,
    t
}
();
var SoundController;
SoundController = function() {
    function t() {
        var e, i, r;
        try {
            if (relax.caniuse.localstorage() && "true" === window.localStorage.getItem("disable-sound") && (t.disableSound = !0),
            relax.browser.isMobile() && (t.disableSound = !0),
            t.disableSound && $("#footer .mute-btn").remove(),
            t.disableSound)
                return;
            for ($.support.pageVisibility && ($(document).on("show.visibility", relax.dom.bind(this, this.onDocumentShow)),
            $(document).on("hide.visibility", relax.dom.bind(this, this.onDocumentHide))),
            this._mainLoop = new buzz.sound("/static/sound/Drone Loop (Main)",{
                formats: ["ogg", "mp3"]
            }),
            this._mainLoop.bind("canplaythrough", function(t) {
                return function() {
                    return t._caseLoop = new buzz.sound("/static/sound/Drone Loop (Case)",{
                        formats: ["ogg", "mp3"],
                        autoplay: !1
                    }),
                    t._textLoop = new buzz.sound("/static/sound/Drone Loop (About)",{
                        formats: ["ogg", "mp3"],
                        autoplay: !1
                    })
                }
            }
            (this)),
            this._mainLoop.play().fadeIn(3e3).loop(),
            window.application.pages.on("updated", this.onPageUpdated, this),
            this._sounds = [],
            this._sounds.hover = [],
            this._sounds.hover_index = -1,
            e = i = 1; 8 >= i; e = i += 1)
                this._sounds.hover.push(new buzz.sound("/static/sound/Bit " + e,{
                    formats: ["ogg", "mp3"]
                }));
            for (this._sounds.click = [],
            this._sounds.click_index = -1,
            e = r = 1; 6 >= r; e = r += 1)
                this._sounds.click.push(new buzz.sound("/static/sound/Click " + e,{
                    formats: ["ogg", "mp3"]
                }));
            relax.caniuse.localstorage() && "true" === window.localStorage.getItem("muted") && (this.toggleMute(),
            $("#footer .mute-btn").addClass("selected"))
        } catch (n) {}
    }
    return t.prototype._mainLoop = null ,
    t.prototype._caseLoop = null ,
    t.prototype._textLoop = null ,
    t.prototype._magicCatLoop = null ,
    t.prototype._sounds = null ,
    t.prototype._mute = !1,
    t.disableSound = !1,
    t.prototype.toggleMute = function() {
        this._mute = !this._mute,
        relax.caniuse.localstorage() && window.localStorage.setItem("muted", this._mute ? "true" : "false");
        try {
            this._mute ? "undefined" != typeof buzz && null  !== buzz && buzz.all().mute() : "undefined" != typeof buzz && null  !== buzz && buzz.all().unmute()
        } catch (t) {}
        return {
            "catch": function(t) {}
        }
    }
    ,
    t.prototype.onPageUpdated = function(e) {
        var i, r, n, o, a, s;
        if (!t.disableSound && !this._mute && -1 === e.get("type").toLowerCase().indexOf("filter")) {
            try {
                null  != (i = this._magicCatLoop) && i.stop(),
                e.isTextType() ? (null  != (r = this._caseLoop) && r.stop(),
                this._textLoop && (this._textLoop.setPercent(0).play().fadeIn(3e3).loop(),
                this._mainLoop.fadeOut(3e3, function() {
                    return this.stop()
                }
                ))) : "case" === e.get("type") ? (null  != (n = this._textLoop) && n.stop(),
                "work/magic-cat" === e.get("url") ? (this._magicCatLoop || (this._magicCatLoop = new buzz.sound("/static/sound/magic_cat",{
                    formats: ["ogg", "mp3"]
                })),
                this._magicCatLoop.setPercent(0).play().fadeIn(1e3).loop(),
                this._mainLoop.stop(),
                null  != (o = this._caseLoop) && o.fadeOut(3e3)) : this._caseLoop && (this._caseLoop.setPercent(0).play().fadeIn(3e3).loop(),
                this._mainLoop.fadeOut(3e3, function() {
                    return this.stop()
                }
                ))) : (null  != (a = this._caseLoop) && a.fadeOut(3e3, function() {
                    return this.stop()
                }
                ),
                null  != (s = this._textLoop) && s.fadeOut(3e3, function() {
                    return this.stop()
                }
                ),
                this._mainLoop.play().fadeIn(3e3))
            } catch (l) {}
            return {
                "catch": function(t) {}
            }
        }
    }
    ,
    t.prototype.play = function(e, i) {
        var r;
        if (null  == e && (e = null ),
        null  == i && (i = -1),
        !t.disableSound && !this._mute) {
            try {
                if (e && this._sounds[e]) {
                    if (-1 !== i)
                        r = i;
                    else
                        for (r = this._sounds[e + "_index"]; this._sounds[e + "_index"] === r; )
                            r = Math.floor(Math.random() * this._sounds[e].length);
                    this._sounds[e + "_index"] = r,
                    this._sounds[e][this._sounds[e + "_index"]].setPercent(0).play()
                }
            } catch (n) {}
            return {
                "catch": function(t) {}
            }
        }
    }
    ,
    t.prototype.onDocumentShow = function() {
        return this._mute ? void 0 : "undefined" != typeof buzz && null  !== buzz ? buzz.all().unmute() : void 0
    }
    ,
    t.prototype.onDocumentHide = function() {
        return "undefined" != typeof buzz && null  !== buzz ? buzz.all().mute() : void 0
    }
    ,
    t
}
();
var SiteMenuFilterModel, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteMenuFilterModel = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.defaults = {
        visible: !1,
        "button-visible": !0,
        filters: []
    },
    e.prototype.initialize = function() {
        return window.application.pages.on("updated", this.onPageUpdated, this),
        this.set("view", new SiteMenuFilterView({
            el: "#filter-list",
            model: this
        })),
        this.set("button", new SiteMenuFilterButton({
            el: "#filter-button",
            model: this
        }))
    }
    ,
    e.prototype.toggleFilter = function(t) {
        var e, i;
        return i = this.get("filters"),
        e = !0,
        -1 === i.indexOf(t) ? i.push(t) : (e = !1,
        i.splice(i.indexOf(t), 1)),
        window.application.router.navigate(0 === i.length ? "filter" : "filter/" + i.toString()),
        e
    }
    ,
    e.prototype.onPageUpdated = function(t) {
        var e, i, r;
        return log("onPageUpdated > model", t.toJSON()),
        r = t.get("url"),
        i = -1 !== r.indexOf("filter"),
        t && r && (e = r.split("filter/"),
        e[1] && (e = e[1].split(","),
        this.set("filters", e))),
        this.set("visible", i),
        this.get("view").update(this.get("filters"))
    }
    ,
    e
}
(Backbone.Model);
var ColorTheme, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
ColorTheme = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.defaults = {
        primary: "black",
        secondary: "white"
    },
    e.prototype.initialize = function() {
        return window.application.pages.on("updated", this.onPageUpdated, this)
    }
    ,
    e.prototype.onPageUpdated = function(t) {
        return this.get("name") && $("#color-background").removeClass("color-" + this.get("name")),
        this.get("name") && $("body").removeClass("color-" + this.get("name")),
        this.set(t.isTextType() ? {
            name: "white",
            primary: "white",
            secondary: "black"
        } : {
            name: "black",
            primary: "black",
            secondary: "white"
        }),
        $("#color-background").addClass("color-" + this.get("name")),
        $("body").addClass("color-" + this.get("name"))
    }
    ,
    e
}
(Backbone.Model);
var ThreeWorld;
ThreeWorld = function() {
    function t(t) {
        this.camera = null ,
        this._renderer = null ,
        this.meshes = [],
        this._projector = new THREE.Projector,
        window.application.pages.on("updated", this.onPageChange, this),
        this.init(t)
    }
    return t.prototype.rwatggSphere = null ,
    t.prototype._caseListAnimationProgress = 0,
    t.prototype._caseInteractionActive = !0,
    t.prototype._caseDotsVisible = null ,
    t.prototype._rotateXTarget = 0,
    t.prototype._rotateX = 0,
    t.prototype._xTarget = 0,
    t.prototype._x = 0,
    t.prototype.onPageChange = function(t) {
        var e, i;
        return e = t.get("type"),
        i = t.get("url"),
        this._caseInteractionActive = "root" === e,
        "menuFilter" === e || "menuFilterType" === e ? this._xTarget = 50 : this._xTarget = 0
    }
    ,
    t.prototype.init = function(t) {
        var e, i, r, n, o, a;
        if (this.scene = new THREE.Scene,
        r = .01,
        i = 12e3,
        e = 50,
        this.camera = new THREE.PerspectiveCamera(e,window.innerWidth / window.innerHeight,r,i),
        Detector.webgl ? this._renderer = new THREE.WebGLRenderer({
            antialias: !0,
            alpha: !0
        }) : this._renderer = new THREE.CanvasRenderer({
            antialias: !0,
            alpha: !0
        }),
        $(this._renderer.domElement).attr("id", "wires"),
        this._renderer.setSize(window.innerWidth, window.innerHeight),
        document.body.appendChild(this._renderer.domElement),
        !relax.browser.isMobile())
            for (n = o = 0,
            a = t.cases.length; a >= o; n = o += 1)
                $(t.cases[n]).attr("href") && this.buildMesh(n, {
                    url: $(t.cases[n]).attr("href"),
                    numCases: t.cases.length - 1,
                    color: $(t.cases[n]).data("color")
                });
        return this.rwatggSphere = new RwatggSphere({
            scene: this.scene,
            camera: this.camera,
            projector: this._projector
        }),
        this.meshes.push(this.rwatggSphere),
        this.scene.add(this.rwatggSphere),
        this.scene.add(new THREE.AmbientLight(16777215)),
        relax.tools.renderQue.add(this),
        window.application.stageModel.bind(StageModel.RESIZE, this.resize, this)
    }
    ,
    t.prototype.buildMesh = function(t, e) {
        var i, r;
        return r = new CaseSphere({
            index: t,
            color: e.color,
            numCases: e.numCases,
            url: e.url,
            parentMesh: this.meshes.length > 0 ? this.meshes[t - 1] : null ,
            scene: this.scene,
            camera: this.camera,
            projector: this._projector
        }),
        this.meshes.push(r),
        this.scene.add(r),
        this.meshes[t - 1] && this.meshes[t - 1].connectMesh(this.meshes[t]),
        i = t > this._numDots ? t - this._numDots + 5 : t
    }
    ,
    t.prototype.getMesh = function(t) {
        return this.meshes[t]
    }
    ,
    t.prototype.peakABoo = function() {
        return this.rwatggSphere.updateVisible(!0),
        window.application.stageModel.bind(StageModel.SCROLL, this.scroll, this, !0)
    }
    ,
    t.prototype.resize = function(t) {
        var e, i, r, n, o, a, s, l;
        for (this._renderer.setSize(t.w, t.h),
        this.camera.aspect = t.w / t.h,
        this.camera.updateProjectionMatrix(),
        e = 14e3,
        s = this.camera.fov * Math.PI / 180,
        r = 2 * Math.tan(s / 2) * e,
        l = r * this.camera.aspect,
        a = this.meshes,
        n = 0,
        o = a.length; o > n; n++)
            i = a[n],
            i.resize(l, r);
        return this.renderQueCall()
    }
    ,
    t.prototype.scroll = function() {
        var t;
        return t = window.application.scrollHandler.getPercent(),
        this._rotateXTarget = -.025 + .1 * t,
        this.rwatggSphere.setScroll(t),
        this.handleCaseDotsVisibility(t > .05)
    }
    ,
    t.prototype.handleCaseDotsVisibility = function(t) {
        var e, i, r;
        return !this._caseInteractionActive && null  !== this._caseDotsVisible || this._caseDotsVisible === t ? void 0 : (r = function(t) {
            return function() {
                var e, i, r, n, o;
                for (n = t.meshes,
                o = [],
                e = 0,
                i = n.length; i > e; e++)
                    r = n[e],
                    o.push("function" == typeof r.updateVisible ? r.updateVisible(t._caseListAnimationProgress) : void 0);
                return o
            }
        }
        (this),
        e = this._caseDotsVisible === !1 || null  === this._caseDotsVisible && !this._caseInteractionActive ? 1 : 0,
        i = this._caseDotsVisible === !1 || null  === this._caseDotsVisible ? 1 : .3,
        TweenLite.killTweensOf(this),
        TweenLite.to(this, i, {
            easing: "easeOutCubic",
            delay: null  === this._caseDotsVisible ? .5 : 0,
            _caseListAnimationProgress: e,
            onUpdate: function(t) {
                return function() {
                    return r()
                }
            }
            (this),
            onComplete: function(t) {
                return function() {
                    return r()
                }
            }
            (this)
        }),
        this._caseDotsVisible = t)
    }
    ,
    t.prototype.renderQueCall = function() {
        var t, e, i, r;
        for (r = this.meshes,
        t = 0,
        e = r.length; e > t; t++)
            i = r[t],
            i.render();
        return this._renderer.render(this.scene, this.camera),
        this._rotateX += .02 * (this._rotateXTarget - this._rotateX),
        this.camera.rotation.x = this._rotateX,
        this._x += .01 * (this._xTarget - this._x),
        this.camera.position.x = this._x
    }
    ,
    t
}
();
var DotParticles;
DotParticles = function() {
    function t(t, e) {
        null  == e && (e = null ),
        this._dot = t,
        e ? this.numParticles = e : this.numParticles = Math.round(relax.math.lerp(Math.random(), 5, 10)),
        this.createSystem()
    }
    return t.prototype._system = null ,
    t.prototype._dot = null ,
    t.prototype.numParticles = 0,
    t.prototype.particleArea = 1e3,
    t.prototype._texture = null ,
    t.prototype.createSystem = function() {
        var t, e, i, r, n, o, a, s, l, h, c, u;
        for (this._system && this._dot.remove(this._system),
        this.particles = [],
        c = new THREE.Geometry,
        o = new THREE.ParticleBasicMaterial({
            color: this._dot.getColor(),
            transparent: !0,
            size: 5
        }),
        i = r = 0,
        u = this.numParticles; u >= r; i = r += 1)
            a = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)),
            s = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)),
            l = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)),
            h = new THREE.Vector3(a,s,l),
            e = new THREE.Vector3(0,1,0),
            t = 2 * Math.random() * Math.PI,
            n = (new THREE.Matrix4).makeRotationAxis(e, t),
            h.applyMatrix4(n),
            c.vertices.push(h);
        return this._system = new THREE.ParticleSystem(c,o),
        this._dot.add(this._system)
    }
    ,
    t.prototype.updateColorTo = function(t) {
        return this._system.material.color = t
    }
    ,
    t.prototype.update = function() {}
    ,
    t
}
();
var WorldDot, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
WorldDot = function(t) {
    function e(t) {
        e.__super__.constructor.call(this, this.geometry, this.material),
        this._index = t.index,
        this._scene = t.scene,
        this._camera = t.camera,
        this._projector = t.projector,
        this.color = t.color,
        this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01)),
        _.extend(this, Backbone.Events),
        this.setGeometry(),
        this.material = new THREE.MeshBasicMaterial({
            color: "#ffffff",
            wireframe: !0
        }),
        this.lineMaterial = new THREE.LineBasicMaterial({
            color: "#ffffff",
            linewidth: 1
        }),
        this._targetVector = new THREE.Vector3(0,0,1e3),
        this.scale.set(.001, .001, .001),
        this.particles = new DotParticles(this)
    }
    return extend(e, t),
    e.prototype.geometry = null ,
    e.prototype.material = null ,
    e.prototype.lineMaterial = null ,
    e.prototype.line = null ,
    e.prototype.lineGeometry = null ,
    e.prototype.nextMesh = null ,
    e.prototype.color = null ,
    e.prototype._active = !1,
    e.prototype._scene = null ,
    e.prototype._camera = null ,
    e.prototype._projector = null ,
    e.prototype._index = -1,
    e.prototype._targetVector = null ,
    e.prototype.particles = null ,
    e.prototype._rotationSpeedVector = null ,
    e.prototype._step = 0,
    e.INITIAL_SCREEN_POS = [{
        x: .140625,
        y: .74025974,
        z: -1e3,
        color: "#00ff00"
    }, {
        x: .234375,
        y: .68359375,
        z: -1e3,
        color: "#ff0000"
    }, {
        x: .34453125,
        y: .6953125,
        z: -1e3,
        color: "#ff00ff"
    }, {
        x: .44609375,
        y: .575520833,
        z: -1e3,
        color: "#00ffff"
    }, {
        x: .571875,
        y: .450520833,
        z: -1e3,
        color: "#0000ff"
    }, {
        x: .60703125,
        y: .216145833,
        z: -1e3,
        color: "#00ff00"
    }, {
        x: .75625,
        y: .227864583,
        z: -1e3,
        color: "#ff0000"
    }, {
        x: .88125,
        y: .109375,
        z: -1e3,
        color: "#ff00ff"
    }],
    e.prototype.setGeometry = function(t) {
        return null  == t && (t = null ),
        t || (t = Math.ceil(relax.math.lerp(Math.random(), 4, 8))),
        this.geometry = new THREE.SphereGeometry(t,5,5)
    }
    ,
    e.prototype.connectMesh = function(t) {
        return this.nextMesh = t
    }
    ,
    e.prototype.toXYCoords = function(t) {
        var e;
        return e = this._projector.projectVector(t.clone(), this._camera),
        e.x = (e.x + 1) / 2 * window.innerWidth,
        e.y = -(e.y - 1) / 2 * window.innerHeight,
        e
    }
    ,
    e.prototype.updateColor = function(t) {
        return this.color = t,
        this.updateMaterial()
    }
    ,
    e.prototype.show = function(t) {
        return null  == t && (t = 0),
        TweenLite.to(this.scale, .2, {
            x: 1,
            y: 1,
            z: 1,
            delay: .1 * t,
            ease: "easeInOutCubic",
            onComplete: function(t) {
                return function() {
                    return t.trigger("animated-in", t)
                }
            }
            (this)
        })
    }
    ,
    e.prototype.resize = function(t, e) {
        return this.updateTarget(this._step, {
            width: t,
            height: e
        }),
        this.line || (this.position.x = this._targetVector.x,
        this.position.y = this._targetVector.y,
        this.position.z = this._targetVector.z,
        this.setupLine()),
        this.render()
    }
    ,
    e.prototype.active = function(t) {
        return this._active = t,
        this._active ? (this._targetVector.x = 0,
        this._targetVector.y = this._camera.position.y,
        this._targetVector.z = -20) : this.updateTarget(0),
        this.particles.createSystem(),
        this.updateMaterial()
    }
    ,
    e.prototype.getColor = function() {
        return this._active ? this.color : 16777215
    }
    ,
    e.prototype.updateMaterial = function() {
        return this.material = new THREE.MeshBasicMaterial({
            color: this.getColor(),
            wireframe: !0
        })
    }
    ,
    e.prototype.updateTarget = function(t, i) {
        var r, n, o, a, s, l;
        return i && (this.ww = i.width,
        this.hh = i.height),
        n = this.ww * -.5,
        r = .5 * this.hh,
        this._step = t,
        0 === t && (this._index < e.INITIAL_SCREEN_POS.length ? (a = e.INITIAL_SCREEN_POS[this._index].x,
        s = e.INITIAL_SCREEN_POS[this._index].y,
        l = e.INITIAL_SCREEN_POS[this._index].z) : (a = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].x,
        s = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].y,
        l = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].z),
        this._targetVector.x = n + a * this.ww,
        this._targetVector.y = r + -1 * s * this.hh,
        this._targetVector.z = l,
        this._index >= e.INITIAL_SCREEN_POS.length) ? (o = this._index - 7,
        this._targetVector.x += 150 * o,
        this._targetVector.y += relax.math.lerp(Math.random(), -20, 20),
        this._targetVector.z += 50 * o) : void 0
    }
    ,
    e.prototype.updateToIndex = function(t) {
        var e, i;
        return log("align to right side of the browser"),
        this.ww && this.hh ? (i = this.ww * -.5,
        e = .5 * this.hh,
        this._targetVector.x = i + .9 * this.ww,
        this._targetVector.y = e + -0.5 * this.hh,
        this._targetVector.z = this._targetVector.z) : void 0
    }
    ,
    e.prototype.setupLine = function() {
        var t;
        return this.nextMesh ? (t = this.nextMesh.position,
        this.lineGeometry = new THREE.Geometry,
        this._bla = Math.floor(Math.random() * this.geometry.vertices.length),
        this._blabla = Math.floor(Math.random() * this.nextMesh.geometry.vertices.length),
        this.lineGeometry.vertices.push(this.position.clone()),
        this.lineGeometry.vertices.push(new THREE.Vector3(t.x,t.y,t.z)),
        this.line = new THREE.Line(this.lineGeometry,this.lineMaterial),
        this._scene.add(this.line)) : void 0
    }
    ,
    e.prototype._bla = null ,
    e.prototype._blabla = null ,
    e.prototype.render = function() {
        var t, e, i, r, n, o;
        return r = this.position.x + .06 * (this._targetVector.x - this.position.x),
        n = this.position.y + .06 * (this._targetVector.y - this.position.y),
        o = this.position.z + .06 * (this._targetVector.z - this.position.z),
        this.position.x = r,
        this.position.y = n,
        this.position.z = o,
        this.rotation.x += this._rotationSpeedVector.x,
        this.rotation.y += this._rotationSpeedVector.y,
        this.rotation.z += this._rotationSpeedVector.z,
        this.lineGeometry && (e = this.geometry.vertices[this._bla].clone(),
        i = this.nextMesh.geometry.vertices[this._blabla].clone(),
        this.updateMatrixWorld(),
        e = this.localToWorld(e),
        i = this.nextMesh.localToWorld(i),
        this.lineGeometry.vertices[0].x = e.x,
        this.lineGeometry.vertices[0].y = e.y,
        this.lineGeometry.vertices[0].z = e.z,
        this.lineGeometry.vertices[1].x = relax.math.lerp(this.scale.x, this.position.x, i.x),
        this.lineGeometry.vertices[1].y = relax.math.lerp(this.scale.y, this.position.y, i.y),
        this.lineGeometry.vertices[1].z = relax.math.lerp(this.scale.z, this.position.z, i.z),
        this.line.geometry.verticesNeedUpdate = !0),
        this._text ? (t = this.toXYCoords(this.position),
        this._text.css({
            left: t.x,
            top: t.y,
            opacity: 1 - this._index / 14
        })) : void 0
    }
    ,
    e
}
(THREE.Mesh);
var CaseSphere, caseSphereCalculatedVectors, caseSpherePositions, i, j, k, percent, pointsInBetween, ref, ref1, sphereIndex, v1, v2, x, xvector, y, yvector, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
for (caseSpherePositions = [{
    x: .140625,
    y: .74025974,
    z: -1e3
}, {
    x: .234375,
    y: .68359375,
    z: -1e3
}, {
    x: .34453125,
    y: .6953125,
    z: -1e3
}, {
    x: .44609375,
    y: .575520833,
    z: -1e3
}, {
    x: .571875,
    y: .450520833,
    z: -1e3
}, {
    x: .60703125,
    y: .216145833,
    z: -1e3
}, {
    x: .75625,
    y: .227864583,
    z: -1e3
}, {
    x: .88125,
    y: .109375,
    z: -1e3
}],
caseSphereCalculatedVectors = [],
sphereIndex = j = 0,
ref = window.caseSpherePositions.length - 2; ref >= j; sphereIndex = j += 1)
    for (v1 = window.caseSpherePositions[sphereIndex],
    v2 = window.caseSpherePositions[sphereIndex + 1],
    pointsInBetween = 10,
    x = v2.x - v1.x,
    y = v2.y - v1.y,
    i = k = 0,
    ref1 = pointsInBetween; ref1 >= k; i = k += 1)
        percent = i / pointsInBetween,
        xvector = v1.x + x * percent,
        yvector = v1.y + y * percent,
        isNaN(xvector) || isNaN(yvector) || window.caseSphereCalculatedVectors.push({
            x: xvector,
            y: yvector
        });
CaseSphere = function(t) {
    function e(t) {
        var i;
        this._index = t.index,
        this._scene = t.scene,
        this._camera = t.camera,
        this._projector = t.projector,
        this._color = t.color,
        this._pageURL = t.url,
        _.extend(this, Backbone.Events),
        this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01)),
        this.material = new THREE.MeshBasicMaterial({
            wireframe: !0,
            transparent: !0
        }),
        this.geometry = new THREE.SphereGeometry(80,5,5),
        e.__super__.constructor.call(this, this.geometry, this.material),
        this._targetVector = new THREE.Vector3(0,0,-1e4),
        this._animatingVector = this._targetVector.clone(),
        i = Math.ceil(relax.math.lerp(Math.random(), 5, 15)),
        this.particles = new DotParticles(this,i),
        this.buildLines(),
        this._numCases = t.numCases,
        this.scale.set(.001, .001, .001),
        window.application.pages.on("updated", this.onPageChange, this)
    }
    return extend(e, t),
    e.prototype._index = null ,
    e.prototype._scene = null ,
    e.prototype._camera = null ,
    e.prototype._projector = null ,
    e.prototype._rotationSpeedVector = null ,
    e.prototype._targetVector = null ,
    e.prototype._animatingVector = null ,
    e.prototype.material = null ,
    e.prototype._color = "#ffffff",
    e.prototype.particles = null ,
    e.prototype._lines = null ,
    e.prototype._nextMesh = null ,
    e.prototype._line = null ,
    e.prototype._lines = null ,
    e.prototype._pageURL = "",
    e.prototype._active = !1,
    e.prototype._hasAnimatedIn = !1,
    e.prototype._allowScrollManipulation = !0,
    e.prototype._hoverTimer = 0,
    e.prototype._numCases = null ,
    e.SPEED_QUICK = .2,
    e.SPEED_NORMAL = .09,
    e.SPEED_SLOW = .02,
    e.SPEED_ULTRA_SLOW = .005,
    e.prototype._speed = .09,
    e.prototype.updateVisible = function(t) {
        var e;
        return e = Math.max(.001, Math.min(t / (this._index / this._numCases), 1)),
        this.scale.x !== e ? (this.scale.x = e,
        this.scale.y = e,
        this.scale.z = e) : void 0
    }
    ,
    e.prototype.buildLines = function() {
        var t, e, r, n, o;
        for (this._lines = [],
        r = !0,
        t = this.particles._system.geometry.vertices.length - 1,
        o = [],
        i = e = 0,
        n = t; n > e; i = e += 1)
            v1 = i + 1 > this.particles._system.geometry.length ? 0 : this.particles._system.geometry.vertices[i + 1],
            v2 = this.particles._system.geometry.vertices[i],
            this._lines.push(new SphereLine(v1,v2,{
                index: i,
                numLines: t,
                lineAlpha: .6,
                color: this._color,
                blinkInterval: 50
            })),
            o.push(this.add(this._lines[this._lines.length - 1]));
        return o
    }
    ,
    e.prototype.onPageChange = function(t) {
        var e, i, r;
        return this._allowScrollManipulation = "root" === t.get("type"),
        i = t.get("type"),
        r = t.get("url"),
        e = -1 !== this._pageURL.indexOf(r),
        e && (e = "" !== r),
        e && (e = r.length > 2),
        this.setActive(e, "case" === i)
    }
    ,
    e.prototype.getColor = function() {
        return this.material.color
    }
    ,
    e.prototype.electricute = function() {
        var t;
        if (!this._active)
            return this._speed = e.SPEED_NORMAL,
            this.particles._system.visible = !0,
            t = this._hoverTimer,
            this._hoverTimer = setTimeout(function(t) {
                return function() {
                    return t.startBlink(!0)
                }
            }
            (this), 500),
            this._animatingVector.x = 0,
            this._animatingVector.y = 0,
            this._animatingVector.z = -1e3
    }
    ,
    e.prototype.unelectricute = function() {
        return this._active ? void 0 : (this._speed = e.SPEED_SLOW,
        this.particles._system.visible = !1,
        clearTimeout(this._hoverTimer),
        this.stopBlink(),
        this._animatingVector.x = this._targetVector.x,
        this._animatingVector.y = this._targetVector.y,
        this._animatingVector.z = this._targetVector.z)
    }
    ,
    e.prototype.startBlink = function(t) {
        var e;
        return t = !0,
        (e = function(i) {
            return function() {
                var r;
                return clearTimeout(i._hoverTimer),
                r = t ? 0 : relax.math.lerp(Math.random(), 1e3, 5e3),
                i._hoverTimer = setTimeout(function() {
                    var r, n, o, a, s, l, h;
                    if (i._lines)
                        for (l = i._lines,
                        a = 0,
                        r = l.length; r > a; a++)
                            o = l[a],
                            o.unblink();
                    if (i._lines)
                        for (h = i._lines,
                        s = 0,
                        n = h.length; n > s; s++)
                            o = h[s],
                            o.blink();
                    return t ? void 0 : e(t)
                }
                , r)
            }
        }
        (this))()
    }
    ,
    e.prototype.stopBlink = function() {
        var t, e, i, r, n;
        if (clearTimeout(this._hoverTimer),
        this._lines) {
            for (r = this._lines,
            n = [],
            i = 0,
            t = r.length; t > i; i++)
                e = r[i],
                n.push(e.unblink());
            return n
        }
    }
    ,
    e.prototype.setActive = function(t, i) {
        var r, n;
        return null  == i && (i = !1),
        this._active = t,
        this._active ? (this._animatingVector.x = 0,
        this._animatingVector.y = 0,
        this._animatingVector.z = -25,
        this.startBlink(!1),
        this._speed = e.SPEED_NORMAL,
        this.particles._system.visible = !0,
        this.visible = !0,
        null  != (n = this._line) && (n.visible = !0),
        TweenLite.to(this.material, 1, {
            opacity: .35
        }),
        this._line && TweenLite.to(this._line.material, 1, {
            opacity: .35
        })) : (this._animatingVector.x = this._targetVector.x,
        this._animatingVector.y = this._targetVector.y,
        this._animatingVector.z = this._targetVector.z,
        TweenLite.to(this.material, 1, {
            opacity: i ? .8 : 1
        }),
        this._line && TweenLite.to(this._line.material, 1, {
            opacity: i ? .5 : 1
        }),
        this.stopBlink(),
        this.particles._system.visible = !1),
        r = this._active ? 3e-4 : .01,
        this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -1 * r, r),relax.math.lerp(Math.random(), -1 * r, r),relax.math.lerp(Math.random(), -1 * r, r))
    }
    ,
    e.prototype.connectMesh = function(t) {
        return this._nextMesh = t,
        this.setupLine()
    }
    ,
    e.prototype.setupLine = function() {
        var t;
        return t = this._nextMesh.position,
        this.lineGeometry = new THREE.Geometry,
        this._bla = Math.floor(Math.random() * this.geometry.vertices.length),
        this._blabla = Math.floor(Math.random() * this._nextMesh.geometry.vertices.length),
        this.lineGeometry.vertices.push(this.position.clone()),
        this.lineGeometry.vertices.push(new THREE.Vector3(t.x,t.y,t.z)),
        this.lineMaterial = new THREE.LineBasicMaterial({
            color: "#ffffff",
            transparent: !0,
            linewidth: 1
        }),
        this._line = new THREE.Line(this.lineGeometry,this.lineMaterial),
        this._scene.add(this._line)
    }
    ,
    e.prototype.resize = function(t, e) {
        var i, r, n, o, a;
        return r = .5 * t,
        i = .5 * e,
        percent = this._index / this._numCases,
        a = Math.floor(percent * (window.caseSphereCalculatedVectors.length - 1)),
        o = window.caseSphereCalculatedVectors[a],
        o && (this._targetVector.x = -1 * r + o.x * t,
        this._targetVector.y = i + o.y * e * -1,
        this._active && (this._hasAnimatedIn || this._active) || (this._animatingVector.x = this._targetVector.x,
        this._animatingVector.y = this._targetVector.y,
        this._animatingVector.z = this._targetVector.z,
        this._hasAnimatedIn || (this.position.x = this._animatingVector.x,
        this.position.y = this._animatingVector.y,
        this.position.z = this._animatingVector.z))),
        n = window.caseSpherePositions.length * (this._index / this._numCases),
        this._nextMesh && !this._line && this.setupLine(),
        this.render()
    }
    ,
    e.prototype.render = function() {
        var t;
        return x = this.position.x + (this._animatingVector.x - this.position.x) * this._speed,
        y = this.position.y + (this._animatingVector.y - this.position.y) * this._speed,
        t = this.position.z + (this._animatingVector.z - this.position.z) * this._speed,
        this.position.x = x,
        this.position.y = y,
        this.position.z = t,
        this.rotation.x += this._rotationSpeedVector.x,
        this.rotation.y += this._rotationSpeedVector.y,
        this.rotation.z += this._rotationSpeedVector.z,
        this.lineGeometry ? this.renderLine() : void 0
    }
    ,
    e.prototype.renderLine = function() {
        var t, e;
        return t = this.localToWorld(this.geometry.vertices[this._bla].clone()),
        e = this._nextMesh.localToWorld(this._nextMesh.geometry.vertices[this._blabla].clone()),
        this.lineGeometry.vertices[0].x = t.x,
        this.lineGeometry.vertices[0].y = t.y,
        this.lineGeometry.vertices[0].z = t.z,
        this.lineGeometry.vertices[1].x = relax.math.lerp(this.scale.x, this.position.x, e.x),
        this.lineGeometry.vertices[1].y = relax.math.lerp(this.scale.y, this.position.y, e.y),
        this.lineGeometry.vertices[1].z = relax.math.lerp(this.scale.z, this.position.z, e.z),
        this._line.geometry.verticesNeedUpdate = !0
    }
    ,
    e
}
(THREE.Mesh);
var ImageBlast, RwatggSphere, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
RwatggSphere = function(t) {
    function e(t) {
        this._scene = t.scene,
        this._camera = t.camera,
        this._projector = t.projector,
        _.extend(this, Backbone.Events),
        this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01),relax.math.lerp(Math.random(), -.01, .01)),
        this.material = new THREE.MeshBasicMaterial({
            wireframe: !0
        }),
        this.geometry = new THREE.SphereGeometry(80,5,5),
        e.__super__.constructor.call(this, this.geometry, this.material),
        this._targetVector = new THREE.Vector3(0,0,this._currentZ),
        relax.browser.isMobile() || relax.browser.isTablet() ? this.position.z = this._targetVector.z = this._currentZ = -100 : this.position.z = this._currentZ,
        window.application.pages.on("updated", this.onPageChange, this),
        this.particles = new DotParticles(this,3 * this.geometry.vertices.length),
        this.buildLines(),
        Modernizr.touch || (this._faceBlast = new ImageBlast({
            geometry: this.geometry.clone(),
            scene: this._scene,
            color: "#ffffff"
        }))
    }
    return extend(e, t),
    e.prototype._scene = null ,
    e.prototype._camera = null ,
    e.prototype._projector = null ,
    e.prototype._rotationSpeedVector = null ,
    e.prototype._targetVector = null ,
    e.prototype._currentZ = 100,
    e.prototype._scrollZ = 0,
    e.prototype.material = null ,
    e.prototype._color = "#ffffff",
    e.prototype.particles = null ,
    e.prototype._eletricuteTimer = 0,
    e.prototype._lines = null ,
    e.prototype._visible = !1,
    e.prototype.updateVisible = function(t) {
        return t && !this._visible ? (this._visible = !0,
        this._targetVector.z = this._currentZ,
        this.hiFromMenuItem(16777215, !0)) : void 0
    }
    ,
    e.prototype.setScroll = function(t) {
        return this._scrollZ = 4 * t
    }
    ,
    e.prototype.buildLines = function() {
        var t, e, i, r, n, o, a, s;
        for (this._lines = [],
        r = !0,
        i = this.geometry.vertices.length,
        o = [],
        t = e = 0,
        n = i; n > e; t = e += 1)
            a = t + 1 > this.particles._system.geometry.length ? 0 : this.particles._system.geometry.vertices[t + 1],
            s = this.particles._system.geometry.vertices[t],
            this._lines.push(new SphereLine(a,s,{
                index: t,
                numLines: i
            })),
            o.push(this.add(this._lines[this._lines.length - 1]));
        return o
    }
    ,
    e.prototype.onPageChange = function(t) {
        var e, i, r, n;
        return r = t.get("type"),
        n = t.get("url"),
        "root" === r || "menuFilter" === r || "menuFilterType" === r ? (i = relax.browser.isMobile() ? -400 : -300,
        e = this._currentZ !== i,
        this._currentZ = i,
        e && (this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.005, .005),relax.math.lerp(Math.random(), -.005, .005),relax.math.lerp(Math.random(), -.005, .005)))) : t.isTextType() ? (this._currentZ = "contact" === t.get("url") ? -350 : -150,
        "about" === t.get("type") ? this._rotationSpeedVector = new THREE.Vector3(Math.random() > .5 ? -1e-4 : 1e-4,Math.random() > .5 ? -1e-4 : 1e-4,Math.random() > .5 ? -1e-4 : 1e-4) : this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.005, .005),relax.math.lerp(Math.random(), -.005, .005),relax.math.lerp(Math.random(), -.005, .005))) : (this._currentZ = 500,
        this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.001, .001),relax.math.lerp(Math.random(), -.001, .001),relax.math.lerp(Math.random(), -.001, .001))),
        this._color = new THREE.Color(window.application.colors.get("secondary")),
        this._visible && (this._targetVector.z = this._currentZ),
        this.material.color = this._color,
        this.material.opacity = t.isTextType() ? .3 : 1,
        this.particles.updateColorTo(this._color)
    }
    ,
    e.prototype.getColor = function() {
        return this.material.color
    }
    ,
    e.prototype._hoverindex = 0,
    e.prototype.hiFromMenuItem = function(t, e, i) {
        return null  == e && (e = !1),
        null  == i && (i = null ),
        this._faceBlast ? (this._eletricuteTimer && clearTimeout(this._eletricuteTimer),
        this._eletricuteTimer = setTimeout(function(e) {
            return function() {
                var i;
                return "number" == typeof t ? e._faceBlast.react(!0, !1, t) : e._faceBlast.react(!0, !1, null , t),
                null  != (i = window.application.sounds) ? i.play("hover", 1 + e._hoverindex++ % 2) : void 0
            }
        }
        (this), e ? 0 : 150)) : void 0
    }
    ,
    e.prototype.unhiFromMenuItem = function() {
        return this._eletricuteTimer ? clearTimeout(this._eletricuteTimer) : void 0
    }
    ,
    e.prototype.electricute = function() {
        var t, e, i, r, n;
        for (r = this._lines,
        n = [],
        t = 0,
        e = r.length; e > t; t++)
            i = r[t],
            n.push(i.blink());
        return n
    }
    ,
    e.prototype.unelectricute = function() {
        var t, e, i, r, n;
        for (r = this._lines,
        n = [],
        t = 0,
        e = r.length; e > t; t++)
            i = r[t],
            n.push(i.unblink());
        return n
    }
    ,
    e.prototype.resize = function(t, e) {
        var i, r;
        return r = t * -.5,
        i = .5 * e,
        this._targetVector.x = r + .5 * t,
        this._targetVector.y = i + -1 * e * .5,
        this.render()
    }
    ,
    e.prototype.render = function() {
        var t, e, i, r;
        return e = this.position.x + .06 * (this._targetVector.x - this.position.x),
        i = this.position.y + .06 * (this._targetVector.y - this.position.y),
        r = this.position.z + .06 * (this._targetVector.z - this.position.z),
        r += this._scrollZ,
        this.position.x = e,
        this.position.y = i,
        this.position.z = r,
        this.rotation.x += this._rotationSpeedVector.x,
        this.rotation.y += this._rotationSpeedVector.y,
        this.rotation.z += this._rotationSpeedVector.z,
        null  != (t = this._faceBlast) ? t.render(this.position, this.rotation) : void 0
    }
    ,
    e
}
(THREE.Mesh),
ImageBlast = function() {
    function t(t) {
        var e, i, r, n, o;
        for (this.mesh = new THREE.Mesh,
        t.color || (t.color = "#ffffff"),
        this._geom = t.geometry,
        this._scene = t.scene,
        this._numFaces = t.geometry.faces.length,
        e = -1 === relax.browser.getInternetExplorerVersion() ? THREE.DoubleSide : THREE.FrontSide,
        this._materials = [new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: 0
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .85
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .95
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .75
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .8
        })],
        this._geom.buffersNeedUpdate = !0,
        this._geom.uvsNeedUpdate = !0,
        this._faceMaterial = new THREE.MeshFaceMaterial(this._materials),
        this._loaded = !0,
        this._materialIndexs = [],
        i = r = 0,
        o = this._numFaces; o > r; i = r += 1)
            n = 1 + i % (this._materials.length - 2),
            this._materialIndexs.push(n)
    }
    return t.prototype._materialIndexs = null ,
    t.prototype._randomIndexs = null ,
    t.prototype._runningIndex = -1,
    t.prototype._faceMaterial = null ,
    t.prototype._materials = null ,
    t.prototype._numFaces = -1,
    t.prototype._reacting = !1,
    t.prototype._loaded = !1,
    t.prototype._scene = null ,
    t.prototype._geom = null ,
    t.prototype.mesh = null ,
    t.prototype.stopLoop = function() {
        var t;
        return TweenLite.killTweensOf(this),
        this._reactTimer && clearTimeout(this._reactTimer),
        this._reactTimer = null ,
        null  != (t = this.mesh) && (t.visible = !1),
        this._reacting = !1
    }
    ,
    t.prototype.react = function(t, e, i, r) {
        var n, o, a, s, l, h, c, u;
        if (null  == t && (t = !1),
        null  == e && (e = !1),
        null  == i && (i = null ),
        null  == r && (r = null ),
        this.stopLoop(),
        null  != (h = this.mesh) && (h.visible = !0),
        null  !== r)
            for (c = this._materials,
            o = 0,
            s = c.length; s > o; o++)
                l = c[o],
                l.map.image = r,
                l.map.needsUpdate = !0,
                l.needsUpdate = !0;
        if (this._reacting = !0,
        this.percent = 0,
        this._runningIndex = -1,
        t) {
            for (this._randomIndexs = [],
            n = a = 0,
            u = this._numFaces; u > a; n = a += 1)
                this._randomIndexs.push(n);
            this._randomIndexs.sort(function() {
                return .5 - Math.random()
            }
            )
        }
        return TweenLite.to(this, .6, {
            percent: 2,
            ease: "linear",
            onUpdate: function(t) {
                return function() {
                    return t.update()
                }
            }
            (this),
            onComplete: function(i) {
                return function() {
                    var r;
                    return e ? (i._reactTimer && clearTimeout(i._reactTimer),
                    i._reacting ? i._reactTimer = setTimeout(function() {
                        return i.react(t, e)
                    }
                    , relax.math.lerp(Math.random(), 4e3, 8e3)) : void 0) : null  != (r = i.mesh) ? r.visible = !1 : void 0
                }
            }
            (this)
        })
    }
    ,
    t.prototype.update = function() {
        var t, e, i, r, n, o;
        if (n = this.percent,
        n = n > 1 ? 2 - n : n,
        r = Math.round(this._numFaces * n),
        r !== this._runningIndex) {
            for (this._runningIndex = r,
            this.mesh && this._scene.remove(this.mesh),
            this.mesh = new THREE.Mesh(this._geom.clone(),this._faceMaterial),
            this._scene.add(this.mesh),
            e = i = 0,
            o = this._numFaces; o > i; e = i += 1)
                t = this._randomIndexs ? this.mesh.geometry.faces[this._randomIndexs[e]] : this.mesh.geometry.faces[e],
                e < this._runningIndex && this.percent <= 1 || e > this._numFaces - this._runningIndex && this.percent > 1 ? t.materialIndex = this._materialIndexs[e] : t.materialIndex = 0;
            return this.mesh.geometry.colorsNeedUpdate = !0
        }
    }
    ,
    t.prototype.render = function(t, e) {
        return this._loaded ? (this.mesh.position.x = t.x,
        this.mesh.position.y = t.y,
        this.mesh.position.z = t.z,
        this.mesh.rotation.x = e.x,
        this.mesh.rotation.y = e.y,
        this.mesh.rotation.z = e.z) : void 0
    }
    ,
    t
}
();
var SphereLine, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SphereLine = function(t) {
    function e(t, i, r) {
        this._index = r.index,
        this._numLines = r.numLines,
        this._alpha = r.lineAlpha ? r.lineAlpha : .4,
        this._blinkInterval = r.blinkInterval ? r.blinkInterval : 20,
        this.geometry = new THREE.Geometry,
        this.geometry.vertices.push(t),
        this.geometry.vertices.push(i),
        this.material = new THREE.LineBasicMaterial({
            color: r.color ? r.color : "#ffffff",
            linewidth: 1,
            transparent: !0
        }),
        e.__super__.constructor.call(this, this.geometry, this.material),
        this.visible = !1
    }
    return extend(e, t),
    e.prototype._timer = null ,
    e.prototype._index = null ,
    e.prototype._numLines = -1,
    e.prototype._timer = 0,
    e.prototype._alpha = 0,
    e.prototype._blinkInterval = 0,
    e.prototype.blink = function() {
        return clearTimeout(this._timer),
        this._timer = setTimeout(function(t) {
            return function() {
                return t.visible = !0,
                t._timer = setTimeout(function() {
                    return t.material.opacity = t._alpha,
                    t.material.needsUpdate = !0
                }
                , 100)
            }
        }
        (this), this._index * this._blinkInterval)
    }
    ,
    e.prototype.unblink = function() {
        return clearTimeout(this._timer),
        this.material.opacity = 0,
        this.visible = !1
    }
    ,
    e
}
(THREE.Line);
var IntroView, _uhwe, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
IntroView = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype._mobileRestrictedPercent = 0,
    e.prototype._currentLogoStep = 0,
    e.prototype._followScroll = !1,
    e.prototype._logoHeight = 0,
    e.prototype._logoWidth = 0,
    e.prototype._swiper = null ,
    e.prototype._logo = null ,
    e.prototype._text = null ,
    e.prototype._scroll = null ,
    e.prototype.progress = 0,
    e.INTRO_PERCENTAGE_OFSCROLL = .4,
    e.prototype.initialize = function() {
        return window.application.pages.on("updated", this.onPageUpdated, this),
        this._logo = this.$el.find(".logo"),
        this._text = this.$el.find(".intro-text"),
        this._scroll = this.el.getElementsByClassName("intro-scroll")[0],
        this._logoWidth = relax.browser.isMobile() ? 150 : 280,
        this._logoHeight = Math.round(.74566474 * this._logoWidth),
        this.setPercent(1e-4),
        setTimeout(function(t) {
            return function() {
                return t.setPercent(1e-4)
            }
        }
        (this), 0)
    }
    ,
    e.prototype.runTheShow = function() {
        var t, e, i, r;
        return t = !0,
        r = t ? 1 : .1,
        e = t ? .5 : 0,
        i = t ? 1.5 : 0,
        TweenLite.to(this, r, {
            progress: .318181818,
            delay: e,
            onUpdate: function(t) {
                return function() {
                    return t.setPercent()
                }
            }
            (this),
            onComplete: function(t) {
                return function() {
                    return TweenLite.to(t, r, {
                        easing: "easeOutExpo",
                        progress: 1,
                        delay: i,
                        onUpdate: function() {
                            return t.setPercent()
                        },
                        onComplete: function() {
                            return t.onRunningTheShow()
                        }
                    })
                }
            }
            (this)
        })
    }
    ,
    e.prototype.onRunningTheShow = function() {
        return this.trigger("done"),
        this.$el.addClass("done"),
        this.$el.find(".logo-step-1_5").click(function(t) {
            return function() {
                return "/" === window.application.router._currentFrag ? $(window).scrollTop(0) : window.application.router.navigate("/")
            }
        }
        (this)),
        Modernizr.touch ? (this._swiper = new relax.tools.DragAndSwipe($(window)),
        this._swiper.addDrag(relax.dom.bind(this, this.onDrag)),
        this.showHideRWATGGText(!0)) : window.application.stageModel.bind(StageModel.SCROLL, this.onScroll, this)
    }
    ,
    e.prototype.onDrag = function() {
        return log("??"),
        this.showHideRWATGGText(window.application.siteMenu._y > -10)
    }
    ,
    e.prototype.onScroll = function(t) {
        return log("???", window.application.scrollHandler.getPercent()),
        this.showHideRWATGGText(window.application.scrollHandler.getPercent() < .05)
    }
    ,
    e.prototype.onPageUpdated = function(t) {
        var e;
        return e = "root" === t.get("type") || "" === t.get("type"),
        e || (this.showHideRWATGGText(!1),
        Modernizr.touch && (this._mobileRestrictedPercent = 1,
        this.setPercent(this._mobileRestrictedPercent))),
        this._followScroll = e,
        clearTimeout(this._showTimer),
        this._showTimer = setTimeout(function(t) {
            return function() {
                return e && Modernizr.touch ? t.onDrag() : void 0
            }
        }
        (this), 500)
    }
    ,
    e.prototype._showTimer = 0,
    e.prototype._textShowTimer = 0,
    e.prototype._quoteCount = -1,
    e.prototype.showHideRWATGGText = function(t) {
        var e;
        return clearTimeout(this._textShowTimer),
        t && this._followScroll && !this._text.hasClass("show") ? (this._quoteCount >= 0 && (e = _uhwe[(new Date).getDay()],
        this._text.html(e[this._quoteCount % e.length])),
        this._quoteCount++,
        this._text.removeClass("hide-completly"),
        this._scroll.classList.remove("hide-completly"),
        setTimeout(function(t) {
            return function() {
                return t._text.addClass("show"),
                t._scroll.classList.add("show")
            }
        }
        (this), 0)) : t && this._followScroll || !this._text.hasClass("show") ? void 0 : (this._text.removeClass("hide-completly"),
        this._scroll.classList.remove("hide-completly"),
        this._text.removeClass("show"),
        this._scroll.classList.remove("show"),
        this._textShowTimer = setTimeout(function(t) {
            return function() {
                return t._text.addClass("hide-completly"),
                t._scroll.classList.add("hide-completly")
            }
        }
        (this), 1e3))
    }
    ,
    e.prototype.setPercent = function() {
        var t, e, i, r, n, o, a, s, l, h, c, u;
        for (clearTimeout(this._removeTextTimer),
        this.progress > .85 && this.progress < 1 && !this._text.hasClass("show") || (this.progress < .85 && this._text.hasClass("show") ? (this._text.removeClass("show"),
        this._scroll.classList.remove("show")) : 1 === this.progress && this._text.hasClass("show") && (this._removeTextTimer = setTimeout(function(t) {
            return function() {
                return t._text.removeClass("show"),
                t._scroll.classList.remove("show")
            }
        }
        (this), 500))),
        o = 22,
        t = o * this.progress,
        this.$el.attr("class", ""),
        this._currentLogoStep = Math.round(o * this.progress),
        e = i = 0,
        a = this._currentLogoStep; a > i; e = i += 1)
            this.$el.addClass("step" + Math.max(e, 0));
        return l = .4,
        s = 1 - Math.max(0, this.progress - l) / (1 - l),
        n = relax.math.lerp(s, this._logoWidth, 2 * this._logoWidth),
        r = relax.math.lerp(s, this._logoHeight, 2 * this._logoHeight),
        u = 20 * this.progress,
        c = r - u + s * (window.application.stageModel.h - r),
        c = .5 * c - .5 * r,
        h = .5 * window.application.stageModel.w - .5 * n,
        this._logo.css({
            width: n,
            height: r,
            transform: "translateY(" + c + "px)"
        })
    }
    ,
    e
}
(Backbone.View),
_uhwe = [],
_uhwe[0] = [],
_uhwe[0][0] = "<p>The Sun Notorious throughout time and cultures as being a day of rest, the sun </p><p>shines brightly on our Sundays with clarity, vitality and </p><p>a sense of well being.</p>",
_uhwe[0][1] = "<p>This day is optimal for soaking up some social-warmth by </p><p>being with family, friends and neighbors. </p><p>It's also a perfect day to catch up on our rest and relaxation. </p>",
_uhwe[0][2] = "<p>The sun is all about radiance, </p><p>sharing, expressing, expanding, illumination and growth. </p><p>The sun is also about provision, as it insures the continuation of life as we know it.</p>",
_uhwe[0][3] = "<p>Therefore, the best tasks for Sunday include: </p><p>Rest, relaxing, having fun with loved ones, gardening, grocery shopping, cooking and </p><p>worship for the purpose of illumination.</p>",
_uhwe[1] = [],
_uhwe[1][0] = "<p>The Moon Monday is a moon day, and so </p><p>we are dealing with emotions, moods, intuition and </p><p>the shadowy side of life. </p>",
_uhwe[1][1] = "<p>Many people report Monday as the most challenging day of the week. </p><p>It's no wonder, as the moon carries with it </p><p>erratic and sometimes unpredictable energy.</p>",
_uhwe[1][2] = "<p>We can counteract fast fluctuations in lunar energy by </p><p>taking note of the phase of the moon every Monday. </p><p>This lets our logical mind know 'where we stand' in a metaphorical sense.</p>",
_uhwe[1][3] = "<p>Best tasks for Mondays: </p><p>Meditation, dream analysis, quiet time, personal indulgence, rest, relaxation, sleep.</p>",
_uhwe[2] = [],
_uhwe[2][0] = "<p>Mars is an aggressive planet. </p><p>In fact, its namesake in Greek myth was the god of war. </p>",
_uhwe[2][1] = "<p>Tuesday is a driving force in the workweek, and </p><p>will auger a sense of productivity, competition, effectiveness, determination and completion. </p>",
_uhwe[2][2] = "<p>Tuesday is the perfect day for finishing long overdue tasks. </p><p>Conversely, Tuesday is also a great day to start new projects. </p>",
_uhwe[2][3] = "<p>Best tasks for Tuesdays: </p><p>Building strategies at work and in career, acting on new ideas, starting new projects, </p><p> cleaning out clutter, exercising or catching up with friends.</p>",
_uhwe[3] = [],
_uhwe[3][0] = "<p>We love the synchronicity of Wednesday landing in the middle of </p><p>the week because it gives a pervasive sense of connectivity. </p>",
_uhwe[3][1] = "<p>In a way, Wednesday is the vital communications link to all other days </p><p>- it's like the network server of the week. </p>",
_uhwe[3][2] = "<p>Best tasks for Wednesdays: </p><p>Communication of course! </p><p>Catch up on emails, thank you notes, letters, phone calls, etc. </p>",
_uhwe[3][3] = "<p>Wednesday is a good day to sign contracts! </p><p>Mercury is also a beneficent energy for short travel, </p><p>so plan your day trips accordingly.</p>",
_uhwe[4] = [],
_uhwe[4][0] = "<p>Jupiter is the planet of enterprise and expansion. </p><p>It's also an extremely optimistic planetary energy that </p><p>can be felt all through the day on Thursdays when we tune into it.</p>",
_uhwe[4][1] = "<p>Best tasks for Thursdays include: </p><p>Socializing, networking, marketing. </p>",
_uhwe[4][2] = "<p>Working with financial tasks such as the stock market or even checkbook balancing will </p><p>lead to positive results in the long term when done on Thursdays </p><p>while ruminating in Jupiter energy.</p>",
_uhwe[5] = [],
_uhwe[5][0] = "<p>We all know Venus energy, and </p><p>when it comes to the symbolic meaning of days, Venus is </p><p>a highly appropriate vibe for Friday, the traditional end-of-the-workweek day.</p>",
_uhwe[5][1] = "<p>Friday is an all-around-feel-good day, replete with the energy of </p><p>friendliness and kindness. </p><p>Interestingly, Friday is also the most popular date night too.</p>",
_uhwe[5][2] = "<p>This is a great day for pleasure and appreciation, so trips to places that make you feel </p><p>indulged, luxurious or pampered are good too </p><p>(like a spa, salon, the movies, a jewelry store).</p>",
_uhwe[6] = [],
_uhwe[6][0] = "<p>Saturn can be a stern energy and a real taskmaster too. </p><p>This makes Saturday one of the most advantageous days of week because </p><p>opportunity for productivity and completing tasks is optimal. </p>",
_uhwe[6][1] = "<p>Unlike Thursday/Jupiter however, Saturn isn't as jovial </p><p>when working to get a job done. In fact, Saturdays are best put </p><p>to use when we thoroughly plan for prevention.</p>",
_uhwe[6][2] = "<p>Preparing for the week ahead on Saturday will align our Saturn energies and </p><p>bring about satisfactory results for each consecutive day in the week.</p>",
_uhwe[6][3] = "<p>Best tasks for Saturday: </p><p>Housework, preparation for upcoming events, academic tasks like studying and homework, </p><p>catching up on a backlog of work.</p>";
var HoverBomb;
HoverBomb = function() {
    function t(t, e) {
        null  == e && (e = !1),
        this._el = t,
        e ? (this._el.append('<div class="svg"></div>'),
        this._lineWidth = 2) : (this._el.append('<div class="background"></div><div class="svg"></div>'),
        this._bg = this._el.find(".background")[0],
        this._label = this._el.find(".label")[0])
    }
    return t.prototype._el = null ,
    t.prototype._bg = null ,
    t.prototype._label = null ,
    t.prototype._lineWidth = 1,
    t.prototype.over = function() {
        var t, e, i, r, n, o;
        for (this._el.find(".svg").html(""),
        n = this._el.width(),
        i = this._el.height(),
        t = SVG(this._el.find(".svg")[0]).size(n, i),
        o = 0,
        r = 0; n > o; )
            e = function(e) {
                return function(o) {
                    var a, s, l, h, c, u, p, d, f;
                    return f = relax.math.lerp(Math.random(), 0, n),
                    0 >= o ? (l = o,
                    h = relax.math.lerp(Math.random(), -10, i + 10),
                    c = o + f,
                    p = Math.random() > .5 ? -10 * Math.random() : i + 10 * Math.random()) : (l = o,
                    h = Math.random() > .5 ? -10 * Math.random() : i + 10 * Math.random(),
                    c = o + f,
                    p = h >= i ? -10 * Math.random() : i + 10 * Math.random()),
                    a = t.line(l, h, l, h).stroke({
                        width: e._lineWidth,
                        color: window.application.colors.get("secondary")
                    }),
                    s = {
                        p: 0
                    },
                    u = c - l,
                    d = p - h,
                    TweenMax.to(s, .2, {
                        p: 1,
                        delay: .06 * r++,
                        ease: "easeInCubic",
                        onUpdate: function() {
                            return a.plot(l, h, l + u * s.p, h + d * s.p)
                        },
                        onComplete: function() {
                            return s.p = 0,
                            TweenMax.to(s, .2, {
                                p: 1,
                                onUpdate: function() {
                                    return a.plot(l + u * s.p, h + d * s.p, c, p)
                                }
                            })
                        }
                    })
                }
            }
            (this),
            e(o),
            o += this._label ? relax.math.lerp(Math.random(), 0, .5 * n) : relax.math.lerp(Math.random(), 0, .25 * n);
        return this._label && (TweenMax.killTweensOf(this._label),
        TweenMax.to(this._label, .4, {
            opacity: 0,
            ease: "easeOutCubic"
        }),
        TweenMax.set(this._label, {
            delay: .2,
            transform: "translateX(-10px)"
        }),
        TweenMax.to(this._label, .2, {
            delay: .3,
            opacity: 1,
            color: window.application.colors.get("primary"),
            ease: "easeOutExpo",
            transform: "translateX(0px)"
        })),
        this._bg ? (TweenMax.killTweensOf(this._bg),
        TweenMax.to(this._bg, .2, {
            opacity: 1,
            background: window.application.colors.get("secondary"),
            delay: .3,
            ease: "easeOutCubic"
        })) : void 0
    }
    ,
    t.prototype.out = function() {
        return this._bg && (TweenMax.killTweensOf(this._bg),
        TweenMax.to(this._bg, .2, {
            opacity: 0,
            ease: "easeOutCubic"
        })),
        this._label ? (TweenMax.killTweensOf(this._label),
        TweenMax.to(this._label, .2, {
            color: window.application.colors.get("secondary"),
            opacity: 1,
            transform: "translateX(0px)",
            ease: "easeOutExpo",
            onComplete: function(t) {
                return function() {
                    return $(t._label).css("color", "")
                }
            }
            (this)
        })) : void 0
    }
    ,
    t.prototype.dealoc = function() {
        return this._bg = null ,
        this._label = null ,
        this._el = null 
    }
    ,
    t
}
();
var SiteMenuFilterButton, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteMenuFilterButton = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.events = {
        click: "onClick",
        mouseenter: "onMouseOver"
    },
    e.prototype.initialize = function() {
        return this.model.on("change:button-visible", this.onButtonVisibilityChange, this),
        this.model.on("change:visible", this.onVisibilityChange, this),
        this.onVisibilityChange()
    }
    ,
    e.prototype.update = function(t) {}
    ,
    e.prototype.onMouseOver = function() {
        return window.application.sounds.play("hover", 0)
    }
    ,
    e.prototype.onVisibilityChange = function() {
        var t, e;
        return t = this.$el.find("span").eq(0),
        e = t.data(this.model.get("visible") ? "alt-label" : "label"),
        t.text(e)
    }
    ,
    e.prototype.onButtonVisibilityChange = function() {}
    ,
    e.prototype.onClick = function(t) {
        var e;
        return this.model.get("button-visible") ? (t.preventDefault(),
        -1 !== Backbone.history.fragment.indexOf("filter") ? (window.application.router.navigate("/"),
        window.application.sounds.play("click", 2)) : (e = this.model.get("filters"),
        window.application.sounds.play("click", 2),
        window.application.router.navigate(e && e.length > 0 ? "filter/" + e.toString() : "filter"))) : void 0
    }
    ,
    e
}
(Backbone.View);
var SiteMenuFilterView, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteMenuFilterView = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.events = {
        "click li": "onListItemClick",
        "mouseenter li": "onListItemOver"
    },
    e.prototype.initialize = function() {
        return this.model.on("change:visible", this.onVisibilityChange, this),
        window.application.pages.on("updated", this.onPageUpdated, this)
    }
    ,
    e.prototype.update = function() {
        var t, e, i, r, n;
        for (this.$el.find("li").removeClass("checked"),
        e = this.model.get("filters"),
        n = [],
        i = 0,
        r = e.length; r > i; i++)
            t = e[i],
            n.push(this.$el.find("li[data-value='" + t + "']").addClass("checked"));
        return n
    }
    ,
    e.prototype.onListItemOver = function(t) {
        return window.application.sounds.play("hover", 5)
    }
    ,
    e.prototype.onListItemClick = function(t) {
        var e;
        return $(t.currentTarget).hasClass("checked") || window.application.sounds.play("click", 0),
        e = $(t.currentTarget).data("value"),
        this.model.toggleFilter(e)
    }
    ,
    e.prototype.onVisibilityChange = function() {
        return this.model.get("visible") ? this.$el.addClass("visible") : this.$el.removeClass("visible")
    }
    ,
    e
}
(Backbone.View);
var SiteMenuItem, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteMenuItem = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.events = {
        click: "onClick"
    },
    e.ANIMATION_TIME = .6,
    e.prototype._clickable = !0,
    e.prototype._selected = !1,
    e.prototype._index = -1,
    e.prototype._delay = 0,
    e.prototype._hoverBomb = null ,
    e.prototype._defaultLabel = null ,
    e.prototype._label = null ,
    e.prototype._color = null ,
    e.prototype._filters = null ,
    e.prototype._sphere = null ,
    e.prototype._hoverThumb = null ,
    e.prototype.initialize = function(t) {
        var e;
        return this._index = t.index,
        this._defaultLabel = this._label = this.$el.find("li .label").html(),
        this._hoverBomb = new HoverBomb(this.$el.find("li .button-animation-1-context")),
        this._hoverThumb = new Image,
        this.$el.data("thumb") ? this._hoverThumb.src = this.$el.data("thumb") : this._hoverThumb.src = "/static/images/about-contact-thumb.jpg",
        this.$el.data("color") ? this._color = Number("0x" + this.$el.data("color").split("#")[1]) : this._color = 16777215,
        e = this.$el.find("> li"),
        relax.browser.isTouch() ? (e.on("touchstart", relax.dom.bind(this, this.onMouseOver)),
        e.on("touchend", relax.dom.bind(this, this.onClick))) : (e.on("mouseover", relax.dom.bind(this, this.onMouseOver)),
        e.on("mouseout", relax.dom.bind(this, this.onMouseOut)),
        this.$el.on("mouseenter", relax.dom.bind(this, this.onMouseEnter))),
        this.$el.addClass("clickable"),
        this.$el.data("filters") && (this._filters = this.$el.data("filters").split(",")),
        this.$el.hasClass("text") ? this._sphere = window.application.threeD.rwatggSphere : this._sphere = window.application.threeD.getMesh(this._index)
    }
    ,
    e.prototype.setX = function(t, i) {
        return null  == i && (i = null ),
        null  === i && (i = e.ANIMATION_TIME),
        this._x = t,
        TweenMax.to(this.$el, i, {
            transform: "translateX(" + this._x + "px)",
            delay: this._delay,
            ease: "easeInOutExpo"
        })
    }
    ,
    e.prototype.hasFilter = function(t) {
        var e, i, r, n;
        if (!(this._filters && t.length > 0))
            return this.$el.removeClass("filtered-out");
        for (this.$el.removeClass("filtered-out"),
        i = !1,
        r = 0,
        n = t.length; n > r; r++)
            e = t[r],
            -1 === this._filters.indexOf(e) && (i = !0);
        return i ? this.$el.addClass("filtered-out") : void 0
    }
    ,
    e.prototype.resize = function(t) {
        var e, i, r, n;
        return null  == t && (t = null ),
        n = window.application.stageModel.w <= 620 ? 38 : window.application.stageModel.w <= 768 ? 90 : 100,
        r = this._clickable ? 0 : window.application.stageModel.w - n,
        this._selected ? (i = this.$el.hasClass("text"),
        e = window.application.stageModel.w <= 620 ? i ? 35 : 70 : window.application.stageModel.w <= 768 ? i ? 60 : 110 : i ? 50 : 130,
        this.setX(r - e, t)) : this.setX(r, t)
    }
    ,
    e.prototype.setSelected = function(t, e) {
        return this._clickable = e,
        this.$el.removeClass("clickable"),
        this._clickable && this.$el.addClass("clickable"),
        this._selected = t === this._index,
        -1 !== t && (this._delay = .01 * Math.abs(t - this._index)),
        this._selected ? (this.setText("back"),
        this.$el.addClass("clickable")) : (this._hoverBomb.out(),
        this.setText()),
        this.resize(!0)
    }
    ,
    e.prototype.setText = function(t) {
        var i, r, n;
        return null  == t && (t = null ),
        t = null  === t ? this._defaultLabel : t,
        "back" === t ? this.$el.hasClass("back-button") || this.$el.addClass("back-button") : this.$el.hasClass("back-button") && this.$el.removeClass("back-button"),
        this._label !== t ? (this._label = t,
        i = this.$el.find("li"),
        r = {
            index: 1,
            length: this._label.length
        },
        n = .5 * e.ANIMATION_TIME,
        TweenMax.to(r, n, {
            index: r.length,
            delay: this._selected ? n : .1,
            ease: "easeInOutCubic",
            onUpdate: function(t) {
                return function() {
                    var e;
                    return e = Math.round(r.index),
                    i.find(".label").html(t._label.substr(0, e))
                }
            }
            (this)
        })) : void 0
    }
    ,
    e.prototype.onMouseEnter = function(t) {
        var e, i;
        return i = this.$el.hasClass("social"),
        i ? void 0 : (e = $(t.currentTarget).attr("href"),
        window.application.pages.fetchCache(e))
    }
    ,
    e.prototype.onMouseOver = function(t) {
        var e, i;
        if (this._sphere && this._clickable && this._sphere.electricute(),
        this.$el.hasClass("clickable") && !this.$el.hasClass("filtered-out")) {
            if (this._hoverBomb.over(),
            i = this.$el.hasClass("text"),
            e = this.$el.hasClass("social"),
            !e)
                return window.application.threeD.rwatggSphere.hiFromMenuItem(this._hoverThumb && 0 !== this._hoverThumb.width ? this._hoverThumb : this._color);
            if (e)
                return window.application.sounds.play("hover", 7)
        }
    }
    ,
    e.prototype.onMouseOut = function(t) {
        return this._sphere && this._sphere.unelectricute(),
        this.$el.hasClass("clickable") && !this.$el.hasClass("filtered-out") ? (this._hoverBomb.out(),
        window.application.threeD.rwatggSphere.unhiFromMenuItem()) : void 0
    }
    ,
    e.prototype.onClick = function(t) {
        var e, i;
        return relax.browser.isTouch() && this.onMouseOut(),
        t.preventDefault(),
        this._hoverBomb.out(),
        this._clickable ? (e = this.$el.attr("href"),
        1 === this.$el.find("> li[type=social]").length ? (window.application.tracking.event("social", "click", e),
        window.open(e),
        window.application.sounds.play("click", 5)) : (window.application.router.navigate(e),
        window.application.sounds.play("click", 3),
        (i = this.$el.hasClass("text")) ? void 0 : window.application.threeD.rwatggSphere.hiFromMenuItem(this._color, !0))) : (window.application.router.navigate(window.application.pages.model.get("prev-model") ? window.application.pages.model.get("prev-model").get("url") : "/"),
        window.application.sounds.play("click", 1))
    }
    ,
    e
}
(Backbone.View);
var SiteMenu, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteMenu = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype._y = 0,
    e.prototype._yTarget = 0,
    e.prototype._minMenuY = 0,
    e.prototype._topPadding = 0,
    e.prototype._hiddenPadding = 0,
    e.prototype._savedScrollTop = 0,
    e.prototype._topPaddingTarget = 0,
    e.prototype._backButtonVisible = !1,
    e.prototype._initialPositionSet = !1,
    e.prototype._swiper = null ,
    e.prototype._filterModel = null ,
    e.prototype._animatedIn = !1,
    e.prototype._hidden = null ,
    e.prototype._items = null ,
    e.prototype._index = -1,
    e.prototype.initialize = function() {
        var t, e, i, r, n;
        for (this._filterModel = new SiteMenuFilterModel,
        window.application.pages.on("updated", this.onPageUpdated, this),
        this._items = [],
        e = 0,
        n = this.$el.find("a"),
        i = 0,
        r = n.length; r > i; i++)
            t = n[i],
            this._items.push(new SiteMenuItem({
                el: t,
                index: e++
            }));
        return relax.browser.isTouch() && (this._swiper = new relax.tools.DragAndSwipe($(window),{
            preventMoveDefault: !1
        }),
        this._swiper.addDrag(relax.dom.bind(this, this.onDrag))),
        window.application.stageModel.bind(StageModel.RESIZE, this.resize, this)
    }
    ,
    e.prototype.peakABoo = function() {
        return Modernizr.touch || window.application.stageModel.bind(StageModel.SCROLL, this.onScroll, this),
        this.setY(window.application.stageModel.h),
        this.$el.css("opacity", 1),
        Modernizr.touch ? this.setYTarget(0) : void 0
    }
    ,
    e.prototype.onPageUpdated = function(t) {
        var e, i, r, n, o, a, s, l, h, c, u, p, d, f, m;
        if (m = t.get("url"),
        this._index = this.$el.find("a[href='/" + m + "']").index(),
        r = -1 !== m.indexOf("filter"),
        o = -1 !== m.indexOf("impressum"),
        n = "root" === t.get("type") || "" === t.get("type"),
        this.setVisibility("" === m || "/" === m || r || -1 !== m.indexOf("?") ? e = !0 : e = !1),
        this.$el.hasClass("impressum-showing") && this.$el.removeClass("impressum-showing"),
        this._swiper && (Modernizr.touch && !n ? this._swiper.removeEvents() : this._swiper.addEvents()),
        this._backButtonPosition = !1,
        r) {
            for (this.$el.find("#filter-button").addClass("filter-mode"),
            this.$el.find("#header-list").addClass("filter-mode"),
            i = this._filterModel.get("filters"),
            u = this._items,
            d = [],
            s = 0,
            h = u.length; h > s; s++)
                a = u[s],
                d.push(a.hasFilter(i));
            return d
        }
        if (o)
            return this.$el.addClass("impressum-showing");
        for (this.$el.find("#filter-button").removeClass("filter-mode"),
        this.$el.find("#header-list").removeClass("filter-mode"),
        this.$el.find(".back-button").length > 0 && (this._backButtonPosition = this.$el.find(".back-button").position().top + 40),
        p = this._items,
        f = [],
        l = 0,
        c = p.length; c > l; l++)
            a = p[l],
            f.push(a.hasFilter([]));
        return f
    }
    ,
    e.prototype.renderQueCall = function() {
        var t, e, i, r;
        return r = this._yTarget - this._y,
        i = this._topPaddingTarget - this._topPadding,
        Math.abs(Math.round(r)) > 0 || Math.abs(Math.round(i)) > 0 ? (this._y += r * ScrollHandler.TIME_SCROLL_SPEED,
        this._topPadding += i * ScrollHandler.TIME_SCROLL_SPEED) : relax.tools.renderQue.remove(this),
        t = this._y + this._topPadding,
        this._backButtonPosition !== !1 && (e = t + this._backButtonPosition,
        0 > e ? t += -1 * e : e > this._topPaddingTarget && (t = this._topPaddingTarget - this._backButtonPosition)),
        this.setY(t)
    }
    ,
    e.prototype.setY = function(t) {
        return this.$el.css({
            transform: "translate3d(0px, " + t + "px, 0px)"
        })
    }
    ,
    e.prototype.resize = function(t) {
        var e, i, r, n, o, a, s;
        for (this._topPaddingTarget = t.h - 60,
        o = t.h - this._topPaddingTarget,
        e = this.$el.find("#header-list").height(),
        this._minMenuY = -1 * e,
        this._initialPositionSet || (this._topPadding = this._topPaddingTarget + 2 * o),
        this.renderQueCall(),
        this._initialPositionSet = !0,
        null  != (a = this._swiper) && a.setBoundries({
            minSwipeY: this._minMenuY,
            maxSwipeY: 1
        }),
        s = this._items,
        r = 0,
        n = s.length; n > r; r++)
            i = s[r],
            i.resize();
        return this.setScrollHeight(),
        relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }
    ,
    e.prototype.setScrollHeight = function() {
        var t;
        return this._hidden || Modernizr.touch ? void 0 : null  != (t = window.application.scrollHandler) ? t.setHeight(3 * window.application.stageModel.h) : void 0
    }
    ,
    e.prototype.onDrag = function(t) {
        return this._hidden ? void 0 : this.setYTarget(t.y)
    }
    ,
    e.prototype.onScroll = function(t) {
        var e, i;
        return null  != (i = t.event) && i.preventDefault(),
        e = window.application.scrollHandler.getPercent(),
        this.setYTarget(e * this._minMenuY)
    }
    ,
    e.prototype.setYTarget = function(t) {
        return this._yTarget = t + this._hiddenPadding,
        this._animatedIn || (this._y = this._yTarget),
        this._animatedIn = !0,
        relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }
    ,
    e.prototype.setVisibility = function(t) {
        var e, i, r, n;
        if (this._hidden !== !t)
            for (this._hidden = !t,
            this.$el.removeClass("hidden"),
            this._hidden && this.$el.addClass("hidden"),
            this._filterModel.set("button-visible", t),
            Modernizr.touch ? (this._savedScrollTop = 0,
            this._hiddenPadding = 0) : this._hidden ? (this._savedScrollTop = window.application.stageModel.scrolltop,
            this._hiddenPadding = this._yTarget) : (this.setScrollHeight(),
            window.application.scrollHandler.setY(this._savedScrollTop),
            this._hiddenPadding = 0),
            n = this._items,
            i = 0,
            r = n.length; r > i; i++)
                e = n[i],
                e.setSelected(this._index, !this._hidden);
        return this.setScrollHeight()
    }
    ,
    e
}
(Backbone.View);
var SiteFooter, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
SiteFooter = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.events = {
        "click a": "onItemClick",
        "click .mute-btn": "onMuteButtonClick"
    },
    e.prototype._impressumLabel = null ,
    e.prototype._backShowing = !1,
    e.prototype.initialize = function() {
        return this._impressumLabel = this.$el.find("a").text(),
        window.application.pages.on("updated", this.onPageUpdated, this),
        this.$el.addClass("show")
    }
    ,
    e.prototype.onPageUpdated = function(t) {
        var e, i;
        return i = t.get("url"),
        e = -1 !== i.indexOf("impressum"),
        e ? (this._backShowing = !0,
        this.$el.find("a").text("back")) : (this._backShowing = !1,
        this.$el.find("a").text(this._impressumLabel)),
        e || "" === i ? this.$el.removeClass("hide") : this.$el.addClass("hide")
    }
    ,
    e.prototype.onMuteButtonClick = function(t) {
        return $(t.currentTarget).toggleClass("selected"),
        window.application.sounds.toggleMute()
    }
    ,
    e.prototype.onItemClick = function(t) {
        var e;
        return t.preventDefault(),
        e = this._backShowing ? "/" : $(t.currentTarget).attr("href"),
        window.application.router.navigate(e)
    }
    ,
    e
}
(Backbone.View);
var CaseGalleryImage, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
CaseGalleryImage = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.init = function(t) {
        return _.extend(this, Backbone.Events)
    }
    ,
    e.prototype.onImageLoaded = function() {
        return e.__super__.onImageLoaded.call(this),
        this.data.naturalWidth > 600 && this.data.naturalHeight > 300 ? ($(this.data).click(relax.dom.bind(this, this.onClicky)),
        $(this.data).addClass("clickable")) : void 0
    }
    ,
    e.prototype.onClicky = function() {
        return this.trigger("click", $(this.data).attr("src"))
    }
    ,
    e.prototype.position = function(t, e, i, r) {
        return $(this.data).css({
            left: t,
            top: e,
            width: i,
            height: r
        })
    }
    ,
    e.prototype.dealoc = function() {
        return this.data && $(this.data).unbind(),
        e.__super__.dealoc.call(this)
    }
    ,
    e
}
(relax.displayObject.Image);
var CaseGallery, CaseGalleryIFrame, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
CaseGallery = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype._elements = null ,
    e.prototype._loaded = !1,
    e.prototype.events = {
        click: "onGalleryClick"
    },
    e.prototype.initialize = function() {
        var t, e, i, r, n;
        this._elements = [],
        t = this.$el.find("iframe, video"),
        r = [],
        t.each(function(t) {
            return function(t, e) {
                return r[$(e).index()] = new CaseGalleryIFrame({
                    el: e
                })
            }
        }
        (this)),
        e = this.$el.find("> img"),
        e.each(function(t) {
            return function(e, i) {
                var n;
                return n = new CaseGalleryImage,
                r[$(i).index()] = n,
                n.load($(i).attr("src"), relax.dom.bind(t, t.onImageLoaded), !0),
                $(i).attr("src", ""),
                $(n.data).attr("width", $(i).attr("width")),
                $(n.data).attr("height", $(i).attr("height")),
                $(n.data).attr("data-transparent", $(i).attr("data-transparent")),
                $(i).replaceWith(n.data)
            }
        }
        (this)),
        e.length > 0 && this.$el.append("<div class='pseudo-loader'><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 200 200' preserveAspectRatio='none' xml:space='preserve'><g><rect fill='none' vector-effect='non-scaling-stroke' stroke-width='1px' width='200' height='200'/></g></svg></div>");
        for (i in r)
            n = r[i],
            this._elements.push(n);
        return this.resize(),
        0 === e.length ? this.onImageLoaded() : void 0
    }
    ,
    e.prototype.onImageLoaded = function() {
        var t, e, i, r;
        for (this._loaded = !0,
        r = this._elements,
        e = 0,
        i = r.length; i > e; e++)
            t = r[e],
            t.loaded || (this._loaded = !1);
        return this._loaded ? (setTimeout(function(t) {
            return function() {
                var e;
                try {
                    if (-1 !== t.$el.find("iframe").attr("src").indexOf("/static/iframes/"))
                        return t.$el.find("iframe").contents().find("body").addClass("visible")
                } catch (i) {
                    e = i
                }
            }
        }
        (this), 1e3),
        TweenLite.to(this.$el.find(".pseudo-loader"), 1, {
            opacity: 0,
            ease: "easeOutCubic",
            onComplete: function(t) {
                return function() {
                    return t.$el.find(".pseudo-loader").remove()
                }
            }
            (this)
        }),
        this.$el.addClass("loaded"),
        this.resize()) : void 0
    }
    ,
    e.prototype.onGalleryClick = function(t) {
        var e;
        return window.application.stageModel.w <= 768 ? (e = this.$el.find("> .selected").index(),
        e++,
        e %= this.$el.find("> *").length,
        this.$el.find("> .selected").removeClass("selected"),
        this.$el.find("> *").eq(e).addClass("selected")) : void 0
    }
    ,
    e.prototype.resize = function() {
        var t, e, i, r, n, o, a, s, l, h, c, u, p, d, f, m, g, E, y, v, _, x, T;
        for (T = 0,
        v = 0,
        h = 0,
        l = this.$el.width(),
        g = .6 * window.application.stageModel.h,
        a = Math.max(350, g),
        s = 0,
        p = 1 === this._elements.length ? 1 : .5,
        window.application.stageModel.w < 768 ? (p = 1,
        this.$el.find("> *").eq(0).addClass("selected")) : this.$el.find("> *").removeClass("selected"),
        i = 1 === p ? g : .6 * g,
        r = 1 === p ? l : .5 * l,
        y = this._elements,
        u = 0,
        m = y.length; m > u; u++)
            E = y[u],
            o = E.data ? E.data : E.el,
            e = parseInt($(o).attr("width")),
            t = parseInt($(o).attr("height")),
            n = t / e,
            v = r,
            h = r * n,
            h > i && (n = e / t,
            h = i,
            v = h * n),
            d = this._elements.indexOf(E),
            f = v > h,
            T = 0,
            x = 0,
            c = a * p,
            _ = l * p,
            1 === p ? (x = .5 * _ - .5 * v,
            T = .5 * c - .5 * h) : (f ? (0 === d || 2 === d ? T = c - .5 * h : 3 === d && (T = a - h),
            1 === d || 3 === d ? x = _ - .5 * v : 2 === d ? x = _ : 0 === d && (x = _ - v)) : (0 === d || 2 === d ? T = c - .5 * h : 3 === d && (T = a - h),
            0 === d ? x = .475 * l - v : 1 === d || 3 === d ? (x = .5 * l - .5 * v,
            x += 1 === d ? l * -.1 : .05 * l) : 2 === d && (x = .525 * l)),
            0 === d ? T += .05 * a : 1 === d || 3 === d ? T += 1 === d ? 15 : -15 : 2 === d && (T -= .05 * a)),
            T + h > s && (s = T + h),
            E.position(x, T, v, h);
        return this.$el.css({
            height: s
        })
    }
    ,
    e.prototype.dealoc = function() {
        var t, e, i, r;
        for (r = this._elements,
        e = 0,
        i = r.length; i > e; e++)
            t = r[e],
            "function" == typeof t.dealoc && t.dealoc();
        return this.unbind(),
        this.remove()
    }
    ,
    e
}
(Backbone.View),
CaseGalleryIFrame = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.loaded = !0,
    e.prototype.position = function(t, e, i, r) {
        return this.$el.css({
            left: t,
            top: e,
            width: i,
            height: r
        })
    }
    ,
    e.prototype.dealoc = function() {
        return this.unbind(),
        this.remove()
    }
    ,
    e
}
(Backbone.View);
var CasePage, CaseSection, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
CasePage = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype._y = 0,
    e.prototype._yTarget = 0,
    e.prototype._initResizeTimeout = null ,
    e.prototype._sections = null ,
    e.prototype._hoverBombs = null ,
    e.prototype.events = {
        "mouseenter .text > div a": "onTextATagEnter",
        "mouseenter .text > h1 a": "onTextATagEnter"
    },
    e.prototype.render = function() {
        return e.__super__.render.call(this),
        this.$el.find("span").attr("style", ""),
        Modernizr.touch ? (this._swiper = new relax.tools.DragAndSwipe(this.$el),
        this._swiper.addDrag(relax.dom.bind(this, this.onDrag))) : window.application.stageModel.bind(StageModel.SCROLL, this.onScroll, this),
        this._sections = [],
        this.$el.find("section.content").each(function(t) {
            return function(e, i) {
                return t._sections.push(new CaseSection({
                    el: i
                }))
            }
        }
        (this)),
        this.resize(window.application.stageModel),
        this.$el.find(".gallery > p").remove(),
        this.model.isTextType() && this.$el.addClass("textpage"),
        this._hoverBombs = [],
        this.$el.find(".text > div a, .text > h1 a").each(function(t) {
            return function(e, i) {
                return $(i).data("index", e),
                t._hoverBombs.push(new HoverBomb($(i),!0))
            }
        }
        (this)),
        setTimeout(function(t) {
            return function() {
                return t.renderQueCall()
            }
        }
        (this), 0)
    }
    ,
    e.prototype.onTextATagEnter = function(t) {
        var e;
        return e = $(t.currentTarget).data("index"),
        this._hoverBombs[e].over()
    }
    ,
    e.prototype.resize = function(t) {
        var e, i, r, n, o, a;
        for (a = parseInt(this.$el.find(".content").css("margin-top"), 10),
        isNaN(a) && (a = 0),
        n = this._sections,
        e = 0,
        i = n.length; i > e; e++)
            o = n[e],
            o.resize(),
            o.setTop(a),
            r = parseInt(o.$el.css("margin-bottom"), 10),
            isNaN(r) && (r = 0),
            a += r,
            a += o.$el.height();
        return setTimeout(function(e) {
            return function() {
                var i, r, n;
                return e._height = e.$el.height(),
                null  != (i = e._swiper) && i.setBoundries({
                    minSwipeY: -1 * (e._height - t.halfh),
                    maxSwipeY: 1
                }),
                null  != (r = window.application.scrollHandler) && r.setHeight(e._height),
                null  != (n = window.application.scrollHandler) ? n.setY(0) : void 0
            }
        }
        (this), 0)
    }
    ,
    e.prototype.onDrag = function(t) {
        return this.setYTarget(t.y)
    }
    ,
    e.prototype.onScroll = function(t) {
        var e, i;
        return this._height !== this.$el.height() && this.resize(window.application.stageModel),
        null  != (i = t.event) && i.preventDefault(),
        e = window.application.scrollHandler.getPercent(),
        this.setYTarget(e * (window.application.stageModel.h - this._height))
    }
    ,
    e.prototype.setYTarget = function(t) {
        return this._yTarget = t,
        relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }
    ,
    e.prototype.dealoc = function() {
        var t, i, r, n;
        for (this._initResizeTimeout && clearTimeout(this._initResizeTimeout),
        r = this._sections,
        t = 0,
        i = r.length; i > t; t++)
            n = r[t],
            n.dealoc();
        return e.__super__.dealoc.call(this)
    }
    ,
    e.prototype.animateOut = function(t) {
        var e, i, r, n, o;
        for (window.application.stageModel.unbindAll(this),
        null  != (r = this._swiper) && r.dealoc(),
        n = this._sections,
        e = 0,
        i = n.length; i > e; e++)
            o = n[e],
            o.remove();
        return setTimeout(function(t) {
            return function() {
                return t.dealoc()
            }
        }
        (this), 1e3)
    }
    ,
    e.prototype.renderQueCall = function() {
        var t, e, i, r, n, o;
        for (o = this._yTarget - this._y,
        Math.abs(Math.round(o)) > 0 ? this._y += o * ScrollHandler.TIME_SCROLL_SPEED : relax.tools.renderQue.remove(this),
        i = this._sections,
        r = [],
        t = 0,
        e = i.length; e > t; t++)
            n = i[t],
            r.push(n.setY(this._y));
        return r
    }
    ,
    e
}
(DefaultPage),
CaseSection = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype._height = 0,
    e.prototype._gallery = null ,
    e.prototype._visible = !1,
    e.prototype._removing = !1,
    e.prototype.events = {
        "click .launch-btn": "onLaunchButtonClick",
        "mouseenter .launch-btn": "onLaunchButtonOver"
    },
    e.prototype.initialize = function() {
        return this.render()
    }
    ,
    e.prototype.onLaunchButtonOver = function(t) {
        return window.application.sounds.play("hover", 0)
    }
    ,
    e.prototype.onLaunchButtonClick = function(t) {
        return window.application.sounds.play("click", 5)
    }
    ,
    e.prototype.render = function() {
        var t;
        return this.$el.find(".gallery").length > 0 ? (t = CaseGallery,
        this._gallery = new t({
            el: this.$el.find(".gallery")[0]
        })) : void 0
    }
    ,
    e.prototype.setY = function(t) {
        var e, i;
        if (!this._removing)
            return e = t + this.top + this._height,
            i = t + this.top,
            this._visible && this.$el.css({
                transform: "translate3d(0px, " + t + "px, 0px)"
            }),
            this.setVisibility(e > 0 && i < window.application.stageModel.h)
    }
    ,
    e.prototype.setVisibility = function(t) {
        var e, i;
        return "mobile" !== window.application.stageModel.currentMQ || this.$el.hasClass("show") ? "mobile" !== window.application.stageModel.currentMQ && this._visible !== t ? (this._visible = t,
        this._visible ? (this.$el.addClass("visible"),
        setTimeout(function(t) {
            return function() {
                return t.$el.addClass("show"),
                t.$el.find("video").each(function(t, e) {
                    return e.pause(),
                    e.currentTime = 0,
                    e.load(),
                    e.play()
                }
                )
            }
        }
        (this), 100),
        null  != (e = this._gallery) && "function" == typeof e.setEnabled ? e.setEnabled(!0) : void 0) : (this.$el.removeClass("visible"),
        this.$el.find("video").each(function(t, e) {
            return e.pause()
        }
        ),
        "mobile" !== window.application.stageModel.currentMQ && setTimeout(function(t) {
            return function() {
                return t.$el.removeClass("show")
            }
        }
        (this), 0),
        null  != (i = this._gallery) && "function" == typeof i.setEnabled ? i.setEnabled(!1) : void 0)) : void 0 : (this.$el.addClass("visible"),
        setTimeout(function(t) {
            return function() {
                return t.$el.addClass("show")
            }
        }
        (this), 100),
        this._visible = !0)
    }
    ,
    e.prototype.remove = function() {
        return this._removing = !0,
        this.$el.removeClass(this._visible ? "show" : "visible")
    }
    ,
    e.prototype.dealoc = function() {
        var t;
        return null  != (t = this._gallery) && t.dealoc(),
        this.unbind(),
        this.remove()
    }
    ,
    e.prototype.setTop = function(t) {
        return this.top = t,
        this._height = this.$el.height()
    }
    ,
    e.prototype.resize = function() {
        var t;
        return this._height = this.$el.height(),
        null  != (t = this._gallery) ? t.resize() : void 0
    }
    ,
    e
}
(Backbone.View);
var AboutPage, extend = function(t, e) {
    function i() {
        this.constructor = t
    }
    for (var r in e)
        hasProp.call(e, r) && (t[r] = e[r]);
    return i.prototype = e.prototype,
    t.prototype = new i,
    t.__super__ = e.prototype,
    t
}
, hasProp = {}.hasOwnProperty;
AboutPage = function(t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }
    return extend(e, t),
    e.prototype.render = function(t) {
        return null  == t && (t = null ),
        _.extend(this.events, {
            "click .gallery > img": "onAboutImageClick"
        }),
        e.__super__.render.call(this, t)
    }
    ,
    e.prototype.onAboutImageClick = function(t) {
        return t.preventDefault(),
        0 === t.currentTarget.index() ? window.open("http://www.awwwards.com/RWATGG/portfolio") : 1 === t.currentTarget.index() ? window.open("http://www.thefwa.com/profile/relax-we-are-the-good-guys") : 2 === t.currentTarget.index() ? window.open("http://www.creativecircle.dk/") : 3 === t.currentTarget.index() ? window.open("https://www.thinkwithgoogle.com/") : void 0
    }
    ,
    e
}
(CasePage),
window.application = {
    stageModel: null ,
    colors: null ,
    sounds: null ,
    pages: null ,
    siteMenu: null ,
    threeD: null ,
    footer: null ,
    intro: null ,
    initialize: function() {
        return this.stageModel = new StageModel({
            mediaqueries: [{
                horizontalBreakPoint: 768,
                eventName: "mobile"
            }, {
                horizontalBreakPoint: 1e5,
                eventName: "desktop"
            }]
        }),
        relax.browser.getIOSVersion() > 0 && relax.browser.getIOSVersion() < 8 && $("canvas#wires").css("display", "none"),
        this.tracking = new GATracking,
        PageModel.addAliasRoutes({
            about: "case",
            contact: "case",
            impressum: "case"
        }),
        PageModel.setPageTypes({
            "*": DefaultPage,
            "case": CasePage,
            about: AboutPage,
            contact: CasePage,
            impressum: CasePage
        }),
        DefaultPage.setStageModel(this.stageModel),
        this.pages = new PagesCollection({
            modelClasses: {
                "*": RWATGGPageModel
            },
            updateTypes: ["menuFilter", "menuFilterType"],
            $context: $("#page-content"),
            rootURL: "/"
        }),
        this.colors = new ColorTheme,
        window.routes.workitem && (window.routes["case"] = window.routes.workitem,
        delete window.routes.workitem),
        window.templates.workitem && (window.templates["case"] = window.templates.workitem,
        delete window.templates.workitem),
        this.router = new Router({
            pages: this.pages,
            routes: window.routes,
            tracking: this.tracking
        }),
        this.intro = new IntroView({
            el: $("#intro-context")[0]
        }),
        this.intro.on("done", this.onIntroFinished, this),
        this.threeD = new ThreeWorld({
            cases: $("#header-list > a:not('.text'):not('.social')")
        }),
        this.siteMenu = new SiteMenu({
            el: $("#header-menu")[0]
        }),
        this.sounds = new SoundController,
        this.intro.runTheShow()
    },
    onIntroFinished: function() {
        return this.scrollHandler = new ScrollHandler,
        this.siteMenu.peakABoo(),
        this.footer = new SiteFooter({
            el: $("#footer")[0]
        }),
        this.threeD.peakABoo(),
        this.router.start()
    }
},
$(function() {
    return relax.browser.isTouch() && document.body.classList.add("touch"),
    relax.setLog(-1 === window.location.href.indexOf("dev.")),
    application.initialize(),
    !0
});
//# sourceMappingURL=main.min.js.map
